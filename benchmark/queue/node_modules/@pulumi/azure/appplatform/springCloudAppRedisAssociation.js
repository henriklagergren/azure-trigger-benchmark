"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCloudAppRedisAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Associates a Spring Cloud Application with a Redis Cache.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("exampleSpringCloudService", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleSpringCloudApp = new azure.appplatform.SpringCloudApp("exampleSpringCloudApp", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     serviceName: exampleSpringCloudService.name,
 * });
 * const exampleCache = new azure.redis.Cache("exampleCache", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     capacity: 0,
 *     family: "C",
 *     skuName: "Basic",
 *     enableNonSslPort: true,
 * });
 * const exampleSpringCloudAppRedisAssociation = new azure.appplatform.SpringCloudAppRedisAssociation("exampleSpringCloudAppRedisAssociation", {
 *     springCloudAppId: exampleSpringCloudApp.id,
 *     redisCacheId: exampleCache.id,
 *     redisAccessKey: exampleCache.primaryAccessKey,
 *     sslEnabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application Redis Association can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/bindings/bind1
 * ```
 */
class SpringCloudAppRedisAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["name"] = state ? state.name : undefined;
            inputs["redisAccessKey"] = state ? state.redisAccessKey : undefined;
            inputs["redisCacheId"] = state ? state.redisCacheId : undefined;
            inputs["springCloudAppId"] = state ? state.springCloudAppId : undefined;
            inputs["sslEnabled"] = state ? state.sslEnabled : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.redisAccessKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'redisAccessKey'");
            }
            if ((!args || args.redisCacheId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'redisCacheId'");
            }
            if ((!args || args.springCloudAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudAppId'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["redisAccessKey"] = args ? args.redisAccessKey : undefined;
            inputs["redisCacheId"] = args ? args.redisCacheId : undefined;
            inputs["springCloudAppId"] = args ? args.springCloudAppId : undefined;
            inputs["sslEnabled"] = args ? args.sslEnabled : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SpringCloudAppRedisAssociation.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SpringCloudAppRedisAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SpringCloudAppRedisAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SpringCloudAppRedisAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudAppRedisAssociation.__pulumiType;
    }
}
exports.SpringCloudAppRedisAssociation = SpringCloudAppRedisAssociation;
/** @internal */
SpringCloudAppRedisAssociation.__pulumiType = 'azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation';
//# sourceMappingURL=springCloudAppRedisAssociation.js.map