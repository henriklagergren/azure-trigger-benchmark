import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manage an Azure Spring Cloud Application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("exampleSpringCloudService", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleSpringCloudApp = new azure.appplatform.SpringCloudApp("exampleSpringCloudApp", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     serviceName: exampleSpringCloudService.name,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudApp:SpringCloudApp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp
 * ```
 */
export declare class SpringCloudApp extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudAppState, opts?: pulumi.CustomResourceOptions): SpringCloudApp;
    /**
     * Returns true if the given object is an instance of SpringCloudApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SpringCloudApp;
    /**
     * The Fully Qualified DNS Name of the Spring Application in the service.
     */
    readonly fqdn: pulumi.Output<string>;
    /**
     * Is only https allowed? Defaults to `false`.
     */
    readonly httpsOnly: pulumi.Output<boolean | undefined>;
    /**
     * An `identity` block as defined below.
     */
    readonly identity: pulumi.Output<outputs.appplatform.SpringCloudAppIdentity | undefined>;
    /**
     * Does the Spring Cloud Application have public endpoint? Defaults to `false`.
     */
    readonly isPublic: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the name of the Spring Cloud Application. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * An `persistentDisk` block as defined below.
     */
    readonly persistentDisk: pulumi.Output<outputs.appplatform.SpringCloudAppPersistentDisk>;
    /**
     * Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * Is End to End TLS Enabled? Defaults to `false`.
     */
    readonly tlsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The public endpoint of the Spring Cloud Application.
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a SpringCloudApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudAppArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SpringCloudApp resources.
 */
export interface SpringCloudAppState {
    /**
     * The Fully Qualified DNS Name of the Spring Application in the service.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Is only https allowed? Defaults to `false`.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.appplatform.SpringCloudAppIdentity>;
    /**
     * Does the Spring Cloud Application have public endpoint? Defaults to `false`.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Spring Cloud Application. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `persistentDisk` block as defined below.
     */
    persistentDisk?: pulumi.Input<inputs.appplatform.SpringCloudAppPersistentDisk>;
    /**
     * Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Is End to End TLS Enabled? Defaults to `false`.
     */
    tlsEnabled?: pulumi.Input<boolean>;
    /**
     * The public endpoint of the Spring Cloud Application.
     */
    url?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SpringCloudApp resource.
 */
export interface SpringCloudAppArgs {
    /**
     * Is only https allowed? Defaults to `false`.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.appplatform.SpringCloudAppIdentity>;
    /**
     * Does the Spring Cloud Application have public endpoint? Defaults to `false`.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Spring Cloud Application. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `persistentDisk` block as defined below.
     */
    persistentDisk?: pulumi.Input<inputs.appplatform.SpringCloudAppPersistentDisk>;
    /**
     * Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     */
    serviceName: pulumi.Input<string>;
    /**
     * Is End to End TLS Enabled? Defaults to `false`.
     */
    tlsEnabled?: pulumi.Input<boolean>;
}
