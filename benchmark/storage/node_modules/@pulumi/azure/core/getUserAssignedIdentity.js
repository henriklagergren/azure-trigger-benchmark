"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUserAssignedIdentityOutput = exports.getUserAssignedIdentity = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to access information about an existing User Assigned Identity.
 *
 * ## Example Usage
 * ### Reference An Existing)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.authorization.getUserAssignedIdentity({
 *     name: "name_of_user_assigned_identity",
 *     resourceGroupName: "name_of_resource_group",
 * });
 * export const uaiClientId = example.then(example => example.clientId);
 * export const uaiPrincipalId = example.then(example => example.principalId);
 * export const uaiTenantId = example.then(example => example.tenantId);
 * ```
 */
/** @deprecated azure.core.getUserAssignedIdentity has been deprecated in favor of azure.authorization.getUserAssignedIdentity */
function getUserAssignedIdentity(args, opts) {
    pulumi.log.warn("getUserAssignedIdentity is deprecated: azure.core.getUserAssignedIdentity has been deprecated in favor of azure.authorization.getUserAssignedIdentity");
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:core/getUserAssignedIdentity:getUserAssignedIdentity", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getUserAssignedIdentity = getUserAssignedIdentity;
function getUserAssignedIdentityOutput(args, opts) {
    return pulumi.output(args).apply(a => getUserAssignedIdentity(a, opts));
}
exports.getUserAssignedIdentityOutput = getUserAssignedIdentityOutput;
//# sourceMappingURL=getUserAssignedIdentity.js.map