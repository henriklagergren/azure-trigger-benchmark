import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manages a policy set definition.
 *
 * > **NOTE:**  Policy set definitions (also known as policy initiatives) do not take effect until they are assigned to a scope using a Policy Set Assignment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.policy.PolicySetDefinition("example", {
 *     displayName: "Test Policy Set",
 *     parameters: `    {
 *         "allowedLocations": {
 *             "type": "Array",
 *             "metadata": {
 *                 "description": "The list of allowed locations for resources.",
 *                 "displayName": "Allowed locations",
 *                 "strongType": "location"
 *             }
 *         }
 *     }
 * `,
 *     policyDefinitionReferences: [{
 *         parameterValues: `    {
 *       "listOfAllowedLocations": {"value": "[parameters('allowedLocations')]"}
 *     }
 *     `,
 *         policyDefinitionId: "/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988",
 *     }],
 *     policyType: "Custom",
 * });
 * ```
 *
 * ## Import
 *
 * Policy Set Definitions can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:policy/policySetDefinition:PolicySetDefinition example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policySetDefinitions/testPolicySet
 * ```
 *
 *  or
 *
 * ```sh
 *  $ pulumi import azure:policy/policySetDefinition:PolicySetDefinition example /providers/Microsoft.Management/managementGroups/my-mgmt-group-id/providers/Microsoft.Authorization/policySetDefinitions/testPolicySet
 * ```
 */
export declare class PolicySetDefinition extends pulumi.CustomResource {
    /**
     * Get an existing PolicySetDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicySetDefinitionState, opts?: pulumi.CustomResourceOptions): PolicySetDefinition;
    /**
     * Returns true if the given object is an instance of PolicySetDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PolicySetDefinition;
    /**
     * The description of the policy set definition.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the policy set definition.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The name of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     *
     * @deprecated Deprecated in favour of `management_group_name`
     */
    readonly managementGroupId: pulumi.Output<string>;
    /**
     * The name of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     */
    readonly managementGroupName: pulumi.Output<string>;
    /**
     * The metadata for the policy set definition. This is a json object representing additional metadata that should be stored with the policy definition.
     */
    readonly metadata: pulumi.Output<string>;
    /**
     * The name of the policy set definition. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
     */
    readonly parameters: pulumi.Output<string | undefined>;
    /**
     * One or more `policyDefinitionGroup` blocks as defined below.
     */
    readonly policyDefinitionGroups: pulumi.Output<outputs.policy.PolicySetDefinitionPolicyDefinitionGroup[] | undefined>;
    /**
     * One or more `policyDefinitionReference` blocks as defined below.
     */
    readonly policyDefinitionReferences: pulumi.Output<outputs.policy.PolicySetDefinitionPolicyDefinitionReference[]>;
    /**
     * The policy definitions for the policy set definition. This is a json object representing the bundled policy definitions.
     *
     * @deprecated Deprecated in favour of `policy_definition_reference`
     */
    readonly policyDefinitions: pulumi.Output<string>;
    /**
     * The policy set type. Possible values are `BuiltIn` or `Custom`. Changing this forces a new resource to be created.
     */
    readonly policyType: pulumi.Output<string>;
    /**
     * Create a PolicySetDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicySetDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PolicySetDefinition resources.
 */
export interface PolicySetDefinitionState {
    /**
     * The description of the policy set definition.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the policy set definition.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     *
     * @deprecated Deprecated in favour of `management_group_name`
     */
    managementGroupId?: pulumi.Input<string>;
    /**
     * The name of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     */
    managementGroupName?: pulumi.Input<string>;
    /**
     * The metadata for the policy set definition. This is a json object representing additional metadata that should be stored with the policy definition.
     */
    metadata?: pulumi.Input<string>;
    /**
     * The name of the policy set definition. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
     */
    parameters?: pulumi.Input<string>;
    /**
     * One or more `policyDefinitionGroup` blocks as defined below.
     */
    policyDefinitionGroups?: pulumi.Input<pulumi.Input<inputs.policy.PolicySetDefinitionPolicyDefinitionGroup>[]>;
    /**
     * One or more `policyDefinitionReference` blocks as defined below.
     */
    policyDefinitionReferences?: pulumi.Input<pulumi.Input<inputs.policy.PolicySetDefinitionPolicyDefinitionReference>[]>;
    /**
     * The policy definitions for the policy set definition. This is a json object representing the bundled policy definitions.
     *
     * @deprecated Deprecated in favour of `policy_definition_reference`
     */
    policyDefinitions?: pulumi.Input<string>;
    /**
     * The policy set type. Possible values are `BuiltIn` or `Custom`. Changing this forces a new resource to be created.
     */
    policyType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PolicySetDefinition resource.
 */
export interface PolicySetDefinitionArgs {
    /**
     * The description of the policy set definition.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the policy set definition.
     */
    displayName: pulumi.Input<string>;
    /**
     * The name of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     *
     * @deprecated Deprecated in favour of `management_group_name`
     */
    managementGroupId?: pulumi.Input<string>;
    /**
     * The name of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     */
    managementGroupName?: pulumi.Input<string>;
    /**
     * The metadata for the policy set definition. This is a json object representing additional metadata that should be stored with the policy definition.
     */
    metadata?: pulumi.Input<string>;
    /**
     * The name of the policy set definition. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
     */
    parameters?: pulumi.Input<string>;
    /**
     * One or more `policyDefinitionGroup` blocks as defined below.
     */
    policyDefinitionGroups?: pulumi.Input<pulumi.Input<inputs.policy.PolicySetDefinitionPolicyDefinitionGroup>[]>;
    /**
     * One or more `policyDefinitionReference` blocks as defined below.
     */
    policyDefinitionReferences?: pulumi.Input<pulumi.Input<inputs.policy.PolicySetDefinitionPolicyDefinitionReference>[]>;
    /**
     * The policy definitions for the policy set definition. This is a json object representing the bundled policy definitions.
     *
     * @deprecated Deprecated in favour of `policy_definition_reference`
     */
    policyDefinitions?: pulumi.Input<string>;
    /**
     * The policy set type. Possible values are `BuiltIn` or `Custom`. Changing this forces a new resource to be created.
     */
    policyType: pulumi.Input<string>;
}
