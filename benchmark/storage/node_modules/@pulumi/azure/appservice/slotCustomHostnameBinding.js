"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlotCustomHostnameBinding = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Hostname Binding within an App Service Slot.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const examplePlan = new azure.appservice.Plan("examplePlan", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: {
 *         tier: "Standard",
 *         size: "S1",
 *     },
 * });
 * const exampleAppService = new azure.appservice.AppService("exampleAppService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     appServicePlanId: examplePlan.id,
 * });
 * const exampleSlot = new azure.appservice.Slot("exampleSlot", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     appServiceName: exampleAppService.name,
 *     appServicePlanId: examplePlan.id,
 * });
 * const exampleSlotCustomHostnameBinding = new azure.appservice.SlotCustomHostnameBinding("exampleSlotCustomHostnameBinding", {
 *     appServiceSlotId: exampleSlot.id,
 *     hostname: "www.mywebsite.com",
 * });
 * ```
 *
 * ## Import
 *
 * App Service Custom Hostname Bindings can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding mywebsite /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Web/sites/instance1/slots/staging/hostNameBindings/mywebsite.com
 * ```
 */
class SlotCustomHostnameBinding extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["appServiceSlotId"] = state ? state.appServiceSlotId : undefined;
            inputs["hostname"] = state ? state.hostname : undefined;
            inputs["sslState"] = state ? state.sslState : undefined;
            inputs["thumbprint"] = state ? state.thumbprint : undefined;
            inputs["virtualIp"] = state ? state.virtualIp : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.appServiceSlotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appServiceSlotId'");
            }
            if ((!args || args.hostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            inputs["appServiceSlotId"] = args ? args.appServiceSlotId : undefined;
            inputs["hostname"] = args ? args.hostname : undefined;
            inputs["sslState"] = args ? args.sslState : undefined;
            inputs["thumbprint"] = args ? args.thumbprint : undefined;
            inputs["virtualIp"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SlotCustomHostnameBinding.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SlotCustomHostnameBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SlotCustomHostnameBinding(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SlotCustomHostnameBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlotCustomHostnameBinding.__pulumiType;
    }
}
exports.SlotCustomHostnameBinding = SlotCustomHostnameBinding;
/** @internal */
SlotCustomHostnameBinding.__pulumiType = 'azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding';
//# sourceMappingURL=slotCustomHostnameBinding.js.map