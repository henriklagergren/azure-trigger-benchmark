import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manages a Synapse SQL Pool Vulnerability Assessment Rule Baseline.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "west europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountKind: "BlobStorage",
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleDataLakeGen2Filesystem = new azure.storage.DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", {storageAccountId: exampleAccount.id});
 * const exampleWorkspace = new azure.synapse.Workspace("exampleWorkspace", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     storageDataLakeGen2FilesystemId: exampleDataLakeGen2Filesystem.id,
 *     sqlAdministratorLogin: "sqladminuser",
 *     sqlAdministratorLoginPassword: "H@Sh1CoR3!",
 * });
 * const exampleSqlPool = new azure.synapse.SqlPool("exampleSqlPool", {
 *     synapseWorkspaceId: exampleWorkspace.id,
 *     skuName: "DW100c",
 *     createMode: "Default",
 * });
 * const exampleStorage_accountAccount = new azure.storage.Account("exampleStorage/accountAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountKind: "BlobStorage",
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleContainer = new azure.storage.Container("exampleContainer", {
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const exampleSqlPoolSecurityAlertPolicy = new azure.synapse.SqlPoolSecurityAlertPolicy("exampleSqlPoolSecurityAlertPolicy", {
 *     sqlPoolId: exampleSqlPool.id,
 *     policyState: "Enabled",
 *     storageEndpoint: exampleAccount.primaryBlobEndpoint,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 * });
 * const exampleSqlPoolVulnerabilityAssessment = new azure.synapse.SqlPoolVulnerabilityAssessment("exampleSqlPoolVulnerabilityAssessment", {
 *     sqlPoolSecurityAlertPolicyId: exampleSqlPoolSecurityAlertPolicy.id,
 *     storageContainerPath: pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}/`,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 * });
 * const exampleSqlPoolVulnerabilityAssessmentBaseline = new azure.synapse.SqlPoolVulnerabilityAssessmentBaseline("exampleSqlPoolVulnerabilityAssessmentBaseline", {
 *     ruleName: "VA1017",
 *     sqlPoolVulnerabilityAssessmentId: azurerm_synapse_sql_pool_vulnerability_assessment.test.id,
 *     baselines: [
 *         {
 *             results: [
 *                 "userA",
 *                 "SELECT",
 *             ],
 *         },
 *         {
 *             results: [
 *                 "userB",
 *                 "SELECT",
 *             ],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Synapse SQL Pool Vulnerability Assessment Rule Baselines can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/vulnerabilityAssessments/default/rules/rule1/baselines/baseline1
 * ```
 */
export declare class SqlPoolVulnerabilityAssessmentBaseline extends pulumi.CustomResource {
    /**
     * Get an existing SqlPoolVulnerabilityAssessmentBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlPoolVulnerabilityAssessmentBaselineState, opts?: pulumi.CustomResourceOptions): SqlPoolVulnerabilityAssessmentBaseline;
    /**
     * Returns true if the given object is an instance of SqlPoolVulnerabilityAssessmentBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SqlPoolVulnerabilityAssessmentBaseline;
    /**
     * One or more `baseline` blocks as defined below.
     */
    readonly baselines: pulumi.Output<outputs.synapse.SqlPoolVulnerabilityAssessmentBaselineBaseline[] | undefined>;
    /**
     * The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the vulnerability assessment rule.
     */
    readonly ruleName: pulumi.Output<string>;
    /**
     * The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.
     */
    readonly sqlPoolVulnerabilityAssessmentId: pulumi.Output<string>;
    /**
     * Create a SqlPoolVulnerabilityAssessmentBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlPoolVulnerabilityAssessmentBaselineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SqlPoolVulnerabilityAssessmentBaseline resources.
 */
export interface SqlPoolVulnerabilityAssessmentBaselineState {
    /**
     * One or more `baseline` blocks as defined below.
     */
    baselines?: pulumi.Input<pulumi.Input<inputs.synapse.SqlPoolVulnerabilityAssessmentBaselineBaseline>[]>;
    /**
     * The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the vulnerability assessment rule.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.
     */
    sqlPoolVulnerabilityAssessmentId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SqlPoolVulnerabilityAssessmentBaseline resource.
 */
export interface SqlPoolVulnerabilityAssessmentBaselineArgs {
    /**
     * One or more `baseline` blocks as defined below.
     */
    baselines?: pulumi.Input<pulumi.Input<inputs.synapse.SqlPoolVulnerabilityAssessmentBaselineBaseline>[]>;
    /**
     * The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the vulnerability assessment rule.
     */
    ruleName: pulumi.Input<string>;
    /**
     * The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.
     */
    sqlPoolVulnerabilityAssessmentId: pulumi.Input<string>;
}
