"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeSeriesInsightsReferenceDataSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Azure IoT Time Series Insights Reference Data Set.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleTimeSeriesInsightsStandardEnvironment = new azure.iot.TimeSeriesInsightsStandardEnvironment("exampleTimeSeriesInsightsStandardEnvironment", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "S1_1",
 *     dataRetentionTime: "P30D",
 * });
 * const exampleTimeSeriesInsightsReferenceDataSet = new azure.iot.TimeSeriesInsightsReferenceDataSet("exampleTimeSeriesInsightsReferenceDataSet", {
 *     timeSeriesInsightsEnvironmentId: exampleTimeSeriesInsightsStandardEnvironment.id,
 *     location: exampleResourceGroup.location,
 *     keyProperties: [{
 *         name: "keyProperty1",
 *         type: "String",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Azure IoT Time Series Insights Reference Data Set can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:iot/timeSeriesInsightsReferenceDataSet:TimeSeriesInsightsReferenceDataSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.TimeSeriesInsights/environments/example/referenceDataSets/example
 * ```
 */
class TimeSeriesInsightsReferenceDataSet extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["dataStringComparisonBehavior"] = state ? state.dataStringComparisonBehavior : undefined;
            inputs["keyProperties"] = state ? state.keyProperties : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["timeSeriesInsightsEnvironmentId"] = state ? state.timeSeriesInsightsEnvironmentId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.keyProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyProperties'");
            }
            if ((!args || args.timeSeriesInsightsEnvironmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeSeriesInsightsEnvironmentId'");
            }
            inputs["dataStringComparisonBehavior"] = args ? args.dataStringComparisonBehavior : undefined;
            inputs["keyProperties"] = args ? args.keyProperties : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timeSeriesInsightsEnvironmentId"] = args ? args.timeSeriesInsightsEnvironmentId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(TimeSeriesInsightsReferenceDataSet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing TimeSeriesInsightsReferenceDataSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new TimeSeriesInsightsReferenceDataSet(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of TimeSeriesInsightsReferenceDataSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TimeSeriesInsightsReferenceDataSet.__pulumiType;
    }
}
exports.TimeSeriesInsightsReferenceDataSet = TimeSeriesInsightsReferenceDataSet;
/** @internal */
TimeSeriesInsightsReferenceDataSet.__pulumiType = 'azure:iot/timeSeriesInsightsReferenceDataSet:TimeSeriesInsightsReferenceDataSet';
//# sourceMappingURL=timeSeriesInsightsReferenceDataSet.js.map