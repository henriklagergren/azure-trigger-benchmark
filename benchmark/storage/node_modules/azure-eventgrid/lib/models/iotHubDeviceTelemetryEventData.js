/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Event data for Microsoft.Devices.DeviceTelemetry event.
 *
 * @extends models['DeviceTelemetryEventProperties']
 */
class IotHubDeviceTelemetryEventData extends models['DeviceTelemetryEventProperties'] {
  /**
   * Create a IotHubDeviceTelemetryEventData.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IotHubDeviceTelemetryEventData
   *
   * @returns {object} metadata of IotHubDeviceTelemetryEventData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IotHubDeviceTelemetryEventData',
      type: {
        name: 'Composite',
        className: 'IotHubDeviceTelemetryEventData',
        modelProperties: {
          body: {
            required: false,
            serializedName: 'body',
            type: {
              name: 'Object'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          systemProperties: {
            required: false,
            serializedName: 'systemProperties',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = IotHubDeviceTelemetryEventData;
