"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectReplication = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Storage Object Replication.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const srcResourceGroup = new azure.core.ResourceGroup("srcResourceGroup", {location: "West Europe"});
 * const srcAccount = new azure.storage.Account("srcAccount", {
 *     resourceGroupName: srcResourceGroup.name,
 *     location: srcResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     blobProperties: {
 *         versioningEnabled: true,
 *         changeFeedEnabled: true,
 *     },
 * });
 * const srcContainer = new azure.storage.Container("srcContainer", {
 *     storageAccountName: srcAccount.name,
 *     containerAccessType: "private",
 * });
 * const dstResourceGroup = new azure.core.ResourceGroup("dstResourceGroup", {location: "East US"});
 * const dstAccount = new azure.storage.Account("dstAccount", {
 *     resourceGroupName: dstResourceGroup.name,
 *     location: dstResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     blobProperties: {
 *         versioningEnabled: true,
 *         changeFeedEnabled: true,
 *     },
 * });
 * const dstContainer = new azure.storage.Container("dstContainer", {
 *     storageAccountName: dstAccount.name,
 *     containerAccessType: "private",
 * });
 * const example = new azure.storage.ObjectReplication("example", {
 *     sourceStorageAccountId: srcAccount.id,
 *     destinationStorageAccountId: dstAccount.id,
 *     rules: [{
 *         sourceContainerName: srcContainer.name,
 *         destinationContainerName: dstContainer.name,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Storage Object Replication Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:storage/objectReplication:ObjectReplication example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/storageAccount1/objectReplicationPolicies/objectReplicationPolicy1;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group2/providers/Microsoft.Storage/storageAccounts/storageAccount2/objectReplicationPolicies/objectReplicationPolicy2
 * ```
 */
class ObjectReplication extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["destinationObjectReplicationId"] = state ? state.destinationObjectReplicationId : undefined;
            inputs["destinationStorageAccountId"] = state ? state.destinationStorageAccountId : undefined;
            inputs["rules"] = state ? state.rules : undefined;
            inputs["sourceObjectReplicationId"] = state ? state.sourceObjectReplicationId : undefined;
            inputs["sourceStorageAccountId"] = state ? state.sourceStorageAccountId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.destinationStorageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationStorageAccountId'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.sourceStorageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceStorageAccountId'");
            }
            inputs["destinationStorageAccountId"] = args ? args.destinationStorageAccountId : undefined;
            inputs["rules"] = args ? args.rules : undefined;
            inputs["sourceStorageAccountId"] = args ? args.sourceStorageAccountId : undefined;
            inputs["destinationObjectReplicationId"] = undefined /*out*/;
            inputs["sourceObjectReplicationId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ObjectReplication.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ObjectReplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ObjectReplication(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ObjectReplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectReplication.__pulumiType;
    }
}
exports.ObjectReplication = ObjectReplication;
/** @internal */
ObjectReplication.__pulumiType = 'azure:storage/objectReplication:ObjectReplication';
//# sourceMappingURL=objectReplication.js.map