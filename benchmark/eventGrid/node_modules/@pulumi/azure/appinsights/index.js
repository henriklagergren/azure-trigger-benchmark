"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./analyticsItem"), exports);
__exportStar(require("./apiKey"), exports);
__exportStar(require("./getInsights"), exports);
__exportStar(require("./insights"), exports);
__exportStar(require("./smartDetectionRule"), exports);
__exportStar(require("./webTest"), exports);
// Import resources to register:
const analyticsItem_1 = require("./analyticsItem");
const apiKey_1 = require("./apiKey");
const insights_1 = require("./insights");
const smartDetectionRule_1 = require("./smartDetectionRule");
const webTest_1 = require("./webTest");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:appinsights/analyticsItem:AnalyticsItem":
                return new analyticsItem_1.AnalyticsItem(name, undefined, { urn });
            case "azure:appinsights/apiKey:ApiKey":
                return new apiKey_1.ApiKey(name, undefined, { urn });
            case "azure:appinsights/insights:Insights":
                return new insights_1.Insights(name, undefined, { urn });
            case "azure:appinsights/smartDetectionRule:SmartDetectionRule":
                return new smartDetectionRule_1.SmartDetectionRule(name, undefined, { urn });
            case "azure:appinsights/webTest:WebTest":
                return new webTest_1.WebTest(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "appinsights/analyticsItem", _module);
pulumi.runtime.registerResourceModule("azure", "appinsights/apiKey", _module);
pulumi.runtime.registerResourceModule("azure", "appinsights/insights", _module);
pulumi.runtime.registerResourceModule("azure", "appinsights/smartDetectionRule", _module);
pulumi.runtime.registerResourceModule("azure", "appinsights/webTest", _module);
//# sourceMappingURL=index.js.map