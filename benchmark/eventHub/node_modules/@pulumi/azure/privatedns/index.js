"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./aaaarecord"), exports);
__exportStar(require("./arecord"), exports);
__exportStar(require("./cnameRecord"), exports);
__exportStar(require("./getDnsZone"), exports);
__exportStar(require("./linkService"), exports);
__exportStar(require("./mxRecord"), exports);
__exportStar(require("./ptrrecord"), exports);
__exportStar(require("./srvrecord"), exports);
__exportStar(require("./txtRecord"), exports);
__exportStar(require("./zone"), exports);
__exportStar(require("./zoneVirtualNetworkLink"), exports);
// Import resources to register:
const aaaarecord_1 = require("./aaaarecord");
const arecord_1 = require("./arecord");
const cnameRecord_1 = require("./cnameRecord");
const linkService_1 = require("./linkService");
const mxRecord_1 = require("./mxRecord");
const ptrrecord_1 = require("./ptrrecord");
const srvrecord_1 = require("./srvrecord");
const txtRecord_1 = require("./txtRecord");
const zone_1 = require("./zone");
const zoneVirtualNetworkLink_1 = require("./zoneVirtualNetworkLink");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:privatedns/aAAARecord:AAAARecord":
                return new aaaarecord_1.AAAARecord(name, undefined, { urn });
            case "azure:privatedns/aRecord:ARecord":
                return new arecord_1.ARecord(name, undefined, { urn });
            case "azure:privatedns/cnameRecord:CnameRecord":
                return new cnameRecord_1.CnameRecord(name, undefined, { urn });
            case "azure:privatedns/linkService:LinkService":
                return new linkService_1.LinkService(name, undefined, { urn });
            case "azure:privatedns/mxRecord:MxRecord":
                return new mxRecord_1.MxRecord(name, undefined, { urn });
            case "azure:privatedns/pTRRecord:PTRRecord":
                return new ptrrecord_1.PTRRecord(name, undefined, { urn });
            case "azure:privatedns/sRVRecord:SRVRecord":
                return new srvrecord_1.SRVRecord(name, undefined, { urn });
            case "azure:privatedns/txtRecord:TxtRecord":
                return new txtRecord_1.TxtRecord(name, undefined, { urn });
            case "azure:privatedns/zone:Zone":
                return new zone_1.Zone(name, undefined, { urn });
            case "azure:privatedns/zoneVirtualNetworkLink:ZoneVirtualNetworkLink":
                return new zoneVirtualNetworkLink_1.ZoneVirtualNetworkLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "privatedns/aAAARecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/aRecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/cnameRecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/linkService", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/mxRecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/pTRRecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/sRVRecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/txtRecord", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/zone", _module);
pulumi.runtime.registerResourceModule("azure", "privatedns/zoneVirtualNetworkLink", _module);
//# sourceMappingURL=index.js.map