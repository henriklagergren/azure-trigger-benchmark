"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutoProvisioning = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Enables or disables the Security Center Auto Provisioning feature for the subscription
 *
 * > **NOTE:** There is no resource name required, it will always be "default"
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.securitycenter.AutoProvisioning("example", {
 *     autoProvision: "On",
 * });
 * ```
 *
 * ## Import
 *
 * Security Center Auto Provisioning can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:securitycenter/autoProvisioning:AutoProvisioning example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/autoProvisioningSettings/default
 * ```
 */
class AutoProvisioning extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["autoProvision"] = state ? state.autoProvision : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.autoProvision === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoProvision'");
            }
            inputs["autoProvision"] = args ? args.autoProvision : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(AutoProvisioning.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing AutoProvisioning resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AutoProvisioning(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AutoProvisioning.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoProvisioning.__pulumiType;
    }
}
exports.AutoProvisioning = AutoProvisioning;
/** @internal */
AutoProvisioning.__pulumiType = 'azure:securitycenter/autoProvisioning:AutoProvisioning';
//# sourceMappingURL=autoProvisioning.js.map