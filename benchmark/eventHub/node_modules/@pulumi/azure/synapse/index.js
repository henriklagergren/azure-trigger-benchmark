"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./getWorkspace"), exports);
__exportStar(require("./integrationRuntimeAzure"), exports);
__exportStar(require("./integrationRuntimeSelfHosted"), exports);
__exportStar(require("./linkedService"), exports);
__exportStar(require("./managedPrivateEndpoint"), exports);
__exportStar(require("./privateLinkHub"), exports);
__exportStar(require("./roleAssignment"), exports);
__exportStar(require("./sparkPool"), exports);
__exportStar(require("./sqlPool"), exports);
__exportStar(require("./sqlPoolExtendedAuditingPolicy"), exports);
__exportStar(require("./sqlPoolSecurityAlertPolicy"), exports);
__exportStar(require("./sqlPoolVulnerabilityAssessment"), exports);
__exportStar(require("./sqlPoolVulnerabilityAssessmentBaseline"), exports);
__exportStar(require("./sqlPoolWorkloadClassifier"), exports);
__exportStar(require("./sqlPoolWorkloadGroup"), exports);
__exportStar(require("./workspace"), exports);
__exportStar(require("./workspaceAadAdmin"), exports);
__exportStar(require("./workspaceExtendedAuditingPolicy"), exports);
__exportStar(require("./workspaceKey"), exports);
__exportStar(require("./workspaceSecurityAlertPolicy"), exports);
__exportStar(require("./workspaceSqlAadAdmin"), exports);
__exportStar(require("./workspaceVulnerabilityAssessment"), exports);
// Import resources to register:
const firewallRule_1 = require("./firewallRule");
const integrationRuntimeAzure_1 = require("./integrationRuntimeAzure");
const integrationRuntimeSelfHosted_1 = require("./integrationRuntimeSelfHosted");
const linkedService_1 = require("./linkedService");
const managedPrivateEndpoint_1 = require("./managedPrivateEndpoint");
const privateLinkHub_1 = require("./privateLinkHub");
const roleAssignment_1 = require("./roleAssignment");
const sparkPool_1 = require("./sparkPool");
const sqlPool_1 = require("./sqlPool");
const sqlPoolExtendedAuditingPolicy_1 = require("./sqlPoolExtendedAuditingPolicy");
const sqlPoolSecurityAlertPolicy_1 = require("./sqlPoolSecurityAlertPolicy");
const sqlPoolVulnerabilityAssessment_1 = require("./sqlPoolVulnerabilityAssessment");
const sqlPoolVulnerabilityAssessmentBaseline_1 = require("./sqlPoolVulnerabilityAssessmentBaseline");
const sqlPoolWorkloadClassifier_1 = require("./sqlPoolWorkloadClassifier");
const sqlPoolWorkloadGroup_1 = require("./sqlPoolWorkloadGroup");
const workspace_1 = require("./workspace");
const workspaceAadAdmin_1 = require("./workspaceAadAdmin");
const workspaceExtendedAuditingPolicy_1 = require("./workspaceExtendedAuditingPolicy");
const workspaceKey_1 = require("./workspaceKey");
const workspaceSecurityAlertPolicy_1 = require("./workspaceSecurityAlertPolicy");
const workspaceSqlAadAdmin_1 = require("./workspaceSqlAadAdmin");
const workspaceVulnerabilityAssessment_1 = require("./workspaceVulnerabilityAssessment");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:synapse/firewallRule:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure":
                return new integrationRuntimeAzure_1.IntegrationRuntimeAzure(name, undefined, { urn });
            case "azure:synapse/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted":
                return new integrationRuntimeSelfHosted_1.IntegrationRuntimeSelfHosted(name, undefined, { urn });
            case "azure:synapse/linkedService:LinkedService":
                return new linkedService_1.LinkedService(name, undefined, { urn });
            case "azure:synapse/managedPrivateEndpoint:ManagedPrivateEndpoint":
                return new managedPrivateEndpoint_1.ManagedPrivateEndpoint(name, undefined, { urn });
            case "azure:synapse/privateLinkHub:PrivateLinkHub":
                return new privateLinkHub_1.PrivateLinkHub(name, undefined, { urn });
            case "azure:synapse/roleAssignment:RoleAssignment":
                return new roleAssignment_1.RoleAssignment(name, undefined, { urn });
            case "azure:synapse/sparkPool:SparkPool":
                return new sparkPool_1.SparkPool(name, undefined, { urn });
            case "azure:synapse/sqlPool:SqlPool":
                return new sqlPool_1.SqlPool(name, undefined, { urn });
            case "azure:synapse/sqlPoolExtendedAuditingPolicy:SqlPoolExtendedAuditingPolicy":
                return new sqlPoolExtendedAuditingPolicy_1.SqlPoolExtendedAuditingPolicy(name, undefined, { urn });
            case "azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy":
                return new sqlPoolSecurityAlertPolicy_1.SqlPoolSecurityAlertPolicy(name, undefined, { urn });
            case "azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment":
                return new sqlPoolVulnerabilityAssessment_1.SqlPoolVulnerabilityAssessment(name, undefined, { urn });
            case "azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline":
                return new sqlPoolVulnerabilityAssessmentBaseline_1.SqlPoolVulnerabilityAssessmentBaseline(name, undefined, { urn });
            case "azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier":
                return new sqlPoolWorkloadClassifier_1.SqlPoolWorkloadClassifier(name, undefined, { urn });
            case "azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup":
                return new sqlPoolWorkloadGroup_1.SqlPoolWorkloadGroup(name, undefined, { urn });
            case "azure:synapse/workspace:Workspace":
                return new workspace_1.Workspace(name, undefined, { urn });
            case "azure:synapse/workspaceAadAdmin:WorkspaceAadAdmin":
                return new workspaceAadAdmin_1.WorkspaceAadAdmin(name, undefined, { urn });
            case "azure:synapse/workspaceExtendedAuditingPolicy:WorkspaceExtendedAuditingPolicy":
                return new workspaceExtendedAuditingPolicy_1.WorkspaceExtendedAuditingPolicy(name, undefined, { urn });
            case "azure:synapse/workspaceKey:WorkspaceKey":
                return new workspaceKey_1.WorkspaceKey(name, undefined, { urn });
            case "azure:synapse/workspaceSecurityAlertPolicy:WorkspaceSecurityAlertPolicy":
                return new workspaceSecurityAlertPolicy_1.WorkspaceSecurityAlertPolicy(name, undefined, { urn });
            case "azure:synapse/workspaceSqlAadAdmin:WorkspaceSqlAadAdmin":
                return new workspaceSqlAadAdmin_1.WorkspaceSqlAadAdmin(name, undefined, { urn });
            case "azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment":
                return new workspaceVulnerabilityAssessment_1.WorkspaceVulnerabilityAssessment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "synapse/firewallRule", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/integrationRuntimeAzure", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/integrationRuntimeSelfHosted", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/linkedService", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/managedPrivateEndpoint", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/privateLinkHub", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/roleAssignment", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sparkPool", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPool", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolExtendedAuditingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolSecurityAlertPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolVulnerabilityAssessment", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolVulnerabilityAssessmentBaseline", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolWorkloadClassifier", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/sqlPoolWorkloadGroup", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspace", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceAadAdmin", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceExtendedAuditingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceKey", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceSecurityAlertPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceSqlAadAdmin", _module);
pulumi.runtime.registerResourceModule("azure", "synapse/workspaceVulnerabilityAssessment", _module);
//# sourceMappingURL=index.js.map