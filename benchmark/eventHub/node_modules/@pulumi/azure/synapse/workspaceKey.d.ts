import * as pulumi from "@pulumi/pulumi";
export declare class WorkspaceKey extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceKeyState, opts?: pulumi.CustomResourceOptions): WorkspaceKey;
    /**
     * Returns true if the given object is an instance of WorkspaceKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkspaceKey;
    readonly active: pulumi.Output<boolean>;
    /**
     * @deprecated As this property name contained a typo originally, please switch to using 'customer_managed_key_name' instead.
     */
    readonly cusomterManagedKeyName: pulumi.Output<string>;
    readonly customerManagedKeyName: pulumi.Output<string>;
    readonly customerManagedKeyVersionlessId: pulumi.Output<string | undefined>;
    readonly synapseWorkspaceId: pulumi.Output<string>;
    /**
     * Create a WorkspaceKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkspaceKey resources.
 */
export interface WorkspaceKeyState {
    active?: pulumi.Input<boolean>;
    /**
     * @deprecated As this property name contained a typo originally, please switch to using 'customer_managed_key_name' instead.
     */
    cusomterManagedKeyName?: pulumi.Input<string>;
    customerManagedKeyName?: pulumi.Input<string>;
    customerManagedKeyVersionlessId?: pulumi.Input<string>;
    synapseWorkspaceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WorkspaceKey resource.
 */
export interface WorkspaceKeyArgs {
    active: pulumi.Input<boolean>;
    /**
     * @deprecated As this property name contained a typo originally, please switch to using 'customer_managed_key_name' instead.
     */
    cusomterManagedKeyName?: pulumi.Input<string>;
    customerManagedKeyName?: pulumi.Input<string>;
    customerManagedKeyVersionlessId?: pulumi.Input<string>;
    synapseWorkspaceId: pulumi.Input<string>;
}
