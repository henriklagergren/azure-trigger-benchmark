/**
 * Base64 encoded PKCS#12 certificate bundle to use when authenticating as a Service Principal using a Client Certificate
 */
export declare const clientCertificate: string | undefined;
/**
 * The password to decrypt the Client Certificate. For use when authenticating as a Service Principal using a Client
 * Certificate
 */
export declare const clientCertificatePassword: string | undefined;
/**
 * The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service
 * Principal using a Client Certificate
 */
export declare const clientCertificatePath: string | undefined;
/**
 * The Client ID which should be used for service principal authentication
 */
export declare const clientId: string | undefined;
/**
 * The application password to use when authenticating as a Service Principal using a Client Secret
 */
export declare const clientSecret: string | undefined;
/**
 * Disable the Terraform Partner ID, which is used if a custom `partner_id` isn't specified
 */
export declare const disableTerraformPartnerId: boolean | undefined;
/**
 * The cloud environment which should be used. Possible values are: `global` (also `public`), `usgovernmentl4` (also
 * `usgovernment`), `usgovernmentl5` (also `dod`), and `china`. Defaults to `global`
 */
export declare const environment: string;
/**
 * The path to a custom endpoint for Managed Identity - in most circumstances this should be detected automatically
 */
export declare const msiEndpoint: string | undefined;
/**
 * A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution
 */
export declare const partnerId: string | undefined;
/**
 * The Tenant ID which should be used. Works with all authentication methods except Managed Identity
 */
export declare const tenantId: string | undefined;
/**
 * Allow Azure CLI to be used for Authentication
 */
export declare const useCli: boolean | undefined;
/**
 * Allow Managed Identity to be used for Authentication
 */
export declare const useMsi: boolean;
