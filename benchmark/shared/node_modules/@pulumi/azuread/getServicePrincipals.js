"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServicePrincipalsOutput = exports.getServicePrincipals = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Gets basic information for multiple Azure Active Directory service principals.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this data source.
 *
 * When authenticated with a service principal, this data source requires one of the following application roles: `Application.Read.All` or `Directory.Read.All`
 *
 * When authenticated with a user principal, this data source does not require any additional roles.
 *
 * ## Example Usage
 *
 * *Look up by application display names*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = pulumi.output(azuread.getServicePrincipals({
 *     displayNames: [
 *         "example-app",
 *         "another-app",
 *     ],
 * }));
 * ```
 *
 * *Look up by application IDs (client IDs*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = pulumi.output(azuread.getServicePrincipals({
 *     applicationIds: [
 *         "11111111-0000-0000-0000-000000000000",
 *         "22222222-0000-0000-0000-000000000000",
 *         "33333333-0000-0000-0000-000000000000",
 *     ],
 * }));
 * ```
 *
 * *Look up by service principal object IDs*
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = pulumi.output(azuread.getServicePrincipals({
 *     objectIds: [
 *         "00000000-0000-0000-0000-000000000000",
 *         "00000000-0000-0000-0000-111111111111",
 *         "00000000-0000-0000-0000-222222222222",
 *     ],
 * }));
 * ```
 */
function getServicePrincipals(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azuread:index/getServicePrincipals:getServicePrincipals", {
        "applicationIds": args.applicationIds,
        "displayNames": args.displayNames,
        "ignoreMissing": args.ignoreMissing,
        "objectIds": args.objectIds,
        "returnAll": args.returnAll,
    }, opts);
}
exports.getServicePrincipals = getServicePrincipals;
function getServicePrincipalsOutput(args, opts) {
    return pulumi.output(args).apply(a => getServicePrincipals(a, opts));
}
exports.getServicePrincipalsOutput = getServicePrincipalsOutput;
//# sourceMappingURL=getServicePrincipals.js.map