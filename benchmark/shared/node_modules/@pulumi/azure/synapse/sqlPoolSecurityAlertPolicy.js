"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SqlPoolSecurityAlertPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Security Alert Policy for a Synapse SQL Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     accountKind: "StorageV2",
 *     isHnsEnabled: "true",
 * });
 * const exampleDataLakeGen2Filesystem = new azure.storage.DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", {storageAccountId: exampleAccount.id});
 * const exampleWorkspace = new azure.synapse.Workspace("exampleWorkspace", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     storageDataLakeGen2FilesystemId: exampleDataLakeGen2Filesystem.id,
 *     sqlAdministratorLogin: "sqladminuser",
 *     sqlAdministratorLoginPassword: "H@Sh1CoR3!",
 *     aadAdmin: {
 *         login: "AzureAD Admin",
 *         objectId: "00000000-0000-0000-0000-000000000000",
 *         tenantId: "00000000-0000-0000-0000-000000000000",
 *     },
 *     tags: {
 *         Env: "production",
 *     },
 * });
 * const exampleSqlPool = new azure.synapse.SqlPool("exampleSqlPool", {
 *     synapseWorkspaceId: exampleWorkspace.id,
 *     skuName: "DW100c",
 *     createMode: "Default",
 * });
 * const auditLogs = new azure.storage.Account("auditLogs", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleSqlPoolSecurityAlertPolicy = new azure.synapse.SqlPoolSecurityAlertPolicy("exampleSqlPoolSecurityAlertPolicy", {
 *     sqlPoolId: exampleSqlPool.id,
 *     policyState: "Enabled",
 *     storageEndpoint: auditLogs.primaryBlobEndpoint,
 *     storageAccountAccessKey: auditLogs.primaryAccessKey,
 *     disabledAlerts: [
 *         "Sql_Injection",
 *         "Data_Exfiltration",
 *     ],
 *     retentionDays: 20,
 * });
 * ```
 *
 * ## Import
 *
 * Synapse SQL Pool Security Alert Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/securityAlertPolicies/default
 * ```
 */
class SqlPoolSecurityAlertPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["disabledAlerts"] = state ? state.disabledAlerts : undefined;
            inputs["emailAccountAdminsEnabled"] = state ? state.emailAccountAdminsEnabled : undefined;
            inputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            inputs["policyState"] = state ? state.policyState : undefined;
            inputs["retentionDays"] = state ? state.retentionDays : undefined;
            inputs["sqlPoolId"] = state ? state.sqlPoolId : undefined;
            inputs["storageAccountAccessKey"] = state ? state.storageAccountAccessKey : undefined;
            inputs["storageEndpoint"] = state ? state.storageEndpoint : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.policyState === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyState'");
            }
            if ((!args || args.sqlPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlPoolId'");
            }
            inputs["disabledAlerts"] = args ? args.disabledAlerts : undefined;
            inputs["emailAccountAdminsEnabled"] = args ? args.emailAccountAdminsEnabled : undefined;
            inputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            inputs["policyState"] = args ? args.policyState : undefined;
            inputs["retentionDays"] = args ? args.retentionDays : undefined;
            inputs["sqlPoolId"] = args ? args.sqlPoolId : undefined;
            inputs["storageAccountAccessKey"] = args ? args.storageAccountAccessKey : undefined;
            inputs["storageEndpoint"] = args ? args.storageEndpoint : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SqlPoolSecurityAlertPolicy.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SqlPoolSecurityAlertPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SqlPoolSecurityAlertPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SqlPoolSecurityAlertPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlPoolSecurityAlertPolicy.__pulumiType;
    }
}
exports.SqlPoolSecurityAlertPolicy = SqlPoolSecurityAlertPolicy;
/** @internal */
SqlPoolSecurityAlertPolicy.__pulumiType = 'azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy';
//# sourceMappingURL=sqlPoolSecurityAlertPolicy.js.map