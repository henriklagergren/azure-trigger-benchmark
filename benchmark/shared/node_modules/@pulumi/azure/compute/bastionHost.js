"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BastionHost = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Bastion Host.
 *
 * ## Example Usage
 *
 * This example deploys an Azure Bastion Host Instance to a target virtual network.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     addressSpaces: ["192.168.1.0/24"],
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("exampleSubnet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["192.168.1.224/27"],
 * });
 * const examplePublicIp = new azure.network.PublicIp("examplePublicIp", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 * });
 * const exampleBastionHost = new azure.compute.BastionHost("exampleBastionHost", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     ipConfiguration: {
 *         name: "configuration",
 *         subnetId: exampleSubnet.id,
 *         publicIpAddressId: examplePublicIp.id,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Bastion Hosts can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:compute/bastionHost:BastionHost example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/bastionHosts/instance1
 * ```
 */
class BastionHost extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["copyPasteEnabled"] = state ? state.copyPasteEnabled : undefined;
            inputs["dnsName"] = state ? state.dnsName : undefined;
            inputs["fileCopyEnabled"] = state ? state.fileCopyEnabled : undefined;
            inputs["ipConfiguration"] = state ? state.ipConfiguration : undefined;
            inputs["ipConnectEnabled"] = state ? state.ipConnectEnabled : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["scaleUnits"] = state ? state.scaleUnits : undefined;
            inputs["shareableLinkEnabled"] = state ? state.shareableLinkEnabled : undefined;
            inputs["sku"] = state ? state.sku : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tunnelingEnabled"] = state ? state.tunnelingEnabled : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["copyPasteEnabled"] = args ? args.copyPasteEnabled : undefined;
            inputs["fileCopyEnabled"] = args ? args.fileCopyEnabled : undefined;
            inputs["ipConfiguration"] = args ? args.ipConfiguration : undefined;
            inputs["ipConnectEnabled"] = args ? args.ipConnectEnabled : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["scaleUnits"] = args ? args.scaleUnits : undefined;
            inputs["shareableLinkEnabled"] = args ? args.shareableLinkEnabled : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["tunnelingEnabled"] = args ? args.tunnelingEnabled : undefined;
            inputs["dnsName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(BastionHost.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing BastionHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BastionHost(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BastionHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BastionHost.__pulumiType;
    }
}
exports.BastionHost = BastionHost;
/** @internal */
BastionHost.__pulumiType = 'azure:compute/bastionHost:BastionHost';
//# sourceMappingURL=bastionHost.js.map