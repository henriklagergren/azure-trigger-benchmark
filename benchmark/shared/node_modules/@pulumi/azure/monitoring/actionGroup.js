"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Action Group within Azure Monitor.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleActionGroup = new azure.monitoring.ActionGroup("exampleActionGroup", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     shortName: "p0action",
 *     armRoleReceivers: [{
 *         name: "armroleaction",
 *         roleId: "de139f84-1756-47ae-9be6-808fbbe84772",
 *         useCommonAlertSchema: true,
 *     }],
 *     automationRunbookReceivers: [{
 *         name: "action_name_1",
 *         automationAccountId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/rg-runbooks/providers/microsoft.automation/automationaccounts/aaa001",
 *         runbookName: "my runbook",
 *         webhookResourceId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/rg-runbooks/providers/microsoft.automation/automationaccounts/aaa001/webhooks/webhook_alert",
 *         isGlobalRunbook: true,
 *         serviceUri: "https://s13events.azure-automation.net/webhooks?token=randomtoken",
 *         useCommonAlertSchema: true,
 *     }],
 *     azureAppPushReceivers: [{
 *         name: "pushtoadmin",
 *         emailAddress: "admin@contoso.com",
 *     }],
 *     azureFunctionReceivers: [{
 *         name: "funcaction",
 *         functionAppResourceId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-funcapp/providers/Microsoft.Web/sites/funcapp",
 *         functionName: "myfunc",
 *         httpTriggerUrl: "https://example.com/trigger",
 *         useCommonAlertSchema: true,
 *     }],
 *     emailReceivers: [
 *         {
 *             name: "sendtoadmin",
 *             emailAddress: "admin@contoso.com",
 *         },
 *         {
 *             name: "sendtodevops",
 *             emailAddress: "devops@contoso.com",
 *             useCommonAlertSchema: true,
 *         },
 *     ],
 *     eventHubReceivers: [{
 *         name: "sendtoeventhub",
 *         eventHubId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-eventhub/providers/Microsoft.EventHub/namespaces/eventhubnamespace/eventhubs/eventhub1",
 *         useCommonAlertSchema: false,
 *     }],
 *     itsmReceivers: [{
 *         name: "createorupdateticket",
 *         workspaceId: "6eee3a18-aac3-40e4-b98e-1f309f329816",
 *         connectionId: "53de6956-42b4-41ba-be3c-b154cdf17b13",
 *         ticketConfiguration: "{}",
 *         region: "southcentralus",
 *     }],
 *     logicAppReceivers: [{
 *         name: "logicappaction",
 *         resourceId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-logicapp/providers/Microsoft.Logic/workflows/logicapp",
 *         callbackUrl: "https://logicapptriggerurl/...",
 *         useCommonAlertSchema: true,
 *     }],
 *     smsReceivers: [{
 *         name: "oncallmsg",
 *         countryCode: "1",
 *         phoneNumber: "1231231234",
 *     }],
 *     voiceReceivers: [{
 *         name: "remotesupport",
 *         countryCode: "86",
 *         phoneNumber: "13888888888",
 *     }],
 *     webhookReceivers: [{
 *         name: "callmyapiaswell",
 *         serviceUri: "http://example.com/alert",
 *         useCommonAlertSchema: true,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Action Groups can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:monitoring/actionGroup:ActionGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/actionGroups/myagname
 * ```
 */
class ActionGroup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["armRoleReceivers"] = state ? state.armRoleReceivers : undefined;
            inputs["automationRunbookReceivers"] = state ? state.automationRunbookReceivers : undefined;
            inputs["azureAppPushReceivers"] = state ? state.azureAppPushReceivers : undefined;
            inputs["azureFunctionReceivers"] = state ? state.azureFunctionReceivers : undefined;
            inputs["emailReceivers"] = state ? state.emailReceivers : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["eventHubReceivers"] = state ? state.eventHubReceivers : undefined;
            inputs["itsmReceivers"] = state ? state.itsmReceivers : undefined;
            inputs["logicAppReceivers"] = state ? state.logicAppReceivers : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["shortName"] = state ? state.shortName : undefined;
            inputs["smsReceivers"] = state ? state.smsReceivers : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["voiceReceivers"] = state ? state.voiceReceivers : undefined;
            inputs["webhookReceivers"] = state ? state.webhookReceivers : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.shortName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortName'");
            }
            inputs["armRoleReceivers"] = args ? args.armRoleReceivers : undefined;
            inputs["automationRunbookReceivers"] = args ? args.automationRunbookReceivers : undefined;
            inputs["azureAppPushReceivers"] = args ? args.azureAppPushReceivers : undefined;
            inputs["azureFunctionReceivers"] = args ? args.azureFunctionReceivers : undefined;
            inputs["emailReceivers"] = args ? args.emailReceivers : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["eventHubReceivers"] = args ? args.eventHubReceivers : undefined;
            inputs["itsmReceivers"] = args ? args.itsmReceivers : undefined;
            inputs["logicAppReceivers"] = args ? args.logicAppReceivers : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["shortName"] = args ? args.shortName : undefined;
            inputs["smsReceivers"] = args ? args.smsReceivers : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["voiceReceivers"] = args ? args.voiceReceivers : undefined;
            inputs["webhookReceivers"] = args ? args.webhookReceivers : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ActionGroup.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ActionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ActionGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ActionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ActionGroup.__pulumiType;
    }
}
exports.ActionGroup = ActionGroup;
/** @internal */
ActionGroup.__pulumiType = 'azure:monitoring/actionGroup:ActionGroup';
//# sourceMappingURL=actionGroup.js.map