import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manages the Vulnerability Assessment for a Synapse SQL Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     accountKind: "StorageV2",
 *     isHnsEnabled: "true",
 * });
 * const exampleDataLakeGen2Filesystem = new azure.storage.DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", {storageAccountId: exampleAccount.id});
 * const exampleWorkspace = new azure.synapse.Workspace("exampleWorkspace", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     storageDataLakeGen2FilesystemId: exampleDataLakeGen2Filesystem.id,
 *     sqlAdministratorLogin: "sqladminuser",
 *     sqlAdministratorLoginPassword: "H@Sh1CoR3!",
 *     aadAdmin: {
 *         login: "AzureAD Admin",
 *         objectId: "00000000-0000-0000-0000-000000000000",
 *         tenantId: "00000000-0000-0000-0000-000000000000",
 *     },
 *     tags: {
 *         Env: "production",
 *     },
 * });
 * const exampleSqlPool = new azure.synapse.SqlPool("exampleSqlPool", {
 *     synapseWorkspaceId: exampleWorkspace.id,
 *     skuName: "DW100c",
 *     createMode: "Default",
 * });
 * const auditLogs = new azure.storage.Account("auditLogs", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleSqlPoolSecurityAlertPolicy = new azure.synapse.SqlPoolSecurityAlertPolicy("exampleSqlPoolSecurityAlertPolicy", {
 *     sqlPoolId: exampleSqlPool.id,
 *     policyState: "Enabled",
 *     storageEndpoint: auditLogs.primaryBlobEndpoint,
 *     storageAccountAccessKey: auditLogs.primaryAccessKey,
 *     disabledAlerts: [
 *         "Sql_Injection",
 *         "Data_Exfiltration",
 *     ],
 *     retentionDays: 20,
 * });
 * const exampleSqlPoolVulnerabilityAssessment = new azure.synapse.SqlPoolVulnerabilityAssessment("exampleSqlPoolVulnerabilityAssessment", {
 *     sqlPoolSecurityAlertPolicyId: exampleSqlPoolSecurityAlertPolicy.id,
 *     storageContainerPath: pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${azurerm_storage_container.example.name}/`,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 *     recurringScans: {
 *         enabled: true,
 *         emailSubscriptionAdminsEnabled: true,
 *         emails: [
 *             "email@example1.com",
 *             "email@example2.com",
 *         ],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Synapse SQL Pool Vulnerability Assessment can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/vulnerabilityAssessments/default
 * ```
 */
export declare class SqlPoolVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing SqlPoolVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlPoolVulnerabilityAssessmentState, opts?: pulumi.CustomResourceOptions): SqlPoolVulnerabilityAssessment;
    /**
     * Returns true if the given object is an instance of SqlPoolVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SqlPoolVulnerabilityAssessment;
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    readonly recurringScans: pulumi.Output<outputs.synapse.SqlPoolVulnerabilityAssessmentRecurringScans>;
    /**
     * The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     */
    readonly sqlPoolSecurityAlertPolicyId: pulumi.Output<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    readonly storageAccountAccessKey: pulumi.Output<string | undefined>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    readonly storageContainerPath: pulumi.Output<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    readonly storageContainerSasKey: pulumi.Output<string | undefined>;
    /**
     * Create a SqlPoolVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlPoolVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SqlPoolVulnerabilityAssessment resources.
 */
export interface SqlPoolVulnerabilityAssessmentState {
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    recurringScans?: pulumi.Input<inputs.synapse.SqlPoolVulnerabilityAssessmentRecurringScans>;
    /**
     * The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     */
    sqlPoolSecurityAlertPolicyId?: pulumi.Input<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    storageContainerPath?: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SqlPoolVulnerabilityAssessment resource.
 */
export interface SqlPoolVulnerabilityAssessmentArgs {
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    recurringScans?: pulumi.Input<inputs.synapse.SqlPoolVulnerabilityAssessmentRecurringScans>;
    /**
     * The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     */
    sqlPoolSecurityAlertPolicyId: pulumi.Input<string>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    storageContainerPath: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
}
