import * as pulumi from "@pulumi/pulumi";
export declare class Provider extends pulumi.CustomResource {
    /**
     * Get an existing Provider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProviderState, opts?: pulumi.CustomResourceOptions): Provider;
    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Provider;
    readonly attestationUri: pulumi.Output<string>;
    readonly location: pulumi.Output<string>;
    readonly name: pulumi.Output<string>;
    readonly policySigningCertificateData: pulumi.Output<string | undefined>;
    readonly resourceGroupName: pulumi.Output<string>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly trustModel: pulumi.Output<string>;
    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Provider resources.
 */
export interface ProviderState {
    attestationUri?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    policySigningCertificateData?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    trustModel?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    policySigningCertificateData?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
