"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterationServiceEnvironment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages private and isolated Logic App instances within an Azure virtual network.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     addressSpaces: ["10.0.0.0/22"],
 * });
 * const isesubnet1 = new azure.network.Subnet("isesubnet1", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/26"],
 *     delegations: [{
 *         name: "integrationServiceEnvironments",
 *         serviceDelegation: {
 *             name: "Microsoft.Logic/integrationServiceEnvironments",
 *         },
 *     }],
 * });
 * const isesubnet2 = new azure.network.Subnet("isesubnet2", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.64/26"],
 * });
 * const isesubnet3 = new azure.network.Subnet("isesubnet3", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.128/26"],
 * });
 * const isesubnet4 = new azure.network.Subnet("isesubnet4", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.192/26"],
 * });
 * const exampleInterationServiceEnvironment = new azure.logicapps.InterationServiceEnvironment("exampleInterationServiceEnvironment", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "Developer_0",
 *     accessEndpointType: "Internal",
 *     virtualNetworkSubnetIds: [
 *         isesubnet1.id,
 *         isesubnet2.id,
 *         isesubnet3.id,
 *         isesubnet4.id,
 *     ],
 *     tags: {
 *         environment: "development",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Integration Service Environments can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:logicapps/interationServiceEnvironment:InterationServiceEnvironment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logic/integrationServiceEnvironments/ise1
 * ```
 */
class InterationServiceEnvironment extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["accessEndpointType"] = state ? state.accessEndpointType : undefined;
            inputs["connectorEndpointIpAddresses"] = state ? state.connectorEndpointIpAddresses : undefined;
            inputs["connectorOutboundIpAddresses"] = state ? state.connectorOutboundIpAddresses : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["skuName"] = state ? state.skuName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["virtualNetworkSubnetIds"] = state ? state.virtualNetworkSubnetIds : undefined;
            inputs["workflowEndpointIpAddresses"] = state ? state.workflowEndpointIpAddresses : undefined;
            inputs["workflowOutboundIpAddresses"] = state ? state.workflowOutboundIpAddresses : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accessEndpointType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessEndpointType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.virtualNetworkSubnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkSubnetIds'");
            }
            inputs["accessEndpointType"] = args ? args.accessEndpointType : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["skuName"] = args ? args.skuName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["virtualNetworkSubnetIds"] = args ? args.virtualNetworkSubnetIds : undefined;
            inputs["connectorEndpointIpAddresses"] = undefined /*out*/;
            inputs["connectorOutboundIpAddresses"] = undefined /*out*/;
            inputs["workflowEndpointIpAddresses"] = undefined /*out*/;
            inputs["workflowOutboundIpAddresses"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(InterationServiceEnvironment.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing InterationServiceEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterationServiceEnvironment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterationServiceEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterationServiceEnvironment.__pulumiType;
    }
}
exports.InterationServiceEnvironment = InterationServiceEnvironment;
/** @internal */
InterationServiceEnvironment.__pulumiType = 'azure:logicapps/interationServiceEnvironment:InterationServiceEnvironment';
//# sourceMappingURL=interationServiceEnvironment.js.map