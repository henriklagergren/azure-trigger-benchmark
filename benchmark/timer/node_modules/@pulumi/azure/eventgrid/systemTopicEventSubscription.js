"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemTopicEventSubscription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an EventGrid System Topic Event Subscription.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     tags: {
 *         environment: "staging",
 *     },
 * });
 * const exampleQueue = new azure.storage.Queue("exampleQueue", {storageAccountName: exampleAccount.name});
 * const exampleSystemTopic = new azure.eventgrid.SystemTopic("exampleSystemTopic", {
 *     location: "Global",
 *     resourceGroupName: exampleResourceGroup.name,
 *     sourceArmResourceId: exampleResourceGroup.id,
 *     topicType: "Microsoft.Resources.ResourceGroups",
 * });
 * const exampleSystemTopicEventSubscription = new azure.eventgrid.SystemTopicEventSubscription("exampleSystemTopicEventSubscription", {
 *     systemTopic: exampleSystemTopic.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     storageQueueEndpoint: {
 *         storageAccountId: exampleAccount.id,
 *         queueName: exampleQueue.name,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * EventGrid System Topic Event Subscriptions can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventGrid/systemTopics/topic1/eventSubscriptions/subscription1
 * ```
 */
class SystemTopicEventSubscription extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["advancedFilter"] = state ? state.advancedFilter : undefined;
            inputs["advancedFilteringOnArraysEnabled"] = state ? state.advancedFilteringOnArraysEnabled : undefined;
            inputs["azureFunctionEndpoint"] = state ? state.azureFunctionEndpoint : undefined;
            inputs["deadLetterIdentity"] = state ? state.deadLetterIdentity : undefined;
            inputs["deliveryIdentity"] = state ? state.deliveryIdentity : undefined;
            inputs["eventDeliverySchema"] = state ? state.eventDeliverySchema : undefined;
            inputs["eventhubEndpointId"] = state ? state.eventhubEndpointId : undefined;
            inputs["expirationTimeUtc"] = state ? state.expirationTimeUtc : undefined;
            inputs["hybridConnectionEndpointId"] = state ? state.hybridConnectionEndpointId : undefined;
            inputs["includedEventTypes"] = state ? state.includedEventTypes : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["retryPolicy"] = state ? state.retryPolicy : undefined;
            inputs["serviceBusQueueEndpointId"] = state ? state.serviceBusQueueEndpointId : undefined;
            inputs["serviceBusTopicEndpointId"] = state ? state.serviceBusTopicEndpointId : undefined;
            inputs["storageBlobDeadLetterDestination"] = state ? state.storageBlobDeadLetterDestination : undefined;
            inputs["storageQueueEndpoint"] = state ? state.storageQueueEndpoint : undefined;
            inputs["subjectFilter"] = state ? state.subjectFilter : undefined;
            inputs["systemTopic"] = state ? state.systemTopic : undefined;
            inputs["webhookEndpoint"] = state ? state.webhookEndpoint : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.systemTopic === undefined) && !opts.urn) {
                throw new Error("Missing required property 'systemTopic'");
            }
            inputs["advancedFilter"] = args ? args.advancedFilter : undefined;
            inputs["advancedFilteringOnArraysEnabled"] = args ? args.advancedFilteringOnArraysEnabled : undefined;
            inputs["azureFunctionEndpoint"] = args ? args.azureFunctionEndpoint : undefined;
            inputs["deadLetterIdentity"] = args ? args.deadLetterIdentity : undefined;
            inputs["deliveryIdentity"] = args ? args.deliveryIdentity : undefined;
            inputs["eventDeliverySchema"] = args ? args.eventDeliverySchema : undefined;
            inputs["eventhubEndpointId"] = args ? args.eventhubEndpointId : undefined;
            inputs["expirationTimeUtc"] = args ? args.expirationTimeUtc : undefined;
            inputs["hybridConnectionEndpointId"] = args ? args.hybridConnectionEndpointId : undefined;
            inputs["includedEventTypes"] = args ? args.includedEventTypes : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["retryPolicy"] = args ? args.retryPolicy : undefined;
            inputs["serviceBusQueueEndpointId"] = args ? args.serviceBusQueueEndpointId : undefined;
            inputs["serviceBusTopicEndpointId"] = args ? args.serviceBusTopicEndpointId : undefined;
            inputs["storageBlobDeadLetterDestination"] = args ? args.storageBlobDeadLetterDestination : undefined;
            inputs["storageQueueEndpoint"] = args ? args.storageQueueEndpoint : undefined;
            inputs["subjectFilter"] = args ? args.subjectFilter : undefined;
            inputs["systemTopic"] = args ? args.systemTopic : undefined;
            inputs["webhookEndpoint"] = args ? args.webhookEndpoint : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SystemTopicEventSubscription.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SystemTopicEventSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SystemTopicEventSubscription(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SystemTopicEventSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemTopicEventSubscription.__pulumiType;
    }
}
exports.SystemTopicEventSubscription = SystemTopicEventSubscription;
/** @internal */
SystemTopicEventSubscription.__pulumiType = 'azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription';
//# sourceMappingURL=systemTopicEventSubscription.js.map