"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGeographicalLocationOutput = exports.getGeographicalLocation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to access the ID of a specified Traffic Manager Geographical Location within the Geographical Hierarchy.
 *
 * ## Example Usage
 * ### World)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.network.getTrafficManager({
 *     name: "World",
 * });
 * export const locationCode = example.then(example => example.id);
 * ```
 */
/** @deprecated azure.trafficmanager.getGeographicalLocation has been deprecated in favor of azure.network.getTrafficManager */
function getGeographicalLocation(args, opts) {
    pulumi.log.warn("getGeographicalLocation is deprecated: azure.trafficmanager.getGeographicalLocation has been deprecated in favor of azure.network.getTrafficManager");
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:trafficmanager/getGeographicalLocation:getGeographicalLocation", {
        "name": args.name,
    }, opts);
}
exports.getGeographicalLocation = getGeographicalLocation;
function getGeographicalLocationOutput(args, opts) {
    return pulumi.output(args).apply(a => getGeographicalLocation(a, opts));
}
exports.getGeographicalLocationOutput = getGeographicalLocationOutput;
//# sourceMappingURL=getGeographicalLocation.js.map