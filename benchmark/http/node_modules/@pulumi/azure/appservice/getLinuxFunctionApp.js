"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLinuxFunctionAppOutput = exports.getLinuxFunctionApp = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to access information about an existing Linux Function App.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.appservice.getLinuxFunctionApp({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = data.linux_function_app.example.id;
 * ```
 * ## Arguments Referencez
 *
 * The following arguments are supported:
 *
 * * `name` - (Required) The name which should be used for this Linux Function App.
 *
 * * `resourceGroupName` - (Required) The name of the Resource Group where the Linux Function App should exist.
 */
function getLinuxFunctionApp(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:appservice/getLinuxFunctionApp:getLinuxFunctionApp", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getLinuxFunctionApp = getLinuxFunctionApp;
function getLinuxFunctionAppOutput(args, opts) {
    return pulumi.output(args).apply(a => getLinuxFunctionApp(a, opts));
}
exports.getLinuxFunctionAppOutput = getLinuxFunctionAppOutput;
//# sourceMappingURL=getLinuxFunctionApp.js.map