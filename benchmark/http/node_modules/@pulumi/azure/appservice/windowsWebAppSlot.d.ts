import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manages a Windows Web App Slot.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleServicePlan = new azure.appservice.ServicePlan("exampleServicePlan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: "West Europe",
 *     osType: "Windows",
 *     skuName: "P1V2",
 * });
 * const exampleWindowsWebApp = new azure.appservice.WindowsWebApp("exampleWindowsWebApp", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleServicePlan.location,
 *     servicePlanId: exampleServicePlan.id,
 *     siteConfig: {},
 * });
 * const exampleWindowsWebAppSlot = new azure.appservice.WindowsWebAppSlot("exampleWindowsWebAppSlot", {
 *     appServiceId: exampleWindowsWebApp.id,
 *     siteConfig: {},
 * });
 * ```
 *
 * ## Import
 *
 * Windows Web Apps can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/windowsWebAppSlot:WindowsWebAppSlot example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1
 * ```
 */
export declare class WindowsWebAppSlot extends pulumi.CustomResource {
    /**
     * Get an existing WindowsWebAppSlot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WindowsWebAppSlotState, opts?: pulumi.CustomResourceOptions): WindowsWebAppSlot;
    /**
     * Returns true if the given object is an instance of WindowsWebAppSlot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WindowsWebAppSlot;
    /**
     * The ID of the Windows Web App this Deployment Slot will be part of. Changing this forces a new Windows Web App to be created.
     */
    readonly appServiceId: pulumi.Output<string>;
    /**
     * A map of key-value pairs of App Settings.
     */
    readonly appSettings: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A `authSettings` block as defined below.
     */
    readonly authSettings: pulumi.Output<outputs.appservice.WindowsWebAppSlotAuthSettings>;
    /**
     * A `backup` block as defined below.
     */
    readonly backup: pulumi.Output<outputs.appservice.WindowsWebAppSlotBackup | undefined>;
    /**
     * Should Client Affinity be enabled?
     */
    readonly clientAffinityEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Should Client Certificates be enabled?
     */
    readonly clientCertificateEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Client Certificate mode. Possible values include `Optional` and `Required`. This property has no effect when `clientCertEnabled` is `false`
     */
    readonly clientCertificateMode: pulumi.Output<string | undefined>;
    /**
     * One or more `connectionString` blocks as defined below.
     */
    readonly connectionStrings: pulumi.Output<outputs.appservice.WindowsWebAppSlotConnectionString[] | undefined>;
    /**
     * The identifier used by App Service to perform domain ownership verification via DNS TXT record.
     */
    readonly customDomainVerificationId: pulumi.Output<string>;
    /**
     * The default hostname of the Windows Web App Slot.
     */
    readonly defaultHostname: pulumi.Output<string>;
    /**
     * Should the Windows Web App Slot be enabled? Defaults to `true`.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Should the Windows Web App Slot require HTTPS connections.
     */
    readonly httpsOnly: pulumi.Output<boolean | undefined>;
    /**
     * An `identity` block as defined below.
     */
    readonly identity: pulumi.Output<outputs.appservice.WindowsWebAppSlotIdentity | undefined>;
    /**
     * The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/en-us/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
     */
    readonly keyVaultReferenceIdentityId: pulumi.Output<string>;
    /**
     * The Kind value for this Windows Web App Slot.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * A `logs` block as defined below.
     */
    readonly logs: pulumi.Output<outputs.appservice.WindowsWebAppSlotLogs | undefined>;
    /**
     * The name which should be used for this Windows Web App Slot. Changing this forces a new Windows Web App Slot to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
     */
    readonly outboundIpAddressLists: pulumi.Output<string[]>;
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`.
     */
    readonly outboundIpAddresses: pulumi.Output<string>;
    /**
     * A `possibleOutboundIpAddressList` block as defined below.
     */
    readonly possibleOutboundIpAddressLists: pulumi.Output<string[]>;
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
     */
    readonly possibleOutboundIpAddresses: pulumi.Output<string>;
    /**
     * A `siteConfig` block as defined below.
     */
    readonly siteConfig: pulumi.Output<outputs.appservice.WindowsWebAppSlotSiteConfig>;
    /**
     * A `siteCredential` block as defined below.
     */
    readonly siteCredentials: pulumi.Output<outputs.appservice.WindowsWebAppSlotSiteCredential[]>;
    /**
     * One or more `storageAccount` blocks as defined below.
     */
    readonly storageAccounts: pulumi.Output<outputs.appservice.WindowsWebAppSlotStorageAccount[] | undefined>;
    /**
     * A mapping of tags which should be assigned to the Windows Web App Slot.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a WindowsWebAppSlot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WindowsWebAppSlotArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WindowsWebAppSlot resources.
 */
export interface WindowsWebAppSlotState {
    /**
     * The ID of the Windows Web App this Deployment Slot will be part of. Changing this forces a new Windows Web App to be created.
     */
    appServiceId?: pulumi.Input<string>;
    /**
     * A map of key-value pairs of App Settings.
     */
    appSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A `authSettings` block as defined below.
     */
    authSettings?: pulumi.Input<inputs.appservice.WindowsWebAppSlotAuthSettings>;
    /**
     * A `backup` block as defined below.
     */
    backup?: pulumi.Input<inputs.appservice.WindowsWebAppSlotBackup>;
    /**
     * Should Client Affinity be enabled?
     */
    clientAffinityEnabled?: pulumi.Input<boolean>;
    /**
     * Should Client Certificates be enabled?
     */
    clientCertificateEnabled?: pulumi.Input<boolean>;
    /**
     * The Client Certificate mode. Possible values include `Optional` and `Required`. This property has no effect when `clientCertEnabled` is `false`
     */
    clientCertificateMode?: pulumi.Input<string>;
    /**
     * One or more `connectionString` blocks as defined below.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsWebAppSlotConnectionString>[]>;
    /**
     * The identifier used by App Service to perform domain ownership verification via DNS TXT record.
     */
    customDomainVerificationId?: pulumi.Input<string>;
    /**
     * The default hostname of the Windows Web App Slot.
     */
    defaultHostname?: pulumi.Input<string>;
    /**
     * Should the Windows Web App Slot be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Should the Windows Web App Slot require HTTPS connections.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.appservice.WindowsWebAppSlotIdentity>;
    /**
     * The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/en-us/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
     */
    keyVaultReferenceIdentityId?: pulumi.Input<string>;
    /**
     * The Kind value for this Windows Web App Slot.
     */
    kind?: pulumi.Input<string>;
    /**
     * A `logs` block as defined below.
     */
    logs?: pulumi.Input<inputs.appservice.WindowsWebAppSlotLogs>;
    /**
     * The name which should be used for this Windows Web App Slot. Changing this forces a new Windows Web App Slot to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
     */
    outboundIpAddressLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`.
     */
    outboundIpAddresses?: pulumi.Input<string>;
    /**
     * A `possibleOutboundIpAddressList` block as defined below.
     */
    possibleOutboundIpAddressLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
     */
    possibleOutboundIpAddresses?: pulumi.Input<string>;
    /**
     * A `siteConfig` block as defined below.
     */
    siteConfig?: pulumi.Input<inputs.appservice.WindowsWebAppSlotSiteConfig>;
    /**
     * A `siteCredential` block as defined below.
     */
    siteCredentials?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsWebAppSlotSiteCredential>[]>;
    /**
     * One or more `storageAccount` blocks as defined below.
     */
    storageAccounts?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsWebAppSlotStorageAccount>[]>;
    /**
     * A mapping of tags which should be assigned to the Windows Web App Slot.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a WindowsWebAppSlot resource.
 */
export interface WindowsWebAppSlotArgs {
    /**
     * The ID of the Windows Web App this Deployment Slot will be part of. Changing this forces a new Windows Web App to be created.
     */
    appServiceId: pulumi.Input<string>;
    /**
     * A map of key-value pairs of App Settings.
     */
    appSettings?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A `authSettings` block as defined below.
     */
    authSettings?: pulumi.Input<inputs.appservice.WindowsWebAppSlotAuthSettings>;
    /**
     * A `backup` block as defined below.
     */
    backup?: pulumi.Input<inputs.appservice.WindowsWebAppSlotBackup>;
    /**
     * Should Client Affinity be enabled?
     */
    clientAffinityEnabled?: pulumi.Input<boolean>;
    /**
     * Should Client Certificates be enabled?
     */
    clientCertificateEnabled?: pulumi.Input<boolean>;
    /**
     * The Client Certificate mode. Possible values include `Optional` and `Required`. This property has no effect when `clientCertEnabled` is `false`
     */
    clientCertificateMode?: pulumi.Input<string>;
    /**
     * One or more `connectionString` blocks as defined below.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsWebAppSlotConnectionString>[]>;
    /**
     * Should the Windows Web App Slot be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Should the Windows Web App Slot require HTTPS connections.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.appservice.WindowsWebAppSlotIdentity>;
    /**
     * The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/en-us/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
     */
    keyVaultReferenceIdentityId?: pulumi.Input<string>;
    /**
     * A `logs` block as defined below.
     */
    logs?: pulumi.Input<inputs.appservice.WindowsWebAppSlotLogs>;
    /**
     * The name which should be used for this Windows Web App Slot. Changing this forces a new Windows Web App Slot to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `siteConfig` block as defined below.
     */
    siteConfig: pulumi.Input<inputs.appservice.WindowsWebAppSlotSiteConfig>;
    /**
     * One or more `storageAccount` blocks as defined below.
     */
    storageAccounts?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsWebAppSlotStorageAccount>[]>;
    /**
     * A mapping of tags which should be assigned to the Windows Web App Slot.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
