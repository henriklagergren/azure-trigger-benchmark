"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticSiteCustomDomain = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 * ### CNAME validation
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleStaticSite = new azure.appservice.StaticSite("exampleStaticSite", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleCNameRecord = new azure.dns.CNameRecord("exampleCNameRecord", {
 *     zoneName: "contoso.com",
 *     resourceGroupName: exampleResourceGroup.name,
 *     ttl: 300,
 *     record: exampleStaticSite.defaultHostName,
 * });
 * const exampleStaticSiteCustomDomain = new azure.appservice.StaticSiteCustomDomain("exampleStaticSiteCustomDomain", {
 *     staticSiteId: exampleStaticSite.id,
 *     domainName: pulumi.interpolate`${exampleCNameRecord.name}.${exampleCNameRecord.zoneName}`,
 *     validationType: "cname-delegation",
 * });
 * ```
 *
 * ## Import
 *
 * Static Site Custom Domains can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/staticSiteCustomDomain:StaticSiteCustomDomain example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1/customDomains/name.contoso.com
 * ```
 */
class StaticSiteCustomDomain extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["staticSiteId"] = state ? state.staticSiteId : undefined;
            resourceInputs["validationToken"] = state ? state.validationToken : undefined;
            resourceInputs["validationType"] = state ? state.validationType : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.staticSiteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'staticSiteId'");
            }
            if ((!args || args.validationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'validationType'");
            }
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["staticSiteId"] = args ? args.staticSiteId : undefined;
            resourceInputs["validationType"] = args ? args.validationType : undefined;
            resourceInputs["validationToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StaticSiteCustomDomain.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing StaticSiteCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new StaticSiteCustomDomain(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of StaticSiteCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StaticSiteCustomDomain.__pulumiType;
    }
}
exports.StaticSiteCustomDomain = StaticSiteCustomDomain;
/** @internal */
StaticSiteCustomDomain.__pulumiType = 'azure:appservice/staticSiteCustomDomain:StaticSiteCustomDomain';
//# sourceMappingURL=staticSiteCustomDomain.js.map