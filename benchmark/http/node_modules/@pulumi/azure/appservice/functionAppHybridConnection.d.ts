import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Function App Hybrid Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const test = new azure.appservice.ServicePlan("test", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     osType: "Windows",
 *     skuName: "S1",
 * });
 * const exampleNamespace = new azure.relay.Namespace("exampleNamespace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "Standard",
 * });
 * const exampleHybridConnection = new azure.relay.HybridConnection("exampleHybridConnection", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     relayNamespaceName: exampleNamespace.name,
 * });
 * const exampleWindowsFunctionApp = new azure.appservice.WindowsFunctionApp("exampleWindowsFunctionApp", {
 *     location: azurerm_resource_group.test.location,
 *     resourceGroupName: azurerm_resource_group.test.name,
 *     servicePlanId: test.id,
 *     storageAccountName: azurerm_storage_account.test.name,
 *     storageAccountAccessKey: azurerm_storage_account.test.primary_access_key,
 *     siteConfig: {},
 * });
 * const exampleFunctionAppHybridConnection = new azure.appservice.FunctionAppHybridConnection("exampleFunctionAppHybridConnection", {
 *     functionAppId: azurerm_windows_web_app.example.id,
 *     relayId: exampleHybridConnection.id,
 *     hostname: "myhostname.example",
 *     port: 8081,
 * });
 * ```
 *
 * ## Import
 *
 * a Function App Hybrid Connection can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/functionAppHybridConnection:FunctionAppHybridConnection example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1/hybridConnectionNamespaces/hybridConnectionNamespace1/relays/relay1"
 * ```
 */
export declare class FunctionAppHybridConnection extends pulumi.CustomResource {
    /**
     * Get an existing FunctionAppHybridConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionAppHybridConnectionState, opts?: pulumi.CustomResourceOptions): FunctionAppHybridConnection;
    /**
     * Returns true if the given object is an instance of FunctionAppHybridConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FunctionAppHybridConnection;
    /**
     * The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
     */
    readonly functionAppId: pulumi.Output<string>;
    /**
     * The hostname of the endpoint.
     */
    readonly hostname: pulumi.Output<string>;
    /**
     * The name of the Relay Namespace.
     */
    readonly namespaceName: pulumi.Output<string>;
    /**
     * The port to use for the endpoint
     */
    readonly port: pulumi.Output<number>;
    /**
     * The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
     */
    readonly relayId: pulumi.Output<string>;
    /**
     * The name of the Relay in use.
     */
    readonly relayName: pulumi.Output<string>;
    /**
     * The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
     */
    readonly sendKeyName: pulumi.Output<string | undefined>;
    /**
     * The Primary Access Key for the `sendKeyName`
     */
    readonly sendKeyValue: pulumi.Output<string>;
    /**
     * The Service Bus Namespace.
     */
    readonly serviceBusNamespace: pulumi.Output<string>;
    /**
     * The suffix for the endpoint.
     */
    readonly serviceBusSuffix: pulumi.Output<string>;
    /**
     * Create a FunctionAppHybridConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionAppHybridConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FunctionAppHybridConnection resources.
 */
export interface FunctionAppHybridConnectionState {
    /**
     * The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
     */
    functionAppId?: pulumi.Input<string>;
    /**
     * The hostname of the endpoint.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The name of the Relay Namespace.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The port to use for the endpoint
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
     */
    relayId?: pulumi.Input<string>;
    /**
     * The name of the Relay in use.
     */
    relayName?: pulumi.Input<string>;
    /**
     * The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
     */
    sendKeyName?: pulumi.Input<string>;
    /**
     * The Primary Access Key for the `sendKeyName`
     */
    sendKeyValue?: pulumi.Input<string>;
    /**
     * The Service Bus Namespace.
     */
    serviceBusNamespace?: pulumi.Input<string>;
    /**
     * The suffix for the endpoint.
     */
    serviceBusSuffix?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FunctionAppHybridConnection resource.
 */
export interface FunctionAppHybridConnectionArgs {
    /**
     * The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
     */
    functionAppId: pulumi.Input<string>;
    /**
     * The hostname of the endpoint.
     */
    hostname: pulumi.Input<string>;
    /**
     * The port to use for the endpoint
     */
    port: pulumi.Input<number>;
    /**
     * The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
     */
    relayId: pulumi.Input<string>;
    /**
     * The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
     */
    sendKeyName?: pulumi.Input<string>;
}
