"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseVulnerabilityAssessmentRuleBaseline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Database Vulnerability Assessment Rule Baseline.
 *
 * > **NOTE** Database Vulnerability Assessment is currently only available for MS SQL databases.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleSqlServer = new azure.sql.SqlServer("exampleSqlServer", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleContainer = new azure.storage.Container("exampleContainer", {
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const exampleServerSecurityAlertPolicy = new azure.mssql.ServerSecurityAlertPolicy("exampleServerSecurityAlertPolicy", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     serverName: exampleSqlServer.name,
 *     state: "Enabled",
 * });
 * const exampleDatabase = new azure.sql.Database("exampleDatabase", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     serverName: exampleSqlServer.name,
 *     location: exampleResourceGroup.location,
 *     edition: "Standard",
 * });
 * const exampleServerVulnerabilityAssessment = new azure.mssql.ServerVulnerabilityAssessment("exampleServerVulnerabilityAssessment", {
 *     serverSecurityAlertPolicyId: exampleServerSecurityAlertPolicy.id,
 *     storageContainerPath: pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}/`,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 * });
 * const exampleDatabaseVulnerabilityAssessmentRuleBaseline = new azure.mssql.DatabaseVulnerabilityAssessmentRuleBaseline("exampleDatabaseVulnerabilityAssessmentRuleBaseline", {
 *     serverVulnerabilityAssessmentId: exampleServerVulnerabilityAssessment.id,
 *     databaseName: exampleDatabase.name,
 *     ruleId: "VA2065",
 *     baselineName: "master",
 *     baselineResults: [
 *         {
 *             results: [
 *                 "allowedip1",
 *                 "123.123.123.123",
 *                 "123.123.123.123",
 *             ],
 *         },
 *         {
 *             results: [
 *                 "allowedip2",
 *                 "255.255.255.255",
 *                 "255.255.255.255",
 *             ],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Database Vulnerability Assessment Rule Baseline can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/servers/mssqlserver/databases/mysqldatabase/vulnerabilityAssessments/Default/rules/VA2065/baselines/master
 * ```
 */
class DatabaseVulnerabilityAssessmentRuleBaseline extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["baselineName"] = state ? state.baselineName : undefined;
            resourceInputs["baselineResults"] = state ? state.baselineResults : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["serverVulnerabilityAssessmentId"] = state ? state.serverVulnerabilityAssessmentId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.baselineResults === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineResults'");
            }
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.ruleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleId'");
            }
            if ((!args || args.serverVulnerabilityAssessmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverVulnerabilityAssessmentId'");
            }
            resourceInputs["baselineName"] = args ? args.baselineName : undefined;
            resourceInputs["baselineResults"] = args ? args.baselineResults : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["serverVulnerabilityAssessmentId"] = args ? args.serverVulnerabilityAssessmentId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseVulnerabilityAssessmentRuleBaseline.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing DatabaseVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DatabaseVulnerabilityAssessmentRuleBaseline(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DatabaseVulnerabilityAssessmentRuleBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseVulnerabilityAssessmentRuleBaseline.__pulumiType;
    }
}
exports.DatabaseVulnerabilityAssessmentRuleBaseline = DatabaseVulnerabilityAssessmentRuleBaseline;
/** @internal */
DatabaseVulnerabilityAssessmentRuleBaseline.__pulumiType = 'azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline';
//# sourceMappingURL=databaseVulnerabilityAssessmentRuleBaseline.js.map