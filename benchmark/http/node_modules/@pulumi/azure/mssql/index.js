"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./database"), exports);
__exportStar(require("./databaseExtendedAuditingPolicy"), exports);
__exportStar(require("./databaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./elasticPool"), exports);
__exportStar(require("./failoverGroup"), exports);
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getElasticPool"), exports);
__exportStar(require("./getManagedInstance"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./jobAgent"), exports);
__exportStar(require("./jobCredential"), exports);
__exportStar(require("./managedDatabase"), exports);
__exportStar(require("./managedInstance"), exports);
__exportStar(require("./managedInstanceActiveDirectoryAdministrator"), exports);
__exportStar(require("./managedInstanceFailoverGroup"), exports);
__exportStar(require("./outboundFirewallRule"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverExtendedAuditingPolicy"), exports);
__exportStar(require("./serverSecurityAlertPolicy"), exports);
__exportStar(require("./serverTransparentDataEncryption"), exports);
__exportStar(require("./serverVulnerabilityAssessment"), exports);
__exportStar(require("./virtualMachine"), exports);
__exportStar(require("./virtualNetworkRule"), exports);
// Import resources to register:
const database_1 = require("./database");
const databaseExtendedAuditingPolicy_1 = require("./databaseExtendedAuditingPolicy");
const databaseVulnerabilityAssessmentRuleBaseline_1 = require("./databaseVulnerabilityAssessmentRuleBaseline");
const elasticPool_1 = require("./elasticPool");
const failoverGroup_1 = require("./failoverGroup");
const firewallRule_1 = require("./firewallRule");
const jobAgent_1 = require("./jobAgent");
const jobCredential_1 = require("./jobCredential");
const managedDatabase_1 = require("./managedDatabase");
const managedInstance_1 = require("./managedInstance");
const managedInstanceActiveDirectoryAdministrator_1 = require("./managedInstanceActiveDirectoryAdministrator");
const managedInstanceFailoverGroup_1 = require("./managedInstanceFailoverGroup");
const outboundFirewallRule_1 = require("./outboundFirewallRule");
const server_1 = require("./server");
const serverExtendedAuditingPolicy_1 = require("./serverExtendedAuditingPolicy");
const serverSecurityAlertPolicy_1 = require("./serverSecurityAlertPolicy");
const serverTransparentDataEncryption_1 = require("./serverTransparentDataEncryption");
const serverVulnerabilityAssessment_1 = require("./serverVulnerabilityAssessment");
const virtualMachine_1 = require("./virtualMachine");
const virtualNetworkRule_1 = require("./virtualNetworkRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:mssql/database:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure:mssql/databaseExtendedAuditingPolicy:DatabaseExtendedAuditingPolicy":
                return new databaseExtendedAuditingPolicy_1.DatabaseExtendedAuditingPolicy(name, undefined, { urn });
            case "azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline":
                return new databaseVulnerabilityAssessmentRuleBaseline_1.DatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure:mssql/elasticPool:ElasticPool":
                return new elasticPool_1.ElasticPool(name, undefined, { urn });
            case "azure:mssql/failoverGroup:FailoverGroup":
                return new failoverGroup_1.FailoverGroup(name, undefined, { urn });
            case "azure:mssql/firewallRule:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure:mssql/jobAgent:JobAgent":
                return new jobAgent_1.JobAgent(name, undefined, { urn });
            case "azure:mssql/jobCredential:JobCredential":
                return new jobCredential_1.JobCredential(name, undefined, { urn });
            case "azure:mssql/managedDatabase:ManagedDatabase":
                return new managedDatabase_1.ManagedDatabase(name, undefined, { urn });
            case "azure:mssql/managedInstance:ManagedInstance":
                return new managedInstance_1.ManagedInstance(name, undefined, { urn });
            case "azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator":
                return new managedInstanceActiveDirectoryAdministrator_1.ManagedInstanceActiveDirectoryAdministrator(name, undefined, { urn });
            case "azure:mssql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup":
                return new managedInstanceFailoverGroup_1.ManagedInstanceFailoverGroup(name, undefined, { urn });
            case "azure:mssql/outboundFirewallRule:OutboundFirewallRule":
                return new outboundFirewallRule_1.OutboundFirewallRule(name, undefined, { urn });
            case "azure:mssql/server:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy":
                return new serverExtendedAuditingPolicy_1.ServerExtendedAuditingPolicy(name, undefined, { urn });
            case "azure:mssql/serverSecurityAlertPolicy:ServerSecurityAlertPolicy":
                return new serverSecurityAlertPolicy_1.ServerSecurityAlertPolicy(name, undefined, { urn });
            case "azure:mssql/serverTransparentDataEncryption:ServerTransparentDataEncryption":
                return new serverTransparentDataEncryption_1.ServerTransparentDataEncryption(name, undefined, { urn });
            case "azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment":
                return new serverVulnerabilityAssessment_1.ServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure:mssql/virtualMachine:VirtualMachine":
                return new virtualMachine_1.VirtualMachine(name, undefined, { urn });
            case "azure:mssql/virtualNetworkRule:VirtualNetworkRule":
                return new virtualNetworkRule_1.VirtualNetworkRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "mssql/database", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/databaseExtendedAuditingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/databaseVulnerabilityAssessmentRuleBaseline", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/elasticPool", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/failoverGroup", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/firewallRule", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/jobAgent", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/jobCredential", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/managedDatabase", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/managedInstance", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/managedInstanceActiveDirectoryAdministrator", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/managedInstanceFailoverGroup", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/outboundFirewallRule", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/server", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/serverExtendedAuditingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/serverSecurityAlertPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/serverTransparentDataEncryption", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/serverVulnerabilityAssessment", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/virtualMachine", _module);
pulumi.runtime.registerResourceModule("azure", "mssql/virtualNetworkRule", _module);
//# sourceMappingURL=index.js.map