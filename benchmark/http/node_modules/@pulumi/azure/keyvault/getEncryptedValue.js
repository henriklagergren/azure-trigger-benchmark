"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEncryptedValueOutput = exports.getEncryptedValue = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Encrypts or Decrypts a value using a Key Vault Key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleKeyVault = azure.keyvault.getKeyVault({
 *     name: "mykeyvault",
 *     resourceGroupName: "some-resource-group",
 * });
 * const exampleKey = exampleKeyVault.then(exampleKeyVault => azure.keyvault.getKey({
 *     name: "some-key",
 *     keyVaultId: exampleKeyVault.id,
 * }));
 * const encrypted = azure.keyvault.getEncryptedValue({
 *     keyVaultKeyId: azurerm_key_vault_key.test.id,
 *     algorithm: "RSA1_5",
 *     plainTextValue: "some-encrypted-value",
 * });
 * export const id = data.azurerm_key_vault_encrypted_value.example.encrypted_data;
 * ```
 */
function getEncryptedValue(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:keyvault/getEncryptedValue:getEncryptedValue", {
        "algorithm": args.algorithm,
        "encryptedData": args.encryptedData,
        "keyVaultKeyId": args.keyVaultKeyId,
        "plainTextValue": args.plainTextValue,
    }, opts);
}
exports.getEncryptedValue = getEncryptedValue;
function getEncryptedValueOutput(args, opts) {
    return pulumi.output(args).apply(a => getEncryptedValue(a, opts));
}
exports.getEncryptedValueOutput = getEncryptedValueOutput;
//# sourceMappingURL=getEncryptedValue.js.map