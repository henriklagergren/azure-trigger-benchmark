"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./aadDiagnosticSetting"), exports);
__exportStar(require("./actionGroup"), exports);
__exportStar(require("./actionRuleActionGroup"), exports);
__exportStar(require("./actionRuleSuppression"), exports);
__exportStar(require("./activityLogAlert"), exports);
__exportStar(require("./autoscaleSetting"), exports);
__exportStar(require("./diagnosticSetting"), exports);
__exportStar(require("./getActionGroup"), exports);
__exportStar(require("./getDiagnosticCategories"), exports);
__exportStar(require("./getLogProfile"), exports);
__exportStar(require("./getScheduledQueryRulesAlert"), exports);
__exportStar(require("./getScheduledQueryRulesLog"), exports);
__exportStar(require("./logProfile"), exports);
__exportStar(require("./logzMonitor"), exports);
__exportStar(require("./logzTagRule"), exports);
__exportStar(require("./metricAlert"), exports);
__exportStar(require("./privateLinkScope"), exports);
__exportStar(require("./privateLinkScopedService"), exports);
__exportStar(require("./scheduledQueryRulesAlert"), exports);
__exportStar(require("./scheduledQueryRulesLog"), exports);
__exportStar(require("./smartDetectorAlertRule"), exports);
// Import resources to register:
const aadDiagnosticSetting_1 = require("./aadDiagnosticSetting");
const actionGroup_1 = require("./actionGroup");
const actionRuleActionGroup_1 = require("./actionRuleActionGroup");
const actionRuleSuppression_1 = require("./actionRuleSuppression");
const activityLogAlert_1 = require("./activityLogAlert");
const autoscaleSetting_1 = require("./autoscaleSetting");
const diagnosticSetting_1 = require("./diagnosticSetting");
const logProfile_1 = require("./logProfile");
const logzMonitor_1 = require("./logzMonitor");
const logzTagRule_1 = require("./logzTagRule");
const metricAlert_1 = require("./metricAlert");
const privateLinkScope_1 = require("./privateLinkScope");
const privateLinkScopedService_1 = require("./privateLinkScopedService");
const scheduledQueryRulesAlert_1 = require("./scheduledQueryRulesAlert");
const scheduledQueryRulesLog_1 = require("./scheduledQueryRulesLog");
const smartDetectorAlertRule_1 = require("./smartDetectorAlertRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting":
                return new aadDiagnosticSetting_1.AadDiagnosticSetting(name, undefined, { urn });
            case "azure:monitoring/actionGroup:ActionGroup":
                return new actionGroup_1.ActionGroup(name, undefined, { urn });
            case "azure:monitoring/actionRuleActionGroup:ActionRuleActionGroup":
                return new actionRuleActionGroup_1.ActionRuleActionGroup(name, undefined, { urn });
            case "azure:monitoring/actionRuleSuppression:ActionRuleSuppression":
                return new actionRuleSuppression_1.ActionRuleSuppression(name, undefined, { urn });
            case "azure:monitoring/activityLogAlert:ActivityLogAlert":
                return new activityLogAlert_1.ActivityLogAlert(name, undefined, { urn });
            case "azure:monitoring/autoscaleSetting:AutoscaleSetting":
                return new autoscaleSetting_1.AutoscaleSetting(name, undefined, { urn });
            case "azure:monitoring/diagnosticSetting:DiagnosticSetting":
                return new diagnosticSetting_1.DiagnosticSetting(name, undefined, { urn });
            case "azure:monitoring/logProfile:LogProfile":
                return new logProfile_1.LogProfile(name, undefined, { urn });
            case "azure:monitoring/logzMonitor:LogzMonitor":
                return new logzMonitor_1.LogzMonitor(name, undefined, { urn });
            case "azure:monitoring/logzTagRule:LogzTagRule":
                return new logzTagRule_1.LogzTagRule(name, undefined, { urn });
            case "azure:monitoring/metricAlert:MetricAlert":
                return new metricAlert_1.MetricAlert(name, undefined, { urn });
            case "azure:monitoring/privateLinkScope:PrivateLinkScope":
                return new privateLinkScope_1.PrivateLinkScope(name, undefined, { urn });
            case "azure:monitoring/privateLinkScopedService:PrivateLinkScopedService":
                return new privateLinkScopedService_1.PrivateLinkScopedService(name, undefined, { urn });
            case "azure:monitoring/scheduledQueryRulesAlert:ScheduledQueryRulesAlert":
                return new scheduledQueryRulesAlert_1.ScheduledQueryRulesAlert(name, undefined, { urn });
            case "azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog":
                return new scheduledQueryRulesLog_1.ScheduledQueryRulesLog(name, undefined, { urn });
            case "azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule":
                return new smartDetectorAlertRule_1.SmartDetectorAlertRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "monitoring/aadDiagnosticSetting", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/actionGroup", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/actionRuleActionGroup", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/actionRuleSuppression", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/activityLogAlert", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/autoscaleSetting", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/diagnosticSetting", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/logProfile", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/logzMonitor", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/logzTagRule", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/metricAlert", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/privateLinkScope", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/privateLinkScopedService", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/scheduledQueryRulesAlert", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/scheduledQueryRulesLog", _module);
pulumi.runtime.registerResourceModule("azure", "monitoring/smartDetectorAlertRule", _module);
//# sourceMappingURL=index.js.map