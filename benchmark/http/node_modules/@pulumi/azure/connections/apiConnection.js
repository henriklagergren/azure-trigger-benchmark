"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an API Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleManagedApi = azure.connections.getManagedApiOutput({
 *     name: "servicebus",
 *     location: exampleResourceGroup.location,
 * });
 * const exampleApiConnection = new azure.connections.ApiConnection("exampleApiConnection", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     managedApiId: exampleManagedApi.apply(exampleManagedApi => exampleManagedApi.id),
 *     displayName: "Example 1",
 *     parameterValues: {
 *         connectionString: azurerm_servicebus_namespace.example.default_primary_connection_string,
 *     },
 *     tags: {
 *         Hello: "World",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * API Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:connections/apiConnection:ApiConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Web/connections/example-connection
 * ```
 */
class ApiConnection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["managedApiId"] = state ? state.managedApiId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameterValues"] = state ? state.parameterValues : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.managedApiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedApiId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["managedApiId"] = args ? args.managedApiId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameterValues"] = args ? args.parameterValues : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiConnection.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ApiConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApiConnection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApiConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiConnection.__pulumiType;
    }
}
exports.ApiConnection = ApiConnection;
/** @internal */
ApiConnection.__pulumiType = 'azure:connections/apiConnection:ApiConnection';
//# sourceMappingURL=apiConnection.js.map