import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an API Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleManagedApi = azure.connections.getManagedApiOutput({
 *     name: "servicebus",
 *     location: exampleResourceGroup.location,
 * });
 * const exampleApiConnection = new azure.connections.ApiConnection("exampleApiConnection", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     managedApiId: exampleManagedApi.apply(exampleManagedApi => exampleManagedApi.id),
 *     displayName: "Example 1",
 *     parameterValues: {
 *         connectionString: azurerm_servicebus_namespace.example.default_primary_connection_string,
 *     },
 *     tags: {
 *         Hello: "World",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * API Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:connections/apiConnection:ApiConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Web/connections/example-connection
 * ```
 */
export declare class ApiConnection extends pulumi.CustomResource {
    /**
     * Get an existing ApiConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiConnectionState, opts?: pulumi.CustomResourceOptions): ApiConnection;
    /**
     * Returns true if the given object is an instance of ApiConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApiConnection;
    /**
     * A display name for this API Connection. Changing this forces a new API Connection to be created.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The ID of the Managed API which this API Connection is linked to. Changing this forces a new API Connection to be created.
     */
    readonly managedApiId: pulumi.Output<string>;
    /**
     * The Name which should be used for this API Connection. Changing this forces a new API Connection to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A map of parameter values associated with this API Connection. Changing this forces a new API Connection to be created.
     */
    readonly parameterValues: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The name of the Resource Group where this API Connection should exist. Changing this forces a new API Connection to be created.
     */
    readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the API Connection.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ApiConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ApiConnection resources.
 */
export interface ApiConnectionState {
    /**
     * A display name for this API Connection. Changing this forces a new API Connection to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The ID of the Managed API which this API Connection is linked to. Changing this forces a new API Connection to be created.
     */
    managedApiId?: pulumi.Input<string>;
    /**
     * The Name which should be used for this API Connection. Changing this forces a new API Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A map of parameter values associated with this API Connection. Changing this forces a new API Connection to be created.
     */
    parameterValues?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the Resource Group where this API Connection should exist. Changing this forces a new API Connection to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the API Connection.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a ApiConnection resource.
 */
export interface ApiConnectionArgs {
    /**
     * A display name for this API Connection. Changing this forces a new API Connection to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The ID of the Managed API which this API Connection is linked to. Changing this forces a new API Connection to be created.
     */
    managedApiId: pulumi.Input<string>;
    /**
     * The Name which should be used for this API Connection. Changing this forces a new API Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A map of parameter values associated with this API Connection. Changing this forces a new API Connection to be created.
     */
    parameterValues?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the Resource Group where this API Connection should exist. Changing this forces a new API Connection to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the API Connection.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
