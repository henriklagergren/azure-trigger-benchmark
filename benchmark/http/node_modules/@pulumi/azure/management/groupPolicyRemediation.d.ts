import * as pulumi from "@pulumi/pulumi";
export declare class GroupPolicyRemediation extends pulumi.CustomResource {
    /**
     * Get an existing GroupPolicyRemediation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupPolicyRemediationState, opts?: pulumi.CustomResourceOptions): GroupPolicyRemediation;
    /**
     * Returns true if the given object is an instance of GroupPolicyRemediation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GroupPolicyRemediation;
    readonly locationFilters: pulumi.Output<string[] | undefined>;
    readonly managementGroupId: pulumi.Output<string>;
    readonly name: pulumi.Output<string>;
    readonly policyAssignmentId: pulumi.Output<string>;
    readonly policyDefinitionId: pulumi.Output<string | undefined>;
    readonly resourceDiscoveryMode: pulumi.Output<string | undefined>;
    /**
     * Create a GroupPolicyRemediation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupPolicyRemediationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GroupPolicyRemediation resources.
 */
export interface GroupPolicyRemediationState {
    locationFilters?: pulumi.Input<pulumi.Input<string>[]>;
    managementGroupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    policyAssignmentId?: pulumi.Input<string>;
    policyDefinitionId?: pulumi.Input<string>;
    resourceDiscoveryMode?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GroupPolicyRemediation resource.
 */
export interface GroupPolicyRemediationArgs {
    locationFilters?: pulumi.Input<pulumi.Input<string>[]>;
    managementGroupId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    policyAssignmentId: pulumi.Input<string>;
    policyDefinitionId?: pulumi.Input<string>;
    resourceDiscoveryMode?: pulumi.Input<string>;
}
