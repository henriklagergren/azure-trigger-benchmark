"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleService = new azure.apimanagement.Service("exampleService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     publisherName: "My Company",
 *     publisherEmail: "company@exmaple.com",
 *     skuName: "Developer_1",
 * });
 * ```
 *
 * ## Import
 *
 * API Management Services can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:apimanagement/service:Service example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1
 * ```
 */
class Service extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["additionalLocations"] = state ? state.additionalLocations : undefined;
            resourceInputs["certificates"] = state ? state.certificates : undefined;
            resourceInputs["clientCertificateEnabled"] = state ? state.clientCertificateEnabled : undefined;
            resourceInputs["developerPortalUrl"] = state ? state.developerPortalUrl : undefined;
            resourceInputs["gatewayDisabled"] = state ? state.gatewayDisabled : undefined;
            resourceInputs["gatewayRegionalUrl"] = state ? state.gatewayRegionalUrl : undefined;
            resourceInputs["gatewayUrl"] = state ? state.gatewayUrl : undefined;
            resourceInputs["hostnameConfiguration"] = state ? state.hostnameConfiguration : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managementApiUrl"] = state ? state.managementApiUrl : undefined;
            resourceInputs["minApiVersion"] = state ? state.minApiVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationSenderEmail"] = state ? state.notificationSenderEmail : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["portalUrl"] = state ? state.portalUrl : undefined;
            resourceInputs["privateIpAddresses"] = state ? state.privateIpAddresses : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["publicIpAddressId"] = state ? state.publicIpAddressId : undefined;
            resourceInputs["publicIpAddresses"] = state ? state.publicIpAddresses : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["publisherEmail"] = state ? state.publisherEmail : undefined;
            resourceInputs["publisherName"] = state ? state.publisherName : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["scmUrl"] = state ? state.scmUrl : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["signIn"] = state ? state.signIn : undefined;
            resourceInputs["signUp"] = state ? state.signUp : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantAccess"] = state ? state.tenantAccess : undefined;
            resourceInputs["virtualNetworkConfiguration"] = state ? state.virtualNetworkConfiguration : undefined;
            resourceInputs["virtualNetworkType"] = state ? state.virtualNetworkType : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.publisherEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publisherEmail'");
            }
            if ((!args || args.publisherName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publisherName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            resourceInputs["additionalLocations"] = args ? args.additionalLocations : undefined;
            resourceInputs["certificates"] = args ? args.certificates : undefined;
            resourceInputs["clientCertificateEnabled"] = args ? args.clientCertificateEnabled : undefined;
            resourceInputs["gatewayDisabled"] = args ? args.gatewayDisabled : undefined;
            resourceInputs["hostnameConfiguration"] = args ? args.hostnameConfiguration : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["minApiVersion"] = args ? args.minApiVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notificationSenderEmail"] = args ? args.notificationSenderEmail : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["publicIpAddressId"] = args ? args.publicIpAddressId : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["publisherEmail"] = args ? args.publisherEmail : undefined;
            resourceInputs["publisherName"] = args ? args.publisherName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["signIn"] = args ? args.signIn : undefined;
            resourceInputs["signUp"] = args ? args.signUp : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantAccess"] = args ? args.tenantAccess : undefined;
            resourceInputs["virtualNetworkConfiguration"] = args ? args.virtualNetworkConfiguration : undefined;
            resourceInputs["virtualNetworkType"] = args ? args.virtualNetworkType : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["developerPortalUrl"] = undefined /*out*/;
            resourceInputs["gatewayRegionalUrl"] = undefined /*out*/;
            resourceInputs["gatewayUrl"] = undefined /*out*/;
            resourceInputs["managementApiUrl"] = undefined /*out*/;
            resourceInputs["portalUrl"] = undefined /*out*/;
            resourceInputs["privateIpAddresses"] = undefined /*out*/;
            resourceInputs["publicIpAddresses"] = undefined /*out*/;
            resourceInputs["scmUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Service.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Service(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Service.__pulumiType;
    }
}
exports.Service = Service;
/** @internal */
Service.__pulumiType = 'azure:apimanagement/service:Service';
//# sourceMappingURL=service.js.map