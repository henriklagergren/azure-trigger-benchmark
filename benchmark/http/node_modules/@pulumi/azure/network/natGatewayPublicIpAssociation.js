"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NatGatewayPublicIpAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages the association between a Nat Gateway and a Public IP.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const examplePublicIp = new azure.network.PublicIp("examplePublicIp", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 * });
 * const exampleNatGateway = new azure.network.NatGateway("exampleNatGateway", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "Standard",
 * });
 * const exampleNatGatewayPublicIpAssociation = new azure.network.NatGatewayPublicIpAssociation("exampleNatGatewayPublicIpAssociation", {
 *     natGatewayId: exampleNatGateway.id,
 *     publicIpAddressId: examplePublicIp.id,
 * });
 * ```
 *
 * ## Import
 *
 * Associations between Nat Gateway and Public IP Addresses can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/natGateways/gateway1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/publicIPAddresses/myPublicIpAddress1"
 * ```
 */
class NatGatewayPublicIpAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["natGatewayId"] = state ? state.natGatewayId : undefined;
            resourceInputs["publicIpAddressId"] = state ? state.publicIpAddressId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.natGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'natGatewayId'");
            }
            if ((!args || args.publicIpAddressId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicIpAddressId'");
            }
            resourceInputs["natGatewayId"] = args ? args.natGatewayId : undefined;
            resourceInputs["publicIpAddressId"] = args ? args.publicIpAddressId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatGatewayPublicIpAssociation.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing NatGatewayPublicIpAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new NatGatewayPublicIpAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of NatGatewayPublicIpAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatGatewayPublicIpAssociation.__pulumiType;
    }
}
exports.NatGatewayPublicIpAssociation = NatGatewayPublicIpAssociation;
/** @internal */
NatGatewayPublicIpAssociation.__pulumiType = 'azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation';
//# sourceMappingURL=natGatewayPublicIpAssociation.js.map