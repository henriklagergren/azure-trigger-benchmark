import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manages a Connection for a Virtual Hub.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     addressSpaces: ["172.0.0.0/16"],
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleVirtualWan = new azure.network.VirtualWan("exampleVirtualWan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("exampleVirtualHub", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     virtualWanId: exampleVirtualWan.id,
 *     addressPrefix: "10.0.1.0/24",
 * });
 * const exampleVirtualHubConnection = new azure.network.VirtualHubConnection("exampleVirtualHubConnection", {
 *     virtualHubId: exampleVirtualHub.id,
 *     remoteVirtualNetworkId: exampleVirtualNetwork.id,
 * });
 * ```
 *
 * ## Import
 *
 * Virtual Hub Connection's can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/virtualHubConnection:VirtualHubConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/connection1
 * ```
 */
export declare class VirtualHubConnection extends pulumi.CustomResource {
    /**
     * Get an existing VirtualHubConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualHubConnectionState, opts?: pulumi.CustomResourceOptions): VirtualHubConnection;
    /**
     * Returns true if the given object is an instance of VirtualHubConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualHubConnection;
    /**
     * Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
     */
    readonly internetSecurityEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
     */
    readonly remoteVirtualNetworkId: pulumi.Output<string>;
    /**
     * A `routing` block as defined below.
     */
    readonly routing: pulumi.Output<outputs.network.VirtualHubConnectionRouting>;
    /**
     * The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
     */
    readonly virtualHubId: pulumi.Output<string>;
    /**
     * Create a VirtualHubConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualHubConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VirtualHubConnection resources.
 */
export interface VirtualHubConnectionState {
    /**
     * Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
     */
    internetSecurityEnabled?: pulumi.Input<boolean>;
    /**
     * The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
     */
    remoteVirtualNetworkId?: pulumi.Input<string>;
    /**
     * A `routing` block as defined below.
     */
    routing?: pulumi.Input<inputs.network.VirtualHubConnectionRouting>;
    /**
     * The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
     */
    virtualHubId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VirtualHubConnection resource.
 */
export interface VirtualHubConnectionArgs {
    /**
     * Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
     */
    internetSecurityEnabled?: pulumi.Input<boolean>;
    /**
     * The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
     */
    remoteVirtualNetworkId: pulumi.Input<string>;
    /**
     * A `routing` block as defined below.
     */
    routing?: pulumi.Input<inputs.network.VirtualHubConnectionRouting>;
    /**
     * The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
     */
    virtualHubId: pulumi.Input<string>;
}
