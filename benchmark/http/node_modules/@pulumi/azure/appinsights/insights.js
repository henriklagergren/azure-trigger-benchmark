"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Insights = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Application Insights component.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationType: "web",
 * });
 * export const instrumentationKey = exampleInsights.instrumentationKey;
 * export const appId = exampleInsights.appId;
 * ```
 * ### Workspace Mode
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     workspaceId: exampleAnalyticsWorkspace.id,
 *     applicationType: "web",
 * });
 * export const instrumentationKey = exampleInsights.instrumentationKey;
 * export const appId = exampleInsights.appId;
 * ```
 *
 * ## Import
 *
 * Application Insights instances can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appinsights/insights:Insights instance1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Insights/components/instance1
 * ```
 */
class Insights extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["applicationType"] = state ? state.applicationType : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["dailyDataCapInGb"] = state ? state.dailyDataCapInGb : undefined;
            resourceInputs["dailyDataCapNotificationsDisabled"] = state ? state.dailyDataCapNotificationsDisabled : undefined;
            resourceInputs["disableIpMasking"] = state ? state.disableIpMasking : undefined;
            resourceInputs["forceCustomerStorageForProfiler"] = state ? state.forceCustomerStorageForProfiler : undefined;
            resourceInputs["instrumentationKey"] = state ? state.instrumentationKey : undefined;
            resourceInputs["internetIngestionEnabled"] = state ? state.internetIngestionEnabled : undefined;
            resourceInputs["internetQueryEnabled"] = state ? state.internetQueryEnabled : undefined;
            resourceInputs["localAuthenticationDisabled"] = state ? state.localAuthenticationDisabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retentionInDays"] = state ? state.retentionInDays : undefined;
            resourceInputs["samplingPercentage"] = state ? state.samplingPercentage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.applicationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["applicationType"] = args ? args.applicationType : undefined;
            resourceInputs["dailyDataCapInGb"] = args ? args.dailyDataCapInGb : undefined;
            resourceInputs["dailyDataCapNotificationsDisabled"] = args ? args.dailyDataCapNotificationsDisabled : undefined;
            resourceInputs["disableIpMasking"] = args ? args.disableIpMasking : undefined;
            resourceInputs["forceCustomerStorageForProfiler"] = args ? args.forceCustomerStorageForProfiler : undefined;
            resourceInputs["internetIngestionEnabled"] = args ? args.internetIngestionEnabled : undefined;
            resourceInputs["internetQueryEnabled"] = args ? args.internetQueryEnabled : undefined;
            resourceInputs["localAuthenticationDisabled"] = args ? args.localAuthenticationDisabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["retentionInDays"] = args ? args.retentionInDays : undefined;
            resourceInputs["samplingPercentage"] = args ? args.samplingPercentage : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["instrumentationKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Insights.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Insights resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Insights(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Insights.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Insights.__pulumiType;
    }
}
exports.Insights = Insights;
/** @internal */
Insights.__pulumiType = 'azure:appinsights/insights:Insights';
//# sourceMappingURL=insights.js.map