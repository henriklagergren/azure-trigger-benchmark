"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiveEventOutput = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Azure Media Live Event Output.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleServiceAccount = new azure.media.ServiceAccount("exampleServiceAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     storageAccounts: [{
 *         id: exampleAccount.id,
 *         isPrimary: true,
 *     }],
 * });
 * const exampleAsset = new azure.media.Asset("exampleAsset", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     mediaServicesAccountName: exampleServiceAccount.name,
 * });
 * const exampleLiveEvent = new azure.media.LiveEvent("exampleLiveEvent", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     mediaServicesAccountName: exampleServiceAccount.name,
 *     description: "My Event Description",
 *     input: {
 *         streamingProtocol: "RTMP",
 *         keyFrameIntervalDuration: "PT6S",
 *         ipAccessControlAllows: [{
 *             name: "AllowAll",
 *             address: "0.0.0.0",
 *             subnetPrefixLength: 0,
 *         }],
 *     },
 * });
 * const exampleLiveEventOutput = new azure.media.LiveEventOutput("exampleLiveEventOutput", {
 *     liveEventId: exampleLiveEvent.id,
 *     archiveWindowLength: "PT5M",
 *     assetName: exampleAsset.name,
 *     description: "Test live output 1",
 *     manifestName: "testmanifest",
 *     outputSnapTimeInSeconds: 0,
 *     hlsFragmentsPerTsSegment: 5,
 * });
 * ```
 *
 * ## Import
 *
 * Live Outputs can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:media/liveEventOutput:LiveEventOutput example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Media/mediaservices/account1/liveevents/event1/liveoutputs/output1
 * ```
 */
class LiveEventOutput extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["archiveWindowDuration"] = state ? state.archiveWindowDuration : undefined;
            resourceInputs["assetName"] = state ? state.assetName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hlsFragmentsPerTsSegment"] = state ? state.hlsFragmentsPerTsSegment : undefined;
            resourceInputs["liveEventId"] = state ? state.liveEventId : undefined;
            resourceInputs["manifestName"] = state ? state.manifestName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputSnapTimeInSeconds"] = state ? state.outputSnapTimeInSeconds : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.archiveWindowDuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'archiveWindowDuration'");
            }
            if ((!args || args.assetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assetName'");
            }
            if ((!args || args.liveEventId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'liveEventId'");
            }
            resourceInputs["archiveWindowDuration"] = args ? args.archiveWindowDuration : undefined;
            resourceInputs["assetName"] = args ? args.assetName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hlsFragmentsPerTsSegment"] = args ? args.hlsFragmentsPerTsSegment : undefined;
            resourceInputs["liveEventId"] = args ? args.liveEventId : undefined;
            resourceInputs["manifestName"] = args ? args.manifestName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outputSnapTimeInSeconds"] = args ? args.outputSnapTimeInSeconds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LiveEventOutput.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing LiveEventOutput resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new LiveEventOutput(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of LiveEventOutput.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LiveEventOutput.__pulumiType;
    }
}
exports.LiveEventOutput = LiveEventOutput;
/** @internal */
LiveEventOutput.__pulumiType = 'azure:media/liveEventOutput:LiveEventOutput';
//# sourceMappingURL=liveEventOutput.js.map