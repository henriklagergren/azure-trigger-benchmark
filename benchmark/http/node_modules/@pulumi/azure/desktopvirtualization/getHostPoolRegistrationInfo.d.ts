import * as pulumi from "@pulumi/pulumi";
/**
 * Manages the Registration Info for a Virtual Desktop Host Pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "westeurope"});
 * const exampleHostPool = new azure.desktopvirtualization.HostPool("exampleHostPool", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     type: "Pooled",
 *     validateEnvironment: true,
 *     loadBalancerType: "BreadthFirst",
 * });
 * const examplegetHostPoolRegistrationInfo = new azure.desktopvirtualization.GetHostPoolRegistrationInfo("examplegetHostPoolRegistrationInfo", {
 *     hostpoolId: exampleHostPool.id,
 *     expirationDate: "2022-01-01T23:40:52Z",
 * });
 * ```
 *
 * ## Import
 *
 * AVD Registration Infos can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:desktopvirtualization/getHostPoolRegistrationInfo:getHostPoolRegistrationInfo example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DesktopVirtualization/hostPools/pool1/registrationInfo/default
 * ```
 */
export declare class GetHostPoolRegistrationInfo extends pulumi.CustomResource {
    /**
     * Get an existing GetHostPoolRegistrationInfo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GetHostPoolRegistrationInfoState, opts?: pulumi.CustomResourceOptions): GetHostPoolRegistrationInfo;
    /**
     * Returns true if the given object is an instance of GetHostPoolRegistrationInfo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GetHostPoolRegistrationInfo;
    /**
     * A valid `RFC3339Time` for the expiration of the token..
     */
    readonly expirationDate: pulumi.Output<string>;
    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtualDesktopHostPoolRegistrationInfo resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     */
    readonly hostpoolId: pulumi.Output<string>;
    /**
     * The registration token generated by the Virtual Desktop Host Pool for registration of session hosts.
     */
    readonly token: pulumi.Output<string>;
    /**
     * Create a GetHostPoolRegistrationInfo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GetHostPoolRegistrationInfoArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering getHostPoolRegistrationInfo resources.
 */
export interface GetHostPoolRegistrationInfoState {
    /**
     * A valid `RFC3339Time` for the expiration of the token..
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtualDesktopHostPoolRegistrationInfo resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     */
    hostpoolId?: pulumi.Input<string>;
    /**
     * The registration token generated by the Virtual Desktop Host Pool for registration of session hosts.
     */
    token?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GetHostPoolRegistrationInfo resource.
 */
export interface GetHostPoolRegistrationInfoArgs {
    /**
     * A valid `RFC3339Time` for the expiration of the token..
     */
    expirationDate: pulumi.Input<string>;
    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtualDesktopHostPoolRegistrationInfo resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     */
    hostpoolId: pulumi.Input<string>;
}
