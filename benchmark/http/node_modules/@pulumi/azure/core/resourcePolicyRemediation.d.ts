import * as pulumi from "@pulumi/pulumi";
export declare class ResourcePolicyRemediation extends pulumi.CustomResource {
    /**
     * Get an existing ResourcePolicyRemediation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourcePolicyRemediationState, opts?: pulumi.CustomResourceOptions): ResourcePolicyRemediation;
    /**
     * Returns true if the given object is an instance of ResourcePolicyRemediation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourcePolicyRemediation;
    readonly locationFilters: pulumi.Output<string[] | undefined>;
    readonly name: pulumi.Output<string>;
    readonly policyAssignmentId: pulumi.Output<string>;
    readonly policyDefinitionId: pulumi.Output<string | undefined>;
    readonly resourceDiscoveryMode: pulumi.Output<string | undefined>;
    readonly resourceId: pulumi.Output<string>;
    /**
     * Create a ResourcePolicyRemediation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourcePolicyRemediationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResourcePolicyRemediation resources.
 */
export interface ResourcePolicyRemediationState {
    locationFilters?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    policyAssignmentId?: pulumi.Input<string>;
    policyDefinitionId?: pulumi.Input<string>;
    resourceDiscoveryMode?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ResourcePolicyRemediation resource.
 */
export interface ResourcePolicyRemediationArgs {
    locationFilters?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    policyAssignmentId: pulumi.Input<string>;
    policyDefinitionId?: pulumi.Input<string>;
    resourceDiscoveryMode?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
