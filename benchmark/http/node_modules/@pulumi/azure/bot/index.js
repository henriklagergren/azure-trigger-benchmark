"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./channelAlexa"), exports);
__exportStar(require("./channelDirectLine"), exports);
__exportStar(require("./channelDirectLineSpeech"), exports);
__exportStar(require("./channelEmail"), exports);
__exportStar(require("./channelFacebook"), exports);
__exportStar(require("./channelLine"), exports);
__exportStar(require("./channelSlack"), exports);
__exportStar(require("./channelSms"), exports);
__exportStar(require("./channelTeams"), exports);
__exportStar(require("./channelWebChat"), exports);
__exportStar(require("./channelsRegistration"), exports);
__exportStar(require("./connection"), exports);
__exportStar(require("./healthbot"), exports);
__exportStar(require("./serviceAzureBot"), exports);
__exportStar(require("./webApp"), exports);
// Import resources to register:
const channelAlexa_1 = require("./channelAlexa");
const channelDirectLine_1 = require("./channelDirectLine");
const channelDirectLineSpeech_1 = require("./channelDirectLineSpeech");
const channelEmail_1 = require("./channelEmail");
const channelFacebook_1 = require("./channelFacebook");
const channelLine_1 = require("./channelLine");
const channelSlack_1 = require("./channelSlack");
const channelSms_1 = require("./channelSms");
const channelTeams_1 = require("./channelTeams");
const channelWebChat_1 = require("./channelWebChat");
const channelsRegistration_1 = require("./channelsRegistration");
const connection_1 = require("./connection");
const healthbot_1 = require("./healthbot");
const serviceAzureBot_1 = require("./serviceAzureBot");
const webApp_1 = require("./webApp");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:bot/channelAlexa:ChannelAlexa":
                return new channelAlexa_1.ChannelAlexa(name, undefined, { urn });
            case "azure:bot/channelDirectLine:ChannelDirectLine":
                return new channelDirectLine_1.ChannelDirectLine(name, undefined, { urn });
            case "azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeech":
                return new channelDirectLineSpeech_1.ChannelDirectLineSpeech(name, undefined, { urn });
            case "azure:bot/channelEmail:ChannelEmail":
                return new channelEmail_1.ChannelEmail(name, undefined, { urn });
            case "azure:bot/channelFacebook:ChannelFacebook":
                return new channelFacebook_1.ChannelFacebook(name, undefined, { urn });
            case "azure:bot/channelLine:ChannelLine":
                return new channelLine_1.ChannelLine(name, undefined, { urn });
            case "azure:bot/channelSlack:ChannelSlack":
                return new channelSlack_1.ChannelSlack(name, undefined, { urn });
            case "azure:bot/channelSms:ChannelSms":
                return new channelSms_1.ChannelSms(name, undefined, { urn });
            case "azure:bot/channelTeams:ChannelTeams":
                return new channelTeams_1.ChannelTeams(name, undefined, { urn });
            case "azure:bot/channelWebChat:ChannelWebChat":
                return new channelWebChat_1.ChannelWebChat(name, undefined, { urn });
            case "azure:bot/channelsRegistration:ChannelsRegistration":
                return new channelsRegistration_1.ChannelsRegistration(name, undefined, { urn });
            case "azure:bot/connection:Connection":
                return new connection_1.Connection(name, undefined, { urn });
            case "azure:bot/healthbot:Healthbot":
                return new healthbot_1.Healthbot(name, undefined, { urn });
            case "azure:bot/serviceAzureBot:ServiceAzureBot":
                return new serviceAzureBot_1.ServiceAzureBot(name, undefined, { urn });
            case "azure:bot/webApp:WebApp":
                return new webApp_1.WebApp(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "bot/channelAlexa", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelDirectLine", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelDirectLineSpeech", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelEmail", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelFacebook", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelLine", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelSlack", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelSms", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelTeams", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelWebChat", _module);
pulumi.runtime.registerResourceModule("azure", "bot/channelsRegistration", _module);
pulumi.runtime.registerResourceModule("azure", "bot/connection", _module);
pulumi.runtime.registerResourceModule("azure", "bot/healthbot", _module);
pulumi.runtime.registerResourceModule("azure", "bot/serviceAzureBot", _module);
pulumi.runtime.registerResourceModule("azure", "bot/webApp", _module);
//# sourceMappingURL=index.js.map