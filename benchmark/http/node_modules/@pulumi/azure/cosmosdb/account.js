"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Account = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a CosmosDB (formally DocumentDB) Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as random from "@pulumi/random";
 *
 * const rg = new azure.core.ResourceGroup("rg", {location: "westus"});
 * const ri = new random.RandomInteger("ri", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const db = new azure.cosmosdb.Account("db", {
 *     location: rg.location,
 *     resourceGroupName: rg.name,
 *     offerType: "Standard",
 *     kind: "MongoDB",
 *     enableAutomaticFailover: true,
 *     capabilities: [
 *         {
 *             name: "EnableAggregationPipeline",
 *         },
 *         {
 *             name: "mongoEnableDocLevelTTL",
 *         },
 *         {
 *             name: "MongoDBv3.4",
 *         },
 *         {
 *             name: "EnableMongo",
 *         },
 *     ],
 *     consistencyPolicy: {
 *         consistencyLevel: "BoundedStaleness",
 *         maxIntervalInSeconds: 300,
 *         maxStalenessPrefix: 100000,
 *     },
 *     geoLocations: [
 *         {
 *             location: _var.failover_location,
 *             failoverPriority: 1,
 *         },
 *         {
 *             location: rg.location,
 *             failoverPriority: 0,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * CosmosDB Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:cosmosdb/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1
 * ```
 */
class Account extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accessKeyMetadataWritesEnabled"] = state ? state.accessKeyMetadataWritesEnabled : undefined;
            resourceInputs["analyticalStorage"] = state ? state.analyticalStorage : undefined;
            resourceInputs["analyticalStorageEnabled"] = state ? state.analyticalStorageEnabled : undefined;
            resourceInputs["backup"] = state ? state.backup : undefined;
            resourceInputs["capabilities"] = state ? state.capabilities : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["connectionStrings"] = state ? state.connectionStrings : undefined;
            resourceInputs["consistencyPolicy"] = state ? state.consistencyPolicy : undefined;
            resourceInputs["corsRule"] = state ? state.corsRule : undefined;
            resourceInputs["createMode"] = state ? state.createMode : undefined;
            resourceInputs["defaultIdentityType"] = state ? state.defaultIdentityType : undefined;
            resourceInputs["enableAutomaticFailover"] = state ? state.enableAutomaticFailover : undefined;
            resourceInputs["enableFreeTier"] = state ? state.enableFreeTier : undefined;
            resourceInputs["enableMultipleWriteLocations"] = state ? state.enableMultipleWriteLocations : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["geoLocations"] = state ? state.geoLocations : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["ipRangeFilter"] = state ? state.ipRangeFilter : undefined;
            resourceInputs["isVirtualNetworkFilterEnabled"] = state ? state.isVirtualNetworkFilterEnabled : undefined;
            resourceInputs["keyVaultKeyId"] = state ? state.keyVaultKeyId : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["localAuthenticationDisabled"] = state ? state.localAuthenticationDisabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mongoServerVersion"] = state ? state.mongoServerVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkAclBypassForAzureServices"] = state ? state.networkAclBypassForAzureServices : undefined;
            resourceInputs["networkAclBypassIds"] = state ? state.networkAclBypassIds : undefined;
            resourceInputs["offerType"] = state ? state.offerType : undefined;
            resourceInputs["primaryKey"] = state ? state.primaryKey : undefined;
            resourceInputs["primaryReadonlyKey"] = state ? state.primaryReadonlyKey : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["readEndpoints"] = state ? state.readEndpoints : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["restore"] = state ? state.restore : undefined;
            resourceInputs["secondaryKey"] = state ? state.secondaryKey : undefined;
            resourceInputs["secondaryReadonlyKey"] = state ? state.secondaryReadonlyKey : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["virtualNetworkRules"] = state ? state.virtualNetworkRules : undefined;
            resourceInputs["writeEndpoints"] = state ? state.writeEndpoints : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.consistencyPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consistencyPolicy'");
            }
            if ((!args || args.geoLocations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'geoLocations'");
            }
            if ((!args || args.offerType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'offerType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accessKeyMetadataWritesEnabled"] = args ? args.accessKeyMetadataWritesEnabled : undefined;
            resourceInputs["analyticalStorage"] = args ? args.analyticalStorage : undefined;
            resourceInputs["analyticalStorageEnabled"] = args ? args.analyticalStorageEnabled : undefined;
            resourceInputs["backup"] = args ? args.backup : undefined;
            resourceInputs["capabilities"] = args ? args.capabilities : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["consistencyPolicy"] = args ? args.consistencyPolicy : undefined;
            resourceInputs["corsRule"] = args ? args.corsRule : undefined;
            resourceInputs["createMode"] = args ? args.createMode : undefined;
            resourceInputs["defaultIdentityType"] = args ? args.defaultIdentityType : undefined;
            resourceInputs["enableAutomaticFailover"] = args ? args.enableAutomaticFailover : undefined;
            resourceInputs["enableFreeTier"] = args ? args.enableFreeTier : undefined;
            resourceInputs["enableMultipleWriteLocations"] = args ? args.enableMultipleWriteLocations : undefined;
            resourceInputs["geoLocations"] = args ? args.geoLocations : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["ipRangeFilter"] = args ? args.ipRangeFilter : undefined;
            resourceInputs["isVirtualNetworkFilterEnabled"] = args ? args.isVirtualNetworkFilterEnabled : undefined;
            resourceInputs["keyVaultKeyId"] = args ? args.keyVaultKeyId : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["localAuthenticationDisabled"] = args ? args.localAuthenticationDisabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mongoServerVersion"] = args ? args.mongoServerVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkAclBypassForAzureServices"] = args ? args.networkAclBypassForAzureServices : undefined;
            resourceInputs["networkAclBypassIds"] = args ? args.networkAclBypassIds : undefined;
            resourceInputs["offerType"] = args ? args.offerType : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["restore"] = args ? args.restore : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["virtualNetworkRules"] = args ? args.virtualNetworkRules : undefined;
            resourceInputs["connectionStrings"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["primaryKey"] = undefined /*out*/;
            resourceInputs["primaryReadonlyKey"] = undefined /*out*/;
            resourceInputs["readEndpoints"] = undefined /*out*/;
            resourceInputs["secondaryKey"] = undefined /*out*/;
            resourceInputs["secondaryReadonlyKey"] = undefined /*out*/;
            resourceInputs["writeEndpoints"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Account(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }
}
exports.Account = Account;
/** @internal */
Account.__pulumiType = 'azure:cosmosdb/account:Account';
//# sourceMappingURL=account.js.map