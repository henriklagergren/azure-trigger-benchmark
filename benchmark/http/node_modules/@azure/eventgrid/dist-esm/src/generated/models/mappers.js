/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const EventGridEvent = {
    type: {
        name: "Composite",
        className: "EventGridEvent",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            topic: {
                serializedName: "topic",
                type: {
                    name: "String"
                }
            },
            subject: {
                serializedName: "subject",
                required: true,
                type: {
                    name: "String"
                }
            },
            data: {
                serializedName: "data",
                required: true,
                type: {
                    name: "any"
                }
            },
            eventType: {
                serializedName: "eventType",
                required: true,
                type: {
                    name: "String"
                }
            },
            eventTime: {
                serializedName: "eventTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            metadataVersion: {
                serializedName: "metadataVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            dataVersion: {
                serializedName: "dataVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CloudEvent = {
    type: {
        name: "Composite",
        className: "CloudEvent",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            source: {
                serializedName: "source",
                required: true,
                type: {
                    name: "String"
                }
            },
            data: {
                serializedName: "data",
                type: {
                    name: "any"
                }
            },
            dataBase64: {
                serializedName: "data_base64",
                type: {
                    name: "ByteArray"
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            time: {
                serializedName: "time",
                type: {
                    name: "DateTime"
                }
            },
            specversion: {
                serializedName: "specversion",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataschema: {
                serializedName: "dataschema",
                type: {
                    name: "String"
                }
            },
            datacontenttype: {
                serializedName: "datacontenttype",
                type: {
                    name: "String"
                }
            },
            subject: {
                serializedName: "subject",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageBlobCreatedEventData = {
    type: {
        name: "Composite",
        className: "StorageBlobCreatedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "contentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "contentLength",
                required: true,
                type: {
                    name: "Number"
                }
            },
            contentOffset: {
                serializedName: "contentOffset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            blobType: {
                serializedName: "blobType",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageBlobDeletedEventData = {
    type: {
        name: "Composite",
        className: "StorageBlobDeletedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "contentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            blobType: {
                serializedName: "blobType",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageDirectoryCreatedEventData = {
    type: {
        name: "Composite",
        className: "StorageDirectoryCreatedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            eTag: {
                serializedName: "eTag",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageDirectoryDeletedEventData = {
    type: {
        name: "Composite",
        className: "StorageDirectoryDeletedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            recursive: {
                serializedName: "recursive",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageBlobRenamedEventData = {
    type: {
        name: "Composite",
        className: "StorageBlobRenamedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            sourceUrl: {
                serializedName: "sourceUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            destinationUrl: {
                serializedName: "destinationUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageDirectoryRenamedEventData = {
    type: {
        name: "Composite",
        className: "StorageDirectoryRenamedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            sourceUrl: {
                serializedName: "sourceUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            destinationUrl: {
                serializedName: "destinationUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageLifecyclePolicyCompletedEventData = {
    type: {
        name: "Composite",
        className: "StorageLifecyclePolicyCompletedEventData",
        modelProperties: {
            scheduleTime: {
                serializedName: "scheduleTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            deleteSummary: {
                serializedName: "deleteSummary",
                type: {
                    name: "Composite",
                    className: "StorageLifecyclePolicyActionSummaryDetail"
                }
            },
            tierToCoolSummary: {
                serializedName: "tierToCoolSummary",
                type: {
                    name: "Composite",
                    className: "StorageLifecyclePolicyActionSummaryDetail"
                }
            },
            tierToArchiveSummary: {
                serializedName: "tierToArchiveSummary",
                type: {
                    name: "Composite",
                    className: "StorageLifecyclePolicyActionSummaryDetail"
                }
            }
        }
    }
};
export const StorageLifecyclePolicyActionSummaryDetail = {
    type: {
        name: "Composite",
        className: "StorageLifecyclePolicyActionSummaryDetail",
        modelProperties: {
            totalObjectsCount: {
                serializedName: "totalObjectsCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            successCount: {
                serializedName: "successCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            errorList: {
                serializedName: "errorList",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageBlobTierChangedEventData = {
    type: {
        name: "Composite",
        className: "StorageBlobTierChangedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "contentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "contentLength",
                required: true,
                type: {
                    name: "Number"
                }
            },
            blobType: {
                serializedName: "blobType",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageAsyncOperationInitiatedEventData = {
    type: {
        name: "Composite",
        className: "StorageAsyncOperationInitiatedEventData",
        modelProperties: {
            api: {
                serializedName: "api",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "contentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentLength: {
                serializedName: "contentLength",
                required: true,
                type: {
                    name: "Number"
                }
            },
            blobType: {
                serializedName: "blobType",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            sequencer: {
                serializedName: "sequencer",
                required: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageDiagnostics: {
                serializedName: "storageDiagnostics",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const StorageBlobInventoryPolicyCompletedEventData = {
    type: {
        name: "Composite",
        className: "StorageBlobInventoryPolicyCompletedEventData",
        modelProperties: {
            scheduleDateTime: {
                serializedName: "scheduleDateTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            accountName: {
                serializedName: "accountName",
                required: true,
                type: {
                    name: "String"
                }
            },
            ruleName: {
                serializedName: "ruleName",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyRunStatus: {
                serializedName: "policyRunStatus",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyRunStatusMessage: {
                serializedName: "policyRunStatusMessage",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyRunId: {
                serializedName: "policyRunId",
                required: true,
                type: {
                    name: "String"
                }
            },
            manifestBlobUrl: {
                serializedName: "manifestBlobUrl",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EventHubCaptureFileCreatedEventData = {
    type: {
        name: "Composite",
        className: "EventHubCaptureFileCreatedEventData",
        modelProperties: {
            fileUrl: {
                serializedName: "fileUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            fileType: {
                serializedName: "fileType",
                required: true,
                type: {
                    name: "String"
                }
            },
            partitionId: {
                serializedName: "partitionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            sizeInBytes: {
                serializedName: "sizeInBytes",
                required: true,
                type: {
                    name: "Number"
                }
            },
            eventCount: {
                serializedName: "eventCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            firstSequenceNumber: {
                serializedName: "firstSequenceNumber",
                required: true,
                type: {
                    name: "Number"
                }
            },
            lastSequenceNumber: {
                serializedName: "lastSequenceNumber",
                required: true,
                type: {
                    name: "Number"
                }
            },
            firstEnqueueTime: {
                serializedName: "firstEnqueueTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            lastEnqueueTime: {
                serializedName: "lastEnqueueTime",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceWriteSuccessEventData = {
    type: {
        name: "Composite",
        className: "ResourceWriteSuccessEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceAuthorization = {
    type: {
        name: "Composite",
        className: "ResourceAuthorization",
        modelProperties: {
            scope: {
                serializedName: "scope",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            },
            evidence: {
                serializedName: "evidence",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const ResourceHttpRequest = {
    type: {
        name: "Composite",
        className: "ResourceHttpRequest",
        modelProperties: {
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientIpAddress: {
                serializedName: "clientIpAddress",
                required: true,
                type: {
                    name: "String"
                }
            },
            method: {
                serializedName: "method",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceWriteFailureEventData = {
    type: {
        name: "Composite",
        className: "ResourceWriteFailureEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceWriteCancelEventData = {
    type: {
        name: "Composite",
        className: "ResourceWriteCancelEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceDeleteSuccessEventData = {
    type: {
        name: "Composite",
        className: "ResourceDeleteSuccessEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceDeleteFailureEventData = {
    type: {
        name: "Composite",
        className: "ResourceDeleteFailureEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceDeleteCancelEventData = {
    type: {
        name: "Composite",
        className: "ResourceDeleteCancelEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceActionSuccessEventData = {
    type: {
        name: "Composite",
        className: "ResourceActionSuccessEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceActionFailureEventData = {
    type: {
        name: "Composite",
        className: "ResourceActionFailureEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const ResourceActionCancelEventData = {
    type: {
        name: "Composite",
        className: "ResourceActionCancelEventData",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceProvider: {
                serializedName: "resourceProvider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            operationName: {
                serializedName: "operationName",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            authorization: {
                serializedName: "authorization",
                type: {
                    name: "Composite",
                    className: "ResourceAuthorization"
                }
            },
            claims: {
                serializedName: "claims",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                required: true,
                type: {
                    name: "String"
                }
            },
            httpRequest: {
                serializedName: "httpRequest",
                type: {
                    name: "Composite",
                    className: "ResourceHttpRequest"
                }
            }
        }
    }
};
export const SubscriptionValidationEventData = {
    type: {
        name: "Composite",
        className: "SubscriptionValidationEventData",
        modelProperties: {
            validationCode: {
                serializedName: "validationCode",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            validationUrl: {
                serializedName: "validationUrl",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SubscriptionValidationResponse = {
    type: {
        name: "Composite",
        className: "SubscriptionValidationResponse",
        modelProperties: {
            validationResponse: {
                serializedName: "validationResponse",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SubscriptionDeletedEventData = {
    type: {
        name: "Composite",
        className: "SubscriptionDeletedEventData",
        modelProperties: {
            eventSubscriptionId: {
                serializedName: "eventSubscriptionId",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeviceLifeCycleEvent = {
    type: {
        name: "Composite",
        className: "DeviceLifeCycleEvent",
        modelProperties: {
            deviceId: {
                serializedName: "deviceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            hubName: {
                serializedName: "hubName",
                required: true,
                type: {
                    name: "String"
                }
            },
            twin: {
                serializedName: "twin",
                type: {
                    name: "Composite",
                    className: "DeviceTwinInfo"
                }
            }
        }
    }
};
export const DeviceTwinInfo = {
    type: {
        name: "Composite",
        className: "DeviceTwinInfo",
        modelProperties: {
            authenticationType: {
                serializedName: "authenticationType",
                required: true,
                type: {
                    name: "String"
                }
            },
            cloudToDeviceMessageCount: {
                serializedName: "cloudToDeviceMessageCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            connectionState: {
                serializedName: "connectionState",
                required: true,
                type: {
                    name: "String"
                }
            },
            deviceId: {
                serializedName: "deviceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                required: true,
                type: {
                    name: "String"
                }
            },
            lastActivityTime: {
                serializedName: "lastActivityTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DeviceTwinInfoProperties"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            statusUpdateTime: {
                serializedName: "statusUpdateTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            },
            x509Thumbprint: {
                serializedName: "x509Thumbprint",
                type: {
                    name: "Composite",
                    className: "DeviceTwinInfoX509Thumbprint"
                }
            }
        }
    }
};
export const DeviceTwinInfoProperties = {
    type: {
        name: "Composite",
        className: "DeviceTwinInfoProperties",
        modelProperties: {
            desired: {
                serializedName: "desired",
                type: {
                    name: "Composite",
                    className: "DeviceTwin"
                }
            },
            reported: {
                serializedName: "reported",
                type: {
                    name: "Composite",
                    className: "DeviceTwin"
                }
            }
        }
    }
};
export const DeviceTwin = {
    type: {
        name: "Composite",
        className: "DeviceTwin",
        modelProperties: {
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Composite",
                    className: "DeviceTwinMetadata"
                }
            },
            version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const DeviceTwinMetadata = {
    type: {
        name: "Composite",
        className: "DeviceTwinMetadata",
        modelProperties: {
            lastUpdated: {
                serializedName: "lastUpdated",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeviceTwinInfoX509Thumbprint = {
    type: {
        name: "Composite",
        className: "DeviceTwinInfoX509Thumbprint",
        modelProperties: {
            primaryThumbprint: {
                serializedName: "primaryThumbprint",
                type: {
                    name: "String"
                }
            },
            secondaryThumbprint: {
                serializedName: "secondaryThumbprint",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeviceConnectionStateEvent = {
    type: {
        name: "Composite",
        className: "DeviceConnectionStateEvent",
        modelProperties: {
            deviceId: {
                serializedName: "deviceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            moduleId: {
                serializedName: "moduleId",
                required: true,
                type: {
                    name: "String"
                }
            },
            hubName: {
                serializedName: "hubName",
                required: true,
                type: {
                    name: "String"
                }
            },
            deviceConnectionStateEventInfo: {
                serializedName: "deviceConnectionStateEventInfo",
                type: {
                    name: "Composite",
                    className: "DeviceConnectionStateEventInfo"
                }
            }
        }
    }
};
export const DeviceConnectionStateEventInfo = {
    type: {
        name: "Composite",
        className: "DeviceConnectionStateEventInfo",
        modelProperties: {
            sequenceNumber: {
                serializedName: "sequenceNumber",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeviceTelemetryEvent = {
    type: {
        name: "Composite",
        className: "DeviceTelemetryEvent",
        modelProperties: {
            body: {
                serializedName: "body",
                required: true,
                type: {
                    name: "any"
                }
            },
            properties: {
                serializedName: "properties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            systemProperties: {
                serializedName: "systemProperties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const ContainerRegistryEventData = {
    type: {
        name: "Composite",
        className: "ContainerRegistryEventData",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryEventTarget"
                }
            },
            request: {
                serializedName: "request",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryEventRequest"
                }
            },
            actor: {
                serializedName: "actor",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryEventActor"
                }
            },
            source: {
                serializedName: "source",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryEventSource"
                }
            },
            connectedRegistry: {
                serializedName: "connectedRegistry",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryEventConnectedRegistry"
                }
            }
        }
    }
};
export const ContainerRegistryEventTarget = {
    type: {
        name: "Composite",
        className: "ContainerRegistryEventTarget",
        modelProperties: {
            mediaType: {
                serializedName: "mediaType",
                required: true,
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "size",
                required: true,
                type: {
                    name: "Number"
                }
            },
            digest: {
                serializedName: "digest",
                required: true,
                type: {
                    name: "String"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            repository: {
                serializedName: "repository",
                required: true,
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                required: true,
                type: {
                    name: "String"
                }
            },
            tag: {
                serializedName: "tag",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerRegistryEventRequest = {
    type: {
        name: "Composite",
        className: "ContainerRegistryEventRequest",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            addr: {
                serializedName: "addr",
                required: true,
                type: {
                    name: "String"
                }
            },
            host: {
                serializedName: "host",
                required: true,
                type: {
                    name: "String"
                }
            },
            method: {
                serializedName: "method",
                required: true,
                type: {
                    name: "String"
                }
            },
            useragent: {
                serializedName: "useragent",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerRegistryEventActor = {
    type: {
        name: "Composite",
        className: "ContainerRegistryEventActor",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerRegistryEventSource = {
    type: {
        name: "Composite",
        className: "ContainerRegistryEventSource",
        modelProperties: {
            addr: {
                serializedName: "addr",
                required: true,
                type: {
                    name: "String"
                }
            },
            instanceID: {
                serializedName: "instanceID",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerRegistryEventConnectedRegistry = {
    type: {
        name: "Composite",
        className: "ContainerRegistryEventConnectedRegistry",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerRegistryArtifactEventData = {
    type: {
        name: "Composite",
        className: "ContainerRegistryArtifactEventData",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryArtifactEventTarget"
                }
            },
            connectedRegistry: {
                serializedName: "connectedRegistry",
                type: {
                    name: "Composite",
                    className: "ContainerRegistryEventConnectedRegistry"
                }
            }
        }
    }
};
export const ContainerRegistryArtifactEventTarget = {
    type: {
        name: "Composite",
        className: "ContainerRegistryArtifactEventTarget",
        modelProperties: {
            mediaType: {
                serializedName: "mediaType",
                required: true,
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "size",
                required: true,
                type: {
                    name: "Number"
                }
            },
            digest: {
                serializedName: "digest",
                required: true,
                type: {
                    name: "String"
                }
            },
            repository: {
                serializedName: "repository",
                required: true,
                type: {
                    name: "String"
                }
            },
            tag: {
                serializedName: "tag",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceBusActiveMessagesAvailableWithNoListenersEventData = {
    type: {
        name: "Composite",
        className: "ServiceBusActiveMessagesAvailableWithNoListenersEventData",
        modelProperties: {
            namespaceName: {
                serializedName: "namespaceName",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestUri: {
                serializedName: "requestUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            entityType: {
                serializedName: "entityType",
                required: true,
                type: {
                    name: "String"
                }
            },
            queueName: {
                serializedName: "queueName",
                required: true,
                type: {
                    name: "String"
                }
            },
            topicName: {
                serializedName: "topicName",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionName: {
                serializedName: "subscriptionName",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceBusDeadletterMessagesAvailableWithNoListenersEventData = {
    type: {
        name: "Composite",
        className: "ServiceBusDeadletterMessagesAvailableWithNoListenersEventData",
        modelProperties: {
            namespaceName: {
                serializedName: "namespaceName",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestUri: {
                serializedName: "requestUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            entityType: {
                serializedName: "entityType",
                required: true,
                type: {
                    name: "String"
                }
            },
            queueName: {
                serializedName: "queueName",
                required: true,
                type: {
                    name: "String"
                }
            },
            topicName: {
                serializedName: "topicName",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionName: {
                serializedName: "subscriptionName",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData = {
    type: {
        name: "Composite",
        className: "ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData",
        modelProperties: {
            namespaceName: {
                serializedName: "namespaceName",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestUri: {
                serializedName: "requestUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            entityType: {
                serializedName: "entityType",
                required: true,
                type: {
                    name: "String"
                }
            },
            queueName: {
                serializedName: "queueName",
                required: true,
                type: {
                    name: "String"
                }
            },
            topicName: {
                serializedName: "topicName",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionName: {
                serializedName: "subscriptionName",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData = {
    type: {
        name: "Composite",
        className: "ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData",
        modelProperties: {
            namespaceName: {
                serializedName: "namespaceName",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestUri: {
                serializedName: "requestUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            entityType: {
                serializedName: "entityType",
                required: true,
                type: {
                    name: "String"
                }
            },
            queueName: {
                serializedName: "queueName",
                required: true,
                type: {
                    name: "String"
                }
            },
            topicName: {
                serializedName: "topicName",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionName: {
                serializedName: "subscriptionName",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaJobStateChangeEventData = {
    type: {
        name: "Composite",
        className: "MediaJobStateChangeEventData",
        modelProperties: {
            previousState: {
                serializedName: "previousState",
                required: true,
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Canceled",
                        "Canceling",
                        "Error",
                        "Finished",
                        "Processing",
                        "Queued",
                        "Scheduled"
                    ]
                }
            },
            state: {
                serializedName: "state",
                required: true,
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Canceled",
                        "Canceling",
                        "Error",
                        "Finished",
                        "Processing",
                        "Queued",
                        "Scheduled"
                    ]
                }
            },
            correlationData: {
                serializedName: "correlationData",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const MediaJobError = {
    type: {
        name: "Composite",
        className: "MediaJobError",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "ServiceError",
                        "ServiceTransientError",
                        "DownloadNotAccessible",
                        "DownloadTransientError",
                        "UploadNotAccessible",
                        "UploadTransientError",
                        "ConfigurationUnsupported",
                        "ContentMalformed",
                        "ContentUnsupported",
                        "IdentityUnsupported"
                    ]
                }
            },
            message: {
                serializedName: "message",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            category: {
                serializedName: "category",
                required: true,
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Service",
                        "Download",
                        "Upload",
                        "Configuration",
                        "Content",
                        "Account"
                    ]
                }
            },
            retry: {
                serializedName: "retry",
                required: true,
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["DoNotRetry", "MayRetry"]
                }
            },
            details: {
                serializedName: "details",
                required: true,
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MediaJobErrorDetail"
                        }
                    }
                }
            }
        }
    }
};
export const MediaJobErrorDetail = {
    type: {
        name: "Composite",
        className: "MediaJobErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaJobOutput = {
    type: {
        name: "Composite",
        className: "MediaJobOutput",
        uberParent: "MediaJobOutput",
        polymorphicDiscriminator: {
            serializedName: "@odata\\.type",
            clientName: "@odata\\.type"
        },
        modelProperties: {
            odataType: {
                serializedName: "@odata\\.type",
                required: true,
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "MediaJobError"
                }
            },
            label: {
                serializedName: "label",
                type: {
                    name: "String"
                }
            },
            progress: {
                serializedName: "progress",
                required: true,
                type: {
                    name: "Number"
                }
            },
            state: {
                serializedName: "state",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Canceled",
                        "Canceling",
                        "Error",
                        "Finished",
                        "Processing",
                        "Queued",
                        "Scheduled"
                    ]
                }
            }
        }
    }
};
export const MediaJobOutputProgressEventData = {
    serializedName: "#Microsoft.Media.JobOutputProgress",
    type: {
        name: "Composite",
        className: "MediaJobOutputProgressEventData",
        modelProperties: {
            label: {
                serializedName: "label",
                required: true,
                type: {
                    name: "String"
                }
            },
            progress: {
                serializedName: "progress",
                required: true,
                type: {
                    name: "Number"
                }
            },
            jobCorrelationData: {
                serializedName: "jobCorrelationData",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const MediaJobOutputStateChangeEventData = {
    type: {
        name: "Composite",
        className: "MediaJobOutputStateChangeEventData",
        modelProperties: {
            previousState: {
                serializedName: "previousState",
                required: true,
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Canceled",
                        "Canceling",
                        "Error",
                        "Finished",
                        "Processing",
                        "Queued",
                        "Scheduled"
                    ]
                }
            },
            output: {
                serializedName: "output",
                type: {
                    name: "Composite",
                    className: "MediaJobOutput"
                }
            },
            jobCorrelationData: {
                serializedName: "jobCorrelationData",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const MediaLiveEventEncoderConnectedEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventEncoderConnectedEventData",
        modelProperties: {
            ingestUrl: {
                serializedName: "ingestUrl",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            streamId: {
                serializedName: "streamId",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderIp: {
                serializedName: "encoderIp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderPort: {
                serializedName: "encoderPort",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventConnectionRejectedEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventConnectionRejectedEventData",
        modelProperties: {
            ingestUrl: {
                serializedName: "ingestUrl",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            streamId: {
                serializedName: "streamId",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderIp: {
                serializedName: "encoderIp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderPort: {
                serializedName: "encoderPort",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resultCode: {
                serializedName: "resultCode",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventEncoderDisconnectedEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventEncoderDisconnectedEventData",
        modelProperties: {
            ingestUrl: {
                serializedName: "ingestUrl",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            streamId: {
                serializedName: "streamId",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderIp: {
                serializedName: "encoderIp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderPort: {
                serializedName: "encoderPort",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resultCode: {
                serializedName: "resultCode",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventIncomingStreamReceivedEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventIncomingStreamReceivedEventData",
        modelProperties: {
            ingestUrl: {
                serializedName: "ingestUrl",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            trackType: {
                serializedName: "trackType",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            trackName: {
                serializedName: "trackName",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            bitrate: {
                serializedName: "bitrate",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            encoderIp: {
                serializedName: "encoderIp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            encoderPort: {
                serializedName: "encoderPort",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            duration: {
                serializedName: "duration",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timescale: {
                serializedName: "timescale",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventIncomingStreamsOutOfSyncEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventIncomingStreamsOutOfSyncEventData",
        modelProperties: {
            minLastTimestamp: {
                serializedName: "minLastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            typeOfStreamWithMinLastTimestamp: {
                serializedName: "typeOfStreamWithMinLastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            maxLastTimestamp: {
                serializedName: "maxLastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            typeOfStreamWithMaxLastTimestamp: {
                serializedName: "typeOfStreamWithMaxLastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timescaleOfMinLastTimestamp: {
                serializedName: "timescaleOfMinLastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timescaleOfMaxLastTimestamp: {
                serializedName: "timescaleOfMaxLastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventIncomingVideoStreamsOutOfSyncEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData",
        modelProperties: {
            firstTimestamp: {
                serializedName: "firstTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            firstDuration: {
                serializedName: "firstDuration",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            secondTimestamp: {
                serializedName: "secondTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            secondDuration: {
                serializedName: "secondDuration",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timescale: {
                serializedName: "timescale",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventIncomingDataChunkDroppedEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventIncomingDataChunkDroppedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            trackType: {
                serializedName: "trackType",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            bitrate: {
                serializedName: "bitrate",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            timescale: {
                serializedName: "timescale",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resultCode: {
                serializedName: "resultCode",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            trackName: {
                serializedName: "trackName",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventIngestHeartbeatEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventIngestHeartbeatEventData",
        modelProperties: {
            trackType: {
                serializedName: "trackType",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            trackName: {
                serializedName: "trackName",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            transcriptionLanguage: {
                serializedName: "transcriptionLanguage",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            transcriptionState: {
                serializedName: "transcriptionState",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            bitrate: {
                serializedName: "bitrate",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            incomingBitrate: {
                serializedName: "incomingBitrate",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            ingestDriftValue: {
                serializedName: "ingestDriftValue",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            lastFragmentArrivalTime: {
                serializedName: "lastFragmentArrivalTime",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            lastTimestamp: {
                serializedName: "lastTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timescale: {
                serializedName: "timescale",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            overlapCount: {
                serializedName: "overlapCount",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            discontinuityCount: {
                serializedName: "discontinuityCount",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            nonincreasingCount: {
                serializedName: "nonincreasingCount",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unexpectedBitrate: {
                serializedName: "unexpectedBitrate",
                required: true,
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            state: {
                serializedName: "state",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            healthy: {
                serializedName: "healthy",
                required: true,
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const MediaLiveEventTrackDiscontinuityDetectedEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventTrackDiscontinuityDetectedEventData",
        modelProperties: {
            trackType: {
                serializedName: "trackType",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            trackName: {
                serializedName: "trackName",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            bitrate: {
                serializedName: "bitrate",
                required: true,
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            previousTimestamp: {
                serializedName: "previousTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            newTimestamp: {
                serializedName: "newTimestamp",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timescale: {
                serializedName: "timescale",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            discontinuityGap: {
                serializedName: "discontinuityGap",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MediaLiveEventChannelArchiveHeartbeatEventData = {
    type: {
        name: "Composite",
        className: "MediaLiveEventChannelArchiveHeartbeatEventData",
        modelProperties: {
            channelLatencyMs: {
                serializedName: "channelLatencyMs",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            latencyResultCode: {
                serializedName: "latencyResultCode",
                required: true,
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MapsGeofenceEvent = {
    type: {
        name: "Composite",
        className: "MapsGeofenceEvent",
        modelProperties: {
            expiredGeofenceGeometryId: {
                serializedName: "expiredGeofenceGeometryId",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            geometries: {
                serializedName: "geometries",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MapsGeofenceGeometry"
                        }
                    }
                }
            },
            invalidPeriodGeofenceGeometryId: {
                serializedName: "invalidPeriodGeofenceGeometryId",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            isEventPublished: {
                serializedName: "isEventPublished",
                required: true,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const MapsGeofenceGeometry = {
    type: {
        name: "Composite",
        className: "MapsGeofenceGeometry",
        modelProperties: {
            deviceId: {
                serializedName: "deviceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            distance: {
                serializedName: "distance",
                required: true,
                type: {
                    name: "Number"
                }
            },
            geometryId: {
                serializedName: "geometryId",
                required: true,
                type: {
                    name: "String"
                }
            },
            nearestLat: {
                serializedName: "nearestLat",
                required: true,
                type: {
                    name: "Number"
                }
            },
            nearestLon: {
                serializedName: "nearestLon",
                required: true,
                type: {
                    name: "Number"
                }
            },
            udId: {
                serializedName: "udId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AppConfigurationKeyValueModifiedEventData = {
    type: {
        name: "Composite",
        className: "AppConfigurationKeyValueModifiedEventData",
        modelProperties: {
            key: {
                serializedName: "key",
                required: true,
                type: {
                    name: "String"
                }
            },
            label: {
                serializedName: "label",
                required: true,
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                required: true,
                type: {
                    name: "String"
                }
            },
            syncToken: {
                serializedName: "syncToken",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AppConfigurationKeyValueDeletedEventData = {
    type: {
        name: "Composite",
        className: "AppConfigurationKeyValueDeletedEventData",
        modelProperties: {
            key: {
                serializedName: "key",
                required: true,
                type: {
                    name: "String"
                }
            },
            label: {
                serializedName: "label",
                required: true,
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                required: true,
                type: {
                    name: "String"
                }
            },
            syncToken: {
                serializedName: "syncToken",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SignalRServiceClientConnectionConnectedEventData = {
    type: {
        name: "Composite",
        className: "SignalRServiceClientConnectionConnectedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            hubName: {
                serializedName: "hubName",
                required: true,
                type: {
                    name: "String"
                }
            },
            connectionId: {
                serializedName: "connectionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            userId: {
                serializedName: "userId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SignalRServiceClientConnectionDisconnectedEventData = {
    type: {
        name: "Composite",
        className: "SignalRServiceClientConnectionDisconnectedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            hubName: {
                serializedName: "hubName",
                required: true,
                type: {
                    name: "String"
                }
            },
            connectionId: {
                serializedName: "connectionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            userId: {
                serializedName: "userId",
                required: true,
                type: {
                    name: "String"
                }
            },
            errorMessage: {
                serializedName: "errorMessage",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const KeyVaultCertificateNewVersionCreatedEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultCertificateNewVersionCreatedEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultCertificateNearExpiryEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultCertificateNearExpiryEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultCertificateExpiredEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultCertificateExpiredEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultKeyNewVersionCreatedEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultKeyNewVersionCreatedEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultKeyNearExpiryEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultKeyNearExpiryEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultKeyExpiredEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultKeyExpiredEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultSecretNewVersionCreatedEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultSecretNewVersionCreatedEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultSecretNearExpiryEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultSecretNearExpiryEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultSecretExpiredEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultSecretExpiredEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const KeyVaultAccessPolicyChangedEventData = {
    type: {
        name: "Composite",
        className: "KeyVaultAccessPolicyChangedEventData",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String"
                }
            },
            vaultName: {
                serializedName: "VaultName",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectType: {
                serializedName: "ObjectType",
                required: true,
                type: {
                    name: "String"
                }
            },
            objectName: {
                serializedName: "ObjectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String"
                }
            },
            nbf: {
                serializedName: "NBF",
                required: true,
                type: {
                    name: "Number"
                }
            },
            exp: {
                serializedName: "EXP",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const MachineLearningServicesModelRegisteredEventData = {
    type: {
        name: "Composite",
        className: "MachineLearningServicesModelRegisteredEventData",
        modelProperties: {
            modelName: {
                serializedName: "modelName",
                required: true,
                type: {
                    name: "String"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            },
            modelTags: {
                serializedName: "modelTags",
                required: true,
                type: {
                    name: "any"
                }
            },
            modelProperties: {
                serializedName: "modelProperties",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const MachineLearningServicesModelDeployedEventData = {
    type: {
        name: "Composite",
        className: "MachineLearningServicesModelDeployedEventData",
        modelProperties: {
            serviceName: {
                serializedName: "serviceName",
                required: true,
                type: {
                    name: "String"
                }
            },
            serviceComputeType: {
                serializedName: "serviceComputeType",
                required: true,
                type: {
                    name: "String"
                }
            },
            modelIds: {
                serializedName: "modelIds",
                required: true,
                type: {
                    name: "String"
                }
            },
            serviceTags: {
                serializedName: "serviceTags",
                required: true,
                type: {
                    name: "any"
                }
            },
            serviceProperties: {
                serializedName: "serviceProperties",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const MachineLearningServicesRunCompletedEventData = {
    type: {
        name: "Composite",
        className: "MachineLearningServicesRunCompletedEventData",
        modelProperties: {
            experimentId: {
                serializedName: "experimentId",
                required: true,
                type: {
                    name: "String"
                }
            },
            experimentName: {
                serializedName: "experimentName",
                required: true,
                type: {
                    name: "String"
                }
            },
            runId: {
                serializedName: "runId",
                required: true,
                type: {
                    name: "String"
                }
            },
            runType: {
                serializedName: "runType",
                required: true,
                type: {
                    name: "String"
                }
            },
            runTags: {
                serializedName: "runTags",
                required: true,
                type: {
                    name: "any"
                }
            },
            runProperties: {
                serializedName: "runProperties",
                required: true,
                type: {
                    name: "any"
                }
            }
        }
    }
};
export const MachineLearningServicesDatasetDriftDetectedEventData = {
    type: {
        name: "Composite",
        className: "MachineLearningServicesDatasetDriftDetectedEventData",
        modelProperties: {
            dataDriftId: {
                serializedName: "dataDriftId",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataDriftName: {
                serializedName: "dataDriftName",
                required: true,
                type: {
                    name: "String"
                }
            },
            runId: {
                serializedName: "runId",
                required: true,
                type: {
                    name: "String"
                }
            },
            baseDatasetId: {
                serializedName: "baseDatasetId",
                required: true,
                type: {
                    name: "String"
                }
            },
            targetDatasetId: {
                serializedName: "targetDatasetId",
                required: true,
                type: {
                    name: "String"
                }
            },
            driftCoefficient: {
                serializedName: "driftCoefficient",
                required: true,
                type: {
                    name: "Number"
                }
            },
            startTime: {
                serializedName: "startTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            endTime: {
                serializedName: "endTime",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MachineLearningServicesRunStatusChangedEventData = {
    type: {
        name: "Composite",
        className: "MachineLearningServicesRunStatusChangedEventData",
        modelProperties: {
            experimentId: {
                serializedName: "experimentId",
                required: true,
                type: {
                    name: "String"
                }
            },
            experimentName: {
                serializedName: "experimentName",
                required: true,
                type: {
                    name: "String"
                }
            },
            runId: {
                serializedName: "runId",
                required: true,
                type: {
                    name: "String"
                }
            },
            runType: {
                serializedName: "runType",
                required: true,
                type: {
                    name: "String"
                }
            },
            runTags: {
                serializedName: "runTags",
                required: true,
                type: {
                    name: "any"
                }
            },
            runProperties: {
                serializedName: "runProperties",
                required: true,
                type: {
                    name: "any"
                }
            },
            runStatus: {
                serializedName: "runStatus",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RedisPatchingCompletedEventData = {
    type: {
        name: "Composite",
        className: "RedisPatchingCompletedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RedisScalingCompletedEventData = {
    type: {
        name: "Composite",
        className: "RedisScalingCompletedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RedisExportRDBCompletedEventData = {
    type: {
        name: "Composite",
        className: "RedisExportRDBCompletedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RedisImportRDBCompletedEventData = {
    type: {
        name: "Composite",
        className: "RedisImportRDBCompletedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebAppUpdatedEventData = {
    type: {
        name: "Composite",
        className: "WebAppUpdatedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AppEventTypeDetail = {
    type: {
        name: "Composite",
        className: "AppEventTypeDetail",
        modelProperties: {
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebBackupOperationStartedEventData = {
    type: {
        name: "Composite",
        className: "WebBackupOperationStartedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebBackupOperationCompletedEventData = {
    type: {
        name: "Composite",
        className: "WebBackupOperationCompletedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebBackupOperationFailedEventData = {
    type: {
        name: "Composite",
        className: "WebBackupOperationFailedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebRestoreOperationStartedEventData = {
    type: {
        name: "Composite",
        className: "WebRestoreOperationStartedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebRestoreOperationCompletedEventData = {
    type: {
        name: "Composite",
        className: "WebRestoreOperationCompletedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebRestoreOperationFailedEventData = {
    type: {
        name: "Composite",
        className: "WebRestoreOperationFailedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebSlotSwapStartedEventData = {
    type: {
        name: "Composite",
        className: "WebSlotSwapStartedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebSlotSwapCompletedEventData = {
    type: {
        name: "Composite",
        className: "WebSlotSwapCompletedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebSlotSwapFailedEventData = {
    type: {
        name: "Composite",
        className: "WebSlotSwapFailedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebSlotSwapWithPreviewStartedEventData = {
    type: {
        name: "Composite",
        className: "WebSlotSwapWithPreviewStartedEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebSlotSwapWithPreviewCancelledEventData = {
    type: {
        name: "Composite",
        className: "WebSlotSwapWithPreviewCancelledEventData",
        modelProperties: {
            appEventTypeDetail: {
                serializedName: "appEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppEventTypeDetail"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebAppServicePlanUpdatedEventData = {
    type: {
        name: "Composite",
        className: "WebAppServicePlanUpdatedEventData",
        modelProperties: {
            appServicePlanEventTypeDetail: {
                serializedName: "appServicePlanEventTypeDetail",
                type: {
                    name: "Composite",
                    className: "AppServicePlanEventTypeDetail"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "WebAppServicePlanUpdatedEventDataSku"
                }
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientRequestId: {
                serializedName: "clientRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            correlationRequestId: {
                serializedName: "correlationRequestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                required: true,
                type: {
                    name: "String"
                }
            },
            address: {
                serializedName: "address",
                required: true,
                type: {
                    name: "String"
                }
            },
            verb: {
                serializedName: "verb",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AppServicePlanEventTypeDetail = {
    type: {
        name: "Composite",
        className: "AppServicePlanEventTypeDetail",
        modelProperties: {
            stampKind: {
                serializedName: "stampKind",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WebAppServicePlanUpdatedEventDataSku = {
    type: {
        name: "Composite",
        className: "WebAppServicePlanUpdatedEventDataSku",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "Tier",
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "Size",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "Family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "Capacity",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AcsUserDisconnectedEventData = {
    type: {
        name: "Composite",
        className: "AcsUserDisconnectedEventData",
        modelProperties: {
            userCommunicationIdentifier: {
                serializedName: "userCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }
        }
    }
};
export const CommunicationIdentifierModel = {
    type: {
        name: "Composite",
        className: "CommunicationIdentifierModel",
        modelProperties: {
            rawId: {
                serializedName: "rawId",
                required: true,
                type: {
                    name: "String"
                }
            },
            communicationUser: {
                serializedName: "communicationUser",
                type: {
                    name: "Composite",
                    className: "CommunicationUserIdentifierModel"
                }
            },
            phoneNumber: {
                serializedName: "phoneNumber",
                type: {
                    name: "Composite",
                    className: "PhoneNumberIdentifierModel"
                }
            },
            microsoftTeamsUser: {
                serializedName: "microsoftTeamsUser",
                type: {
                    name: "Composite",
                    className: "MicrosoftTeamsUserIdentifierModel"
                }
            }
        }
    }
};
export const CommunicationUserIdentifierModel = {
    type: {
        name: "Composite",
        className: "CommunicationUserIdentifierModel",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PhoneNumberIdentifierModel = {
    type: {
        name: "Composite",
        className: "PhoneNumberIdentifierModel",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MicrosoftTeamsUserIdentifierModel = {
    type: {
        name: "Composite",
        className: "MicrosoftTeamsUserIdentifierModel",
        modelProperties: {
            userId: {
                serializedName: "userId",
                required: true,
                type: {
                    name: "String"
                }
            },
            isAnonymous: {
                serializedName: "isAnonymous",
                type: {
                    name: "Boolean"
                }
            },
            cloud: {
                serializedName: "cloud",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AcsChatEventBase = {
    type: {
        name: "Composite",
        className: "AcsChatEventBase",
        modelProperties: {
            recipientCommunicationIdentifier: {
                serializedName: "recipientCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            },
            transactionId: {
                serializedName: "transactionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            threadId: {
                serializedName: "threadId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AcsChatEventInThreadBase = {
    type: {
        name: "Composite",
        className: "AcsChatEventInThreadBase",
        modelProperties: {
            transactionId: {
                serializedName: "transactionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            threadId: {
                serializedName: "threadId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AcsChatThreadParticipant = {
    type: {
        name: "Composite",
        className: "AcsChatThreadParticipant",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                required: true,
                type: {
                    name: "String"
                }
            },
            participantCommunicationIdentifier: {
                serializedName: "participantCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }
        }
    }
};
export const AcsSmsDeliveryAttempt = {
    type: {
        name: "Composite",
        className: "AcsSmsDeliveryAttempt",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            segmentsSucceeded: {
                serializedName: "segmentsSucceeded",
                required: true,
                type: {
                    name: "Number"
                }
            },
            segmentsFailed: {
                serializedName: "segmentsFailed",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const AcsSmsEventBase = {
    type: {
        name: "Composite",
        className: "AcsSmsEventBase",
        modelProperties: {
            messageId: {
                serializedName: "messageId",
                required: true,
                type: {
                    name: "String"
                }
            },
            from: {
                serializedName: "from",
                required: true,
                type: {
                    name: "String"
                }
            },
            to: {
                serializedName: "to",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AcsRecordingFileStatusUpdatedEventData = {
    type: {
        name: "Composite",
        className: "AcsRecordingFileStatusUpdatedEventData",
        modelProperties: {
            recordingStorageInfo: {
                serializedName: "recordingStorageInfo",
                type: {
                    name: "Composite",
                    className: "AcsRecordingStorageInfo"
                }
            },
            recordingStartTime: {
                serializedName: "recordingStartTime",
                required: true,
                type: {
                    name: "String"
                }
            },
            recordingDurationMs: {
                serializedName: "recordingDurationMs",
                required: true,
                type: {
                    name: "Number"
                }
            },
            recordingContentType: {
                serializedName: "recordingContentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            recordingChannelType: {
                serializedName: "recordingChannelType",
                required: true,
                type: {
                    name: "String"
                }
            },
            recordingFormatType: {
                serializedName: "recordingFormatType",
                required: true,
                type: {
                    name: "String"
                }
            },
            sessionEndReason: {
                serializedName: "sessionEndReason",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AcsRecordingStorageInfo = {
    type: {
        name: "Composite",
        className: "AcsRecordingStorageInfo",
        modelProperties: {
            recordingChunks: {
                serializedName: "recordingChunks",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AcsRecordingChunkInfo"
                        }
                    }
                }
            }
        }
    }
};
export const AcsRecordingChunkInfo = {
    type: {
        name: "Composite",
        className: "AcsRecordingChunkInfo",
        modelProperties: {
            documentId: {
                serializedName: "documentId",
                required: true,
                type: {
                    name: "String"
                }
            },
            index: {
                serializedName: "index",
                required: true,
                type: {
                    name: "Number"
                }
            },
            endReason: {
                serializedName: "endReason",
                required: true,
                type: {
                    name: "String"
                }
            },
            metadataLocation: {
                serializedName: "metadataLocation",
                required: true,
                type: {
                    name: "String"
                }
            },
            contentLocation: {
                serializedName: "contentLocation",
                required: true,
                type: {
                    name: "String"
                }
            },
            deleteLocation: {
                serializedName: "deleteLocation",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PolicyInsightsPolicyStateCreatedEventData = {
    type: {
        name: "Composite",
        className: "PolicyInsightsPolicyStateCreatedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyAssignmentId: {
                serializedName: "policyAssignmentId",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyDefinitionId: {
                serializedName: "policyDefinitionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyDefinitionReferenceId: {
                serializedName: "policyDefinitionReferenceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            complianceState: {
                serializedName: "complianceState",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            complianceReasonCode: {
                serializedName: "complianceReasonCode",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PolicyInsightsPolicyStateChangedEventData = {
    type: {
        name: "Composite",
        className: "PolicyInsightsPolicyStateChangedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyAssignmentId: {
                serializedName: "policyAssignmentId",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyDefinitionId: {
                serializedName: "policyDefinitionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyDefinitionReferenceId: {
                serializedName: "policyDefinitionReferenceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            complianceState: {
                serializedName: "complianceState",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            complianceReasonCode: {
                serializedName: "complianceReasonCode",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PolicyInsightsPolicyStateDeletedEventData = {
    type: {
        name: "Composite",
        className: "PolicyInsightsPolicyStateDeletedEventData",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyAssignmentId: {
                serializedName: "policyAssignmentId",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyDefinitionId: {
                serializedName: "policyDefinitionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            policyDefinitionReferenceId: {
                serializedName: "policyDefinitionReferenceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            complianceState: {
                serializedName: "complianceState",
                required: true,
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                required: true,
                type: {
                    name: "String"
                }
            },
            complianceReasonCode: {
                serializedName: "complianceReasonCode",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContainerServiceNewKubernetesVersionAvailableEventData = {
    type: {
        name: "Composite",
        className: "ContainerServiceNewKubernetesVersionAvailableEventData",
        modelProperties: {
            latestSupportedKubernetesVersion: {
                serializedName: "latestSupportedKubernetesVersion",
                required: true,
                type: {
                    name: "String"
                }
            },
            latestStableKubernetesVersion: {
                serializedName: "latestStableKubernetesVersion",
                required: true,
                type: {
                    name: "String"
                }
            },
            lowestMinorKubernetesVersion: {
                serializedName: "lowestMinorKubernetesVersion",
                required: true,
                type: {
                    name: "String"
                }
            },
            latestPreviewKubernetesVersion: {
                serializedName: "latestPreviewKubernetesVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementUserCreatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementUserCreatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementUserUpdatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementUserUpdatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementUserDeletedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementUserDeletedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementSubscriptionCreatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementSubscriptionCreatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementSubscriptionUpdatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementSubscriptionUpdatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementSubscriptionDeletedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementSubscriptionDeletedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementProductCreatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementProductCreatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementProductUpdatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementProductUpdatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementProductDeletedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementProductDeletedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementApiCreatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementApiCreatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementApiUpdatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementApiUpdatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementApiDeletedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementApiDeletedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementApiReleaseCreatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementApiReleaseCreatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementApiReleaseUpdatedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementApiReleaseUpdatedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiManagementApiReleaseDeletedEventData = {
    type: {
        name: "Composite",
        className: "ApiManagementApiReleaseDeletedEventData",
        modelProperties: {
            resourceUri: {
                serializedName: "resourceUri",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const HealthcareFhirResourceCreatedEventData = {
    type: {
        name: "Composite",
        className: "HealthcareFhirResourceCreatedEventData",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceFhirAccount: {
                serializedName: "resourceFhirAccount",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceFhirId: {
                serializedName: "resourceFhirId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceVersionId: {
                serializedName: "resourceVersionId",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const HealthcareFhirResourceUpdatedEventData = {
    type: {
        name: "Composite",
        className: "HealthcareFhirResourceUpdatedEventData",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceFhirAccount: {
                serializedName: "resourceFhirAccount",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceFhirId: {
                serializedName: "resourceFhirId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceVersionId: {
                serializedName: "resourceVersionId",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const HealthcareFhirResourceDeletedEventData = {
    type: {
        name: "Composite",
        className: "HealthcareFhirResourceDeletedEventData",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceFhirAccount: {
                serializedName: "resourceFhirAccount",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceFhirId: {
                serializedName: "resourceFhirId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceVersionId: {
                serializedName: "resourceVersionId",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const IotHubDeviceCreatedEventData = {
    type: {
        name: "Composite",
        className: "IotHubDeviceCreatedEventData",
        modelProperties: Object.assign({}, DeviceLifeCycleEvent.type.modelProperties)
    }
};
export const IotHubDeviceDeletedEventData = {
    type: {
        name: "Composite",
        className: "IotHubDeviceDeletedEventData",
        modelProperties: Object.assign({}, DeviceLifeCycleEvent.type.modelProperties)
    }
};
export const IotHubDeviceConnectedEventData = {
    type: {
        name: "Composite",
        className: "IotHubDeviceConnectedEventData",
        modelProperties: Object.assign({}, DeviceConnectionStateEvent.type.modelProperties)
    }
};
export const IotHubDeviceDisconnectedEventData = {
    type: {
        name: "Composite",
        className: "IotHubDeviceDisconnectedEventData",
        modelProperties: Object.assign({}, DeviceConnectionStateEvent.type.modelProperties)
    }
};
export const IotHubDeviceTelemetryEventData = {
    type: {
        name: "Composite",
        className: "IotHubDeviceTelemetryEventData",
        modelProperties: Object.assign({}, DeviceTelemetryEvent.type.modelProperties)
    }
};
export const ContainerRegistryImagePushedEventData = {
    type: {
        name: "Composite",
        className: "ContainerRegistryImagePushedEventData",
        modelProperties: Object.assign({}, ContainerRegistryEventData.type.modelProperties)
    }
};
export const ContainerRegistryImageDeletedEventData = {
    type: {
        name: "Composite",
        className: "ContainerRegistryImageDeletedEventData",
        modelProperties: Object.assign({}, ContainerRegistryEventData.type.modelProperties)
    }
};
export const ContainerRegistryChartPushedEventData = {
    type: {
        name: "Composite",
        className: "ContainerRegistryChartPushedEventData",
        modelProperties: Object.assign({}, ContainerRegistryArtifactEventData.type.modelProperties)
    }
};
export const ContainerRegistryChartDeletedEventData = {
    type: {
        name: "Composite",
        className: "ContainerRegistryChartDeletedEventData",
        modelProperties: Object.assign({}, ContainerRegistryArtifactEventData.type.modelProperties)
    }
};
export const MediaJobScheduledEventData = {
    serializedName: "#Microsoft.Media.JobScheduled",
    type: {
        name: "Composite",
        className: "MediaJobScheduledEventData",
        modelProperties: Object.assign({}, MediaJobStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobProcessingEventData = {
    serializedName: "#Microsoft.Media.JobProcessing",
    type: {
        name: "Composite",
        className: "MediaJobProcessingEventData",
        modelProperties: Object.assign({}, MediaJobStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobCancelingEventData = {
    serializedName: "#Microsoft.Media.JobCanceling",
    type: {
        name: "Composite",
        className: "MediaJobCancelingEventData",
        modelProperties: Object.assign({}, MediaJobStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobFinishedEventData = {
    serializedName: "#Microsoft.Media.JobFinished",
    type: {
        name: "Composite",
        className: "MediaJobFinishedEventData",
        modelProperties: Object.assign(Object.assign({}, MediaJobStateChangeEventData.type.modelProperties), { outputs: {
                serializedName: "outputs",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MediaJobOutput"
                        }
                    }
                }
            } })
    }
};
export const MediaJobCanceledEventData = {
    serializedName: "#Microsoft.Media.JobCanceled",
    type: {
        name: "Composite",
        className: "MediaJobCanceledEventData",
        modelProperties: Object.assign(Object.assign({}, MediaJobStateChangeEventData.type.modelProperties), { outputs: {
                serializedName: "outputs",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MediaJobOutput"
                        }
                    }
                }
            } })
    }
};
export const MediaJobErroredEventData = {
    serializedName: "#Microsoft.Media.JobErrored",
    type: {
        name: "Composite",
        className: "MediaJobErroredEventData",
        modelProperties: Object.assign(Object.assign({}, MediaJobStateChangeEventData.type.modelProperties), { outputs: {
                serializedName: "outputs",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MediaJobOutput"
                        }
                    }
                }
            } })
    }
};
export const MediaJobOutputAsset = {
    serializedName: "#Microsoft.Media.JobOutputAsset",
    type: {
        name: "Composite",
        className: "MediaJobOutputAsset",
        uberParent: "MediaJobOutput",
        polymorphicDiscriminator: MediaJobOutput.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, MediaJobOutput.type.modelProperties), { assetName: {
                serializedName: "assetName",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const MediaJobOutputCanceledEventData = {
    serializedName: "#Microsoft.Media.JobOutputCanceled",
    type: {
        name: "Composite",
        className: "MediaJobOutputCanceledEventData",
        modelProperties: Object.assign({}, MediaJobOutputStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobOutputCancelingEventData = {
    serializedName: "#Microsoft.Media.JobOutputCanceling",
    type: {
        name: "Composite",
        className: "MediaJobOutputCancelingEventData",
        modelProperties: Object.assign({}, MediaJobOutputStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobOutputErroredEventData = {
    serializedName: "#Microsoft.Media.JobOutputErrored",
    type: {
        name: "Composite",
        className: "MediaJobOutputErroredEventData",
        modelProperties: Object.assign({}, MediaJobOutputStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobOutputFinishedEventData = {
    serializedName: "#Microsoft.Media.JobOutputFinished",
    type: {
        name: "Composite",
        className: "MediaJobOutputFinishedEventData",
        modelProperties: Object.assign({}, MediaJobOutputStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobOutputProcessingEventData = {
    serializedName: "#Microsoft.Media.JobOutputProcessing",
    type: {
        name: "Composite",
        className: "MediaJobOutputProcessingEventData",
        modelProperties: Object.assign({}, MediaJobOutputStateChangeEventData.type.modelProperties)
    }
};
export const MediaJobOutputScheduledEventData = {
    serializedName: "#Microsoft.Media.JobOutputScheduled",
    type: {
        name: "Composite",
        className: "MediaJobOutputScheduledEventData",
        modelProperties: Object.assign({}, MediaJobOutputStateChangeEventData.type.modelProperties)
    }
};
export const MapsGeofenceEnteredEventData = {
    type: {
        name: "Composite",
        className: "MapsGeofenceEnteredEventData",
        modelProperties: Object.assign({}, MapsGeofenceEvent.type.modelProperties)
    }
};
export const MapsGeofenceExitedEventData = {
    type: {
        name: "Composite",
        className: "MapsGeofenceExitedEventData",
        modelProperties: Object.assign({}, MapsGeofenceEvent.type.modelProperties)
    }
};
export const MapsGeofenceResultEventData = {
    type: {
        name: "Composite",
        className: "MapsGeofenceResultEventData",
        modelProperties: Object.assign({}, MapsGeofenceEvent.type.modelProperties)
    }
};
export const AcsChatMessageEventBase = {
    type: {
        name: "Composite",
        className: "AcsChatMessageEventBase",
        modelProperties: Object.assign(Object.assign({}, AcsChatEventBase.type.modelProperties), { messageId: {
                serializedName: "messageId",
                required: true,
                type: {
                    name: "String"
                }
            }, senderCommunicationIdentifier: {
                serializedName: "senderCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, senderDisplayName: {
                serializedName: "senderDisplayName",
                required: true,
                type: {
                    name: "String"
                }
            }, composeTime: {
                serializedName: "composeTime",
                required: true,
                type: {
                    name: "String"
                }
            }, type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AcsChatThreadEventBase = {
    type: {
        name: "Composite",
        className: "AcsChatThreadEventBase",
        modelProperties: Object.assign(Object.assign({}, AcsChatEventBase.type.modelProperties), { createTime: {
                serializedName: "createTime",
                required: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AcsChatMessageEventInThreadBase = {
    type: {
        name: "Composite",
        className: "AcsChatMessageEventInThreadBase",
        modelProperties: Object.assign(Object.assign({}, AcsChatEventInThreadBase.type.modelProperties), { messageId: {
                serializedName: "messageId",
                required: true,
                type: {
                    name: "String"
                }
            }, senderCommunicationIdentifier: {
                serializedName: "senderCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, senderDisplayName: {
                serializedName: "senderDisplayName",
                required: true,
                type: {
                    name: "String"
                }
            }, composeTime: {
                serializedName: "composeTime",
                required: true,
                type: {
                    name: "String"
                }
            }, type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AcsChatThreadEventInThreadBase = {
    type: {
        name: "Composite",
        className: "AcsChatThreadEventInThreadBase",
        modelProperties: Object.assign(Object.assign({}, AcsChatEventInThreadBase.type.modelProperties), { createTime: {
                serializedName: "createTime",
                required: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AcsChatParticipantAddedToThreadEventData = {
    type: {
        name: "Composite",
        className: "AcsChatParticipantAddedToThreadEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatEventInThreadBase.type.modelProperties), { time: {
                serializedName: "time",
                required: true,
                type: {
                    name: "String"
                }
            }, addedByCommunicationIdentifier: {
                serializedName: "addedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, participantAdded: {
                serializedName: "participantAdded",
                type: {
                    name: "Composite",
                    className: "AcsChatThreadParticipant"
                }
            }, version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AcsChatParticipantRemovedFromThreadEventData = {
    type: {
        name: "Composite",
        className: "AcsChatParticipantRemovedFromThreadEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatEventInThreadBase.type.modelProperties), { time: {
                serializedName: "time",
                required: true,
                type: {
                    name: "String"
                }
            }, removedByCommunicationIdentifier: {
                serializedName: "removedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, participantRemoved: {
                serializedName: "participantRemoved",
                type: {
                    name: "Composite",
                    className: "AcsChatThreadParticipant"
                }
            }, version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AcsSmsDeliveryReportReceivedEventData = {
    type: {
        name: "Composite",
        className: "AcsSmsDeliveryReportReceivedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsSmsEventBase.type.modelProperties), { deliveryStatus: {
                serializedName: "deliveryStatus",
                required: true,
                type: {
                    name: "String"
                }
            }, deliveryStatusDetails: {
                serializedName: "deliveryStatusDetails",
                required: true,
                type: {
                    name: "String"
                }
            }, deliveryAttempts: {
                serializedName: "deliveryAttempts",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AcsSmsDeliveryAttempt"
                        }
                    }
                }
            }, receivedTimestamp: {
                serializedName: "receivedTimestamp",
                required: true,
                type: {
                    name: "String"
                }
            }, tag: {
                serializedName: "tag",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsSmsReceivedEventData = {
    type: {
        name: "Composite",
        className: "AcsSmsReceivedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsSmsEventBase.type.modelProperties), { message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            }, receivedTimestamp: {
                serializedName: "receivedTimestamp",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatMessageReceivedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatMessageReceivedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatMessageEventBase.type.modelProperties), { messageBody: {
                serializedName: "messageBody",
                required: true,
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "metadata",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            } })
    }
};
export const AcsChatMessageEditedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatMessageEditedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatMessageEventBase.type.modelProperties), { messageBody: {
                serializedName: "messageBody",
                required: true,
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "metadata",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, editTime: {
                serializedName: "editTime",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatMessageDeletedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatMessageDeletedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatMessageEventBase.type.modelProperties), { deleteTime: {
                serializedName: "deleteTime",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatThreadCreatedWithUserEventData = {
    type: {
        name: "Composite",
        className: "AcsChatThreadCreatedWithUserEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventBase.type.modelProperties), { createdByCommunicationIdentifier: {
                serializedName: "createdByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, properties: {
                serializedName: "properties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }, participants: {
                serializedName: "participants",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AcsChatThreadParticipant"
                        }
                    }
                }
            } })
    }
};
export const AcsChatThreadWithUserDeletedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatThreadWithUserDeletedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventBase.type.modelProperties), { deletedByCommunicationIdentifier: {
                serializedName: "deletedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, deleteTime: {
                serializedName: "deleteTime",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatThreadPropertiesUpdatedPerUserEventData = {
    type: {
        name: "Composite",
        className: "AcsChatThreadPropertiesUpdatedPerUserEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventBase.type.modelProperties), { editedByCommunicationIdentifier: {
                serializedName: "editedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, editTime: {
                serializedName: "editTime",
                required: true,
                type: {
                    name: "String"
                }
            }, properties: {
                serializedName: "properties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            } })
    }
};
export const AcsChatParticipantAddedToThreadWithUserEventData = {
    type: {
        name: "Composite",
        className: "AcsChatParticipantAddedToThreadWithUserEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventBase.type.modelProperties), { time: {
                serializedName: "time",
                required: true,
                type: {
                    name: "String"
                }
            }, addedByCommunicationIdentifier: {
                serializedName: "addedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, participantAdded: {
                serializedName: "participantAdded",
                type: {
                    name: "Composite",
                    className: "AcsChatThreadParticipant"
                }
            } })
    }
};
export const AcsChatParticipantRemovedFromThreadWithUserEventData = {
    type: {
        name: "Composite",
        className: "AcsChatParticipantRemovedFromThreadWithUserEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventBase.type.modelProperties), { time: {
                serializedName: "time",
                required: true,
                type: {
                    name: "String"
                }
            }, removedByCommunicationIdentifier: {
                serializedName: "removedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, participantRemoved: {
                serializedName: "participantRemoved",
                type: {
                    name: "Composite",
                    className: "AcsChatThreadParticipant"
                }
            } })
    }
};
export const AcsChatMessageReceivedInThreadEventData = {
    type: {
        name: "Composite",
        className: "AcsChatMessageReceivedInThreadEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatMessageEventInThreadBase.type.modelProperties), { messageBody: {
                serializedName: "messageBody",
                required: true,
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "metadata",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            } })
    }
};
export const AcsChatMessageEditedInThreadEventData = {
    type: {
        name: "Composite",
        className: "AcsChatMessageEditedInThreadEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatMessageEventInThreadBase.type.modelProperties), { messageBody: {
                serializedName: "messageBody",
                required: true,
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "metadata",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, editTime: {
                serializedName: "editTime",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatMessageDeletedInThreadEventData = {
    type: {
        name: "Composite",
        className: "AcsChatMessageDeletedInThreadEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatMessageEventInThreadBase.type.modelProperties), { deleteTime: {
                serializedName: "deleteTime",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatThreadCreatedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatThreadCreatedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventInThreadBase.type.modelProperties), { createdByCommunicationIdentifier: {
                serializedName: "createdByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, properties: {
                serializedName: "properties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }, participants: {
                serializedName: "participants",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AcsChatThreadParticipant"
                        }
                    }
                }
            } })
    }
};
export const AcsChatThreadDeletedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatThreadDeletedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventInThreadBase.type.modelProperties), { deletedByCommunicationIdentifier: {
                serializedName: "deletedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, deleteTime: {
                serializedName: "deleteTime",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const AcsChatThreadPropertiesUpdatedEventData = {
    type: {
        name: "Composite",
        className: "AcsChatThreadPropertiesUpdatedEventData",
        modelProperties: Object.assign(Object.assign({}, AcsChatThreadEventInThreadBase.type.modelProperties), { editedByCommunicationIdentifier: {
                serializedName: "editedByCommunicationIdentifier",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentifierModel"
                }
            }, editTime: {
                serializedName: "editTime",
                required: true,
                type: {
                    name: "String"
                }
            }, properties: {
                serializedName: "properties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            } })
    }
};
export let discriminators = {
    MediaJobOutput: MediaJobOutput,
    "MediaJobOutput.#Microsoft.Media.JobOutputAsset": MediaJobOutputAsset
};
//# sourceMappingURL=mappers.js.map