"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegrationAccountAgreement = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Logic App Integration Account Agreement.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * from "fs";
 *
 * const testResourceGroup = new azure.core.ResourceGroup("testResourceGroup", {location: "West Europe"});
 * const testIntegrationAccount = new azure.logicapps.IntegrationAccount("testIntegrationAccount", {
 *     location: testResourceGroup.location,
 *     resourceGroupName: testResourceGroup.name,
 *     skuName: "Standard",
 * });
 * const host = new azure.logicapps.IntegrationAccountPartner("host", {
 *     resourceGroupName: testResourceGroup.name,
 *     integrationAccountName: testIntegrationAccount.name,
 *     businessIdentities: [{
 *         qualifier: "AS2Identity",
 *         value: "FabrikamNY",
 *     }],
 * });
 * const guest = new azure.logicapps.IntegrationAccountPartner("guest", {
 *     resourceGroupName: testResourceGroup.name,
 *     integrationAccountName: testIntegrationAccount.name,
 *     businessIdentities: [{
 *         qualifier: "AS2Identity",
 *         value: "FabrikamDC",
 *     }],
 * });
 * const testIntegrationAccountAgreement = new azure.logicapps.IntegrationAccountAgreement("testIntegrationAccountAgreement", {
 *     resourceGroupName: testResourceGroup.name,
 *     integrationAccountName: testIntegrationAccount.name,
 *     agreementType: "AS2",
 *     hostPartnerName: host.name,
 *     guestPartnerName: guest.name,
 *     content: fs.readFileSync("testdata/integration_account_agreement_content_as2.json"),
 *     hostIdentity: {
 *         qualifier: "AS2Identity",
 *         value: "FabrikamNY",
 *     },
 *     guestIdentity: {
 *         qualifier: "AS2Identity",
 *         value: "FabrikamDC",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Logic App Integration Account Agreements can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:logicapps/integrationAccountAgreement:IntegrationAccountAgreement example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logic/integrationAccounts/account1/agreements/agreement1
 * ```
 */
class IntegrationAccountAgreement extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["agreementType"] = state ? state.agreementType : undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["guestIdentity"] = state ? state.guestIdentity : undefined;
            inputs["guestPartnerName"] = state ? state.guestPartnerName : undefined;
            inputs["hostIdentity"] = state ? state.hostIdentity : undefined;
            inputs["hostPartnerName"] = state ? state.hostPartnerName : undefined;
            inputs["integrationAccountName"] = state ? state.integrationAccountName : undefined;
            inputs["metadata"] = state ? state.metadata : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.agreementType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agreementType'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.guestIdentity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'guestIdentity'");
            }
            if ((!args || args.guestPartnerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'guestPartnerName'");
            }
            if ((!args || args.hostIdentity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostIdentity'");
            }
            if ((!args || args.hostPartnerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostPartnerName'");
            }
            if ((!args || args.integrationAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationAccountName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["agreementType"] = args ? args.agreementType : undefined;
            inputs["content"] = args ? args.content : undefined;
            inputs["guestIdentity"] = args ? args.guestIdentity : undefined;
            inputs["guestPartnerName"] = args ? args.guestPartnerName : undefined;
            inputs["hostIdentity"] = args ? args.hostIdentity : undefined;
            inputs["hostPartnerName"] = args ? args.hostPartnerName : undefined;
            inputs["integrationAccountName"] = args ? args.integrationAccountName : undefined;
            inputs["metadata"] = args ? args.metadata : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(IntegrationAccountAgreement.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing IntegrationAccountAgreement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new IntegrationAccountAgreement(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of IntegrationAccountAgreement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationAccountAgreement.__pulumiType;
    }
}
exports.IntegrationAccountAgreement = IntegrationAccountAgreement;
/** @internal */
IntegrationAccountAgreement.__pulumiType = 'azure:logicapps/integrationAccountAgreement:IntegrationAccountAgreement';
//# sourceMappingURL=integrationAccountAgreement.js.map