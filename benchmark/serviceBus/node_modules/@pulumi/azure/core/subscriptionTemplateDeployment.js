"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionTemplateDeployment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Subscription Template Deployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.SubscriptionTemplateDeployment("example", {
 *     location: "West Europe",
 *     templateContent: ` {
 *    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
 *    "contentVersion": "1.0.0.0",
 *    "parameters": {},
 *    "variables": {},
 *    "resources": [
 *      {
 *        "type": "Microsoft.Resources/resourceGroups",
 *        "apiVersion": "2018-05-01",
 *        "location": "West Europe",
 *        "name": "some-resource-group",
 *        "properties": {}
 *      }
 *    ]
 *  }
 *  `,
 * });
 * ```
 *
 * ## Import
 *
 * Subscription Template Deployments can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:core/subscriptionTemplateDeployment:SubscriptionTemplateDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Resources/deployments/template1
 * ```
 */
class SubscriptionTemplateDeployment extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["debugLevel"] = state ? state.debugLevel : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["outputContent"] = state ? state.outputContent : undefined;
            inputs["parametersContent"] = state ? state.parametersContent : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["templateContent"] = state ? state.templateContent : undefined;
            inputs["templateSpecVersionId"] = state ? state.templateSpecVersionId : undefined;
        }
        else {
            const args = argsOrState;
            inputs["debugLevel"] = args ? args.debugLevel : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parametersContent"] = args ? args.parametersContent : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["templateContent"] = args ? args.templateContent : undefined;
            inputs["templateSpecVersionId"] = args ? args.templateSpecVersionId : undefined;
            inputs["outputContent"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SubscriptionTemplateDeployment.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SubscriptionTemplateDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SubscriptionTemplateDeployment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SubscriptionTemplateDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubscriptionTemplateDeployment.__pulumiType;
    }
}
exports.SubscriptionTemplateDeployment = SubscriptionTemplateDeployment;
/** @internal */
SubscriptionTemplateDeployment.__pulumiType = 'azure:core/subscriptionTemplateDeployment:SubscriptionTemplateDeployment';
//# sourceMappingURL=subscriptionTemplateDeployment.js.map