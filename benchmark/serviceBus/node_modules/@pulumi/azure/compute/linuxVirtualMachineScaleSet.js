"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinuxVirtualMachineScaleSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Linux Virtual Machine Scale Set.
 *
 * ## Disclaimers
 *
 * > **NOTE:** All arguments including the administrator login and password will be stored in the raw state as plain-text.
 *
 * > **NOTE:** This provider will automatically update & reimage the nodes in the Scale Set (if Required) during an Update - this behaviour can be configured using the `features` setting within the Provider block.
 *
 * ## Example Usage
 *
 * This example provisions a basic Linux Virtual Machine Scale Set on an internal network.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * from "fs";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const internal = new azure.network.Subnet("internal", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleLinuxVirtualMachineScaleSet = new azure.compute.LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     sku: "Standard_F2",
 *     instances: 1,
 *     adminUsername: "adminuser",
 *     adminSshKeys: [{
 *         username: "adminuser",
 *         publicKey: fs.readFileSync("~/.ssh/id_rsa.pub"),
 *     }],
 *     sourceImageReference: {
 *         publisher: "Canonical",
 *         offer: "UbuntuServer",
 *         sku: "16.04-LTS",
 *         version: "latest",
 *     },
 *     osDisk: {
 *         storageAccountType: "Standard_LRS",
 *         caching: "ReadWrite",
 *     },
 *     networkInterfaces: [{
 *         name: "example",
 *         primary: true,
 *         ipConfigurations: [{
 *             name: "internal",
 *             primary: true,
 *             subnetId: internal.id,
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Linux Virtual Machine Scale Sets can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
 * ```
 */
class LinuxVirtualMachineScaleSet extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["additionalCapabilities"] = state ? state.additionalCapabilities : undefined;
            inputs["adminPassword"] = state ? state.adminPassword : undefined;
            inputs["adminSshKeys"] = state ? state.adminSshKeys : undefined;
            inputs["adminUsername"] = state ? state.adminUsername : undefined;
            inputs["automaticInstanceRepair"] = state ? state.automaticInstanceRepair : undefined;
            inputs["automaticOsUpgradePolicy"] = state ? state.automaticOsUpgradePolicy : undefined;
            inputs["bootDiagnostics"] = state ? state.bootDiagnostics : undefined;
            inputs["computerNamePrefix"] = state ? state.computerNamePrefix : undefined;
            inputs["customData"] = state ? state.customData : undefined;
            inputs["dataDisks"] = state ? state.dataDisks : undefined;
            inputs["disablePasswordAuthentication"] = state ? state.disablePasswordAuthentication : undefined;
            inputs["doNotRunExtensionsOnOverprovisionedMachines"] = state ? state.doNotRunExtensionsOnOverprovisionedMachines : undefined;
            inputs["encryptionAtHostEnabled"] = state ? state.encryptionAtHostEnabled : undefined;
            inputs["evictionPolicy"] = state ? state.evictionPolicy : undefined;
            inputs["extensions"] = state ? state.extensions : undefined;
            inputs["extensionsTimeBudget"] = state ? state.extensionsTimeBudget : undefined;
            inputs["healthProbeId"] = state ? state.healthProbeId : undefined;
            inputs["identity"] = state ? state.identity : undefined;
            inputs["instances"] = state ? state.instances : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["maxBidPrice"] = state ? state.maxBidPrice : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            inputs["osDisk"] = state ? state.osDisk : undefined;
            inputs["overprovision"] = state ? state.overprovision : undefined;
            inputs["plan"] = state ? state.plan : undefined;
            inputs["platformFaultDomainCount"] = state ? state.platformFaultDomainCount : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["provisionVmAgent"] = state ? state.provisionVmAgent : undefined;
            inputs["proximityPlacementGroupId"] = state ? state.proximityPlacementGroupId : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["rollingUpgradePolicy"] = state ? state.rollingUpgradePolicy : undefined;
            inputs["scaleInPolicy"] = state ? state.scaleInPolicy : undefined;
            inputs["secrets"] = state ? state.secrets : undefined;
            inputs["secureBootEnabled"] = state ? state.secureBootEnabled : undefined;
            inputs["singlePlacementGroup"] = state ? state.singlePlacementGroup : undefined;
            inputs["sku"] = state ? state.sku : undefined;
            inputs["sourceImageId"] = state ? state.sourceImageId : undefined;
            inputs["sourceImageReference"] = state ? state.sourceImageReference : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["terminateNotification"] = state ? state.terminateNotification : undefined;
            inputs["uniqueId"] = state ? state.uniqueId : undefined;
            inputs["upgradeMode"] = state ? state.upgradeMode : undefined;
            inputs["userData"] = state ? state.userData : undefined;
            inputs["vtpmEnabled"] = state ? state.vtpmEnabled : undefined;
            inputs["zoneBalance"] = state ? state.zoneBalance : undefined;
            inputs["zones"] = state ? state.zones : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.adminUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminUsername'");
            }
            if ((!args || args.instances === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instances'");
            }
            if ((!args || args.networkInterfaces === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaces'");
            }
            if ((!args || args.osDisk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osDisk'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            inputs["additionalCapabilities"] = args ? args.additionalCapabilities : undefined;
            inputs["adminPassword"] = args ? args.adminPassword : undefined;
            inputs["adminSshKeys"] = args ? args.adminSshKeys : undefined;
            inputs["adminUsername"] = args ? args.adminUsername : undefined;
            inputs["automaticInstanceRepair"] = args ? args.automaticInstanceRepair : undefined;
            inputs["automaticOsUpgradePolicy"] = args ? args.automaticOsUpgradePolicy : undefined;
            inputs["bootDiagnostics"] = args ? args.bootDiagnostics : undefined;
            inputs["computerNamePrefix"] = args ? args.computerNamePrefix : undefined;
            inputs["customData"] = args ? args.customData : undefined;
            inputs["dataDisks"] = args ? args.dataDisks : undefined;
            inputs["disablePasswordAuthentication"] = args ? args.disablePasswordAuthentication : undefined;
            inputs["doNotRunExtensionsOnOverprovisionedMachines"] = args ? args.doNotRunExtensionsOnOverprovisionedMachines : undefined;
            inputs["encryptionAtHostEnabled"] = args ? args.encryptionAtHostEnabled : undefined;
            inputs["evictionPolicy"] = args ? args.evictionPolicy : undefined;
            inputs["extensions"] = args ? args.extensions : undefined;
            inputs["extensionsTimeBudget"] = args ? args.extensionsTimeBudget : undefined;
            inputs["healthProbeId"] = args ? args.healthProbeId : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["instances"] = args ? args.instances : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maxBidPrice"] = args ? args.maxBidPrice : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            inputs["osDisk"] = args ? args.osDisk : undefined;
            inputs["overprovision"] = args ? args.overprovision : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["platformFaultDomainCount"] = args ? args.platformFaultDomainCount : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["provisionVmAgent"] = args ? args.provisionVmAgent : undefined;
            inputs["proximityPlacementGroupId"] = args ? args.proximityPlacementGroupId : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["rollingUpgradePolicy"] = args ? args.rollingUpgradePolicy : undefined;
            inputs["scaleInPolicy"] = args ? args.scaleInPolicy : undefined;
            inputs["secrets"] = args ? args.secrets : undefined;
            inputs["secureBootEnabled"] = args ? args.secureBootEnabled : undefined;
            inputs["singlePlacementGroup"] = args ? args.singlePlacementGroup : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["sourceImageId"] = args ? args.sourceImageId : undefined;
            inputs["sourceImageReference"] = args ? args.sourceImageReference : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["terminateNotification"] = args ? args.terminateNotification : undefined;
            inputs["upgradeMode"] = args ? args.upgradeMode : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["vtpmEnabled"] = args ? args.vtpmEnabled : undefined;
            inputs["zoneBalance"] = args ? args.zoneBalance : undefined;
            inputs["zones"] = args ? args.zones : undefined;
            inputs["uniqueId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(LinuxVirtualMachineScaleSet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing LinuxVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new LinuxVirtualMachineScaleSet(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of LinuxVirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LinuxVirtualMachineScaleSet.__pulumiType;
    }
}
exports.LinuxVirtualMachineScaleSet = LinuxVirtualMachineScaleSet;
/** @internal */
LinuxVirtualMachineScaleSet.__pulumiType = 'azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet';
//# sourceMappingURL=linuxVirtualMachineScaleSet.js.map