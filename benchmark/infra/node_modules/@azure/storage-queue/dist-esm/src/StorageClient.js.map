{"version":3,"file":"StorageClient.js","sourceRoot":"","sources":["../../src/StorageClient.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,MAAM,sBAAsB,CAAC;AAGtF,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AACxE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,0BAA0B,EAAE,MAAM,0CAA0C,CAAC;AAYtF;;GAEG;AACH,MAAM,OAAgB,aAAa;IA4BjC;;;;OAIG;IACH,YAAsB,GAAW,EAAE,QAAkB;QACnD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,oBAAoB,GAAG,uBAAuB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAEnE,yCAAyC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC5C,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC7C,IACE,CAAC,MAAM,IAAI,OAAO,YAAY,0BAA0B,CAAC;gBACzD,OAAO,YAAY,mBAAmB,EACtC;gBACA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;gBAC1B,MAAM;aACP;iBAAM;gBACL,IAAI;oBACF,MAAM,UAAU,GAAI,OAAe,CAAC,MAAM,EAAE,CAAC;oBAC7C,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,KAAK,iCAAiC,EAAE;wBACrE,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;wBAC1B,MAAM;qBACP;iBACF;gBAAC,OAAO,GAAG,EAAE;oBACZ,2FAA2F;iBAC5F;aACF;SACF;IACH,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { getAccountNameFromUrl, getStorageClientContext } from \"./utils/utils.common\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\nimport { Credential } from \"./credentials/Credential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { isNode } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a based client class for {@link QueueServiceClient}, {@link QueueClient} and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: Pipeline;\n\n  /**\n   * Credential factory in the pipleline to authenticate requests to the service, such as AnonymousCredential, StorageSharedKeyCredential.\n   * Initialized to an AnonymousCredential if not able to retrieve it from the pipeline.\n   *\n   * @internal\n   */\n  protected readonly credential: Credential;\n\n  /**\n   * StorageClientContext is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url -\n   * @param pipeline -\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    this.url = url;\n    this.accountName = getAccountNameFromUrl(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = getStorageClientContext(url, pipeline);\n\n    // Retrieve credential from the pipeline.\n    this.credential = new AnonymousCredential();\n    for (const factory of this.pipeline.factories) {\n      if (\n        (isNode && factory instanceof StorageSharedKeyCredential) ||\n        factory instanceof AnonymousCredential\n      ) {\n        this.credential = factory;\n        break;\n      } else {\n        try {\n          const authPolicy = (factory as any).create();\n          if (authPolicy.constructor.name === \"BearerTokenAuthenticationPolicy\") {\n            this.credential = factory;\n            break;\n          }\n        } catch (err) {\n          // ignore errors in creating policy, the client instance may still work without the policy.\n        }\n      }\n    }\n  }\n}\n\n// The following type is introduced to avoid a breaking change during the\n// migration of V6 SDK generator. Can be removed later when a really\n// breaking change is released.\n\n/**\n * Defines values for ListQueuesIncludeType.\n * Possible values include: 'metadata'\n * @readonly\n */\nexport type ListQueuesIncludeType = \"metadata\";\n"]}