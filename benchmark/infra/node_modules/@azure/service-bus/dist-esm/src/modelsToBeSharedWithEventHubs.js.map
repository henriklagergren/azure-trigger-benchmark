{"version":3,"file":"modelsToBeSharedWithEventHubs.js","sourceRoot":"","sources":["../../src/modelsToBeSharedWithEventHubs.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,oEAAoE;AAEpE,OAAO,EAA2B,cAAc,EAAqB,MAAM,qBAAqB,CAAC;AAyBjG;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,KAAK,CAAI,EAAoB,EAAE,IAAU;IAC7D,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,EAAE,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5C,OAAO,GAAG,CAAC;KACZ;IAAC,OAAO,GAAG,EAAE;QACZ,IAAI,CAAC,SAAS,CAAC;YACb,IAAI,EAAE,cAAc,CAAC,KAAK;YAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;QACH,MAAM,GAAG,CAAC;KACX;YAAS;QACR,IAAI,CAAC,GAAG,EAAE,CAAC;KACZ;AACH,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// TODO: this code is a straight-copy from EventHubs. Need to merge.\n\nimport { OperationTracingOptions, SpanStatusCode, Span, SpanContext } from \"@azure/core-tracing\";\nimport { OperationOptions } from \"@azure/core-http\";\n\n/**\n * NOTE: This type is intended to mirror the relevant fields and structure from `@azure/core-http` OperationOptions\n *\n * Options for configuring tracing and the abortSignal.\n */\nexport type OperationOptionsBase = Pick<OperationOptions, \"abortSignal\" | \"tracingOptions\">;\n\n/**\n * The set of options to manually propagate `Span` context for distributed tracing.\n */\nexport interface TryAddOptions {\n  /**\n   * The options to use when creating Spans for tracing.\n   */\n  tracingOptions?: OperationTracingOptions;\n\n  /**\n   * @deprecated Tracing options have been moved to the `tracingOptions` property.\n   */\n  parentSpan?: Span | SpanContext | null;\n}\n\n/**\n * Runs the `fn` passed in and marks the span as completed with an error (and the\n * corresponding message) or as OK.\n *\n * @hidden\n * @internal\n */\nexport async function trace<T>(fn: () => Promise<T>, span: Span): Promise<T> {\n  try {\n    const ret = await fn();\n    span.setStatus({ code: SpanStatusCode.OK });\n    return ret;\n  } catch (err) {\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: err.message,\n    });\n    throw err;\n  } finally {\n    span.end();\n  }\n}\n"]}