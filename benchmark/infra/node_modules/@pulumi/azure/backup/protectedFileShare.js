"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProtectedFileShare = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an Azure Backup Protected File Share to enable backups for file shares within an Azure Storage Account
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const rg = new azure.core.ResourceGroup("rg", {location: "West Europe"});
 * const vault = new azure.recoveryservices.Vault("vault", {
 *     location: rg.location,
 *     resourceGroupName: rg.name,
 *     sku: "Standard",
 * });
 * const sa = new azure.storage.Account("sa", {
 *     location: rg.location,
 *     resourceGroupName: rg.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleShare = new azure.storage.Share("exampleShare", {storageAccountName: sa.name});
 * const protection_container = new azure.backup.ContainerStorageAccount("protection-container", {
 *     resourceGroupName: rg.name,
 *     recoveryVaultName: vault.name,
 *     storageAccountId: sa.id,
 * });
 * const examplePolicyFileShare = new azure.backup.PolicyFileShare("examplePolicyFileShare", {
 *     resourceGroupName: rg.name,
 *     recoveryVaultName: vault.name,
 *     backup: {
 *         frequency: "Daily",
 *         time: "23:00",
 *     },
 *     retentionDaily: {
 *         count: 10,
 *     },
 * });
 * const share1 = new azure.backup.ProtectedFileShare("share1", {
 *     resourceGroupName: rg.name,
 *     recoveryVaultName: vault.name,
 *     sourceStorageAccountId: protection_container.storageAccountId,
 *     sourceFileShareName: exampleShare.name,
 *     backupPolicyId: examplePolicyFileShare.id,
 * });
 * ```
 *
 * ## Import
 *
 * Azure Backup Protected File Shares can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:backup/protectedFileShare:ProtectedFileShare item1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupFabrics/Azure/protectionContainers/StorageContainer;storage;group2;example-storage-account/protectedItems/AzureFileShare;3f6e3108a45793581bcbd1c61c87a3b2ceeb4ff4bc02a95ce9d1022b23722935"
 * ```
 *
 *  -> **NOTE** The ID requires quoting as there are semicolons. This user unfriendly ID can be found in the Deployments of the used resourcegroup, look for an Deployment which starts with `ConfigureAFSProtection-`, click then `Go to resource`.
 */
class ProtectedFileShare extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["backupPolicyId"] = state ? state.backupPolicyId : undefined;
            inputs["recoveryVaultName"] = state ? state.recoveryVaultName : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["sourceFileShareName"] = state ? state.sourceFileShareName : undefined;
            inputs["sourceStorageAccountId"] = state ? state.sourceStorageAccountId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.backupPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPolicyId'");
            }
            if ((!args || args.recoveryVaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryVaultName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sourceFileShareName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceFileShareName'");
            }
            if ((!args || args.sourceStorageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceStorageAccountId'");
            }
            inputs["backupPolicyId"] = args ? args.backupPolicyId : undefined;
            inputs["recoveryVaultName"] = args ? args.recoveryVaultName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sourceFileShareName"] = args ? args.sourceFileShareName : undefined;
            inputs["sourceStorageAccountId"] = args ? args.sourceStorageAccountId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ProtectedFileShare.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ProtectedFileShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProtectedFileShare(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProtectedFileShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtectedFileShare.__pulumiType;
    }
}
exports.ProtectedFileShare = ProtectedFileShare;
/** @internal */
ProtectedFileShare.__pulumiType = 'azure:backup/protectedFileShare:ProtectedFileShare';
//# sourceMappingURL=protectedFileShare.js.map