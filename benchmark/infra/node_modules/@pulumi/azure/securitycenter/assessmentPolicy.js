"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssessmentPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages the Security Center Assessment Metadata for Azure Security Center.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.securitycenter.AssessmentPolicy("example", {
 *     description: "Test Description",
 *     displayName: "Test Display Name",
 *     severity: "Medium",
 * });
 * ```
 *
 * ## Import
 *
 * Security Assessments Policy can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:securitycenter/assessmentPolicy:AssessmentPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/assessmentMetadata/metadata1
 * ```
 */
class AssessmentPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["categories"] = state ? state.categories : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["implementationEffort"] = state ? state.implementationEffort : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["remediationDescription"] = state ? state.remediationDescription : undefined;
            inputs["severity"] = state ? state.severity : undefined;
            inputs["threats"] = state ? state.threats : undefined;
            inputs["userImpact"] = state ? state.userImpact : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            inputs["categories"] = args ? args.categories : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["implementationEffort"] = args ? args.implementationEffort : undefined;
            inputs["remediationDescription"] = args ? args.remediationDescription : undefined;
            inputs["severity"] = args ? args.severity : undefined;
            inputs["threats"] = args ? args.threats : undefined;
            inputs["userImpact"] = args ? args.userImpact : undefined;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(AssessmentPolicy.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing AssessmentPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AssessmentPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AssessmentPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssessmentPolicy.__pulumiType;
    }
}
exports.AssessmentPolicy = AssessmentPolicy;
/** @internal */
AssessmentPolicy.__pulumiType = 'azure:securitycenter/assessmentPolicy:AssessmentPolicy';
//# sourceMappingURL=assessmentPolicy.js.map