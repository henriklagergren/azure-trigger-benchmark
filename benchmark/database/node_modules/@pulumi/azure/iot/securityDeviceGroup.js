"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityDeviceGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Iot Security Device Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleIoTHub = new azure.iot.IoTHub("exampleIoTHub", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     sku: {
 *         name: "S1",
 *         capacity: "1",
 *     },
 * });
 * const exampleSecuritySolution = new azure.iot.SecuritySolution("exampleSecuritySolution", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     displayName: "Iot Security Solution",
 *     iothubIds: [exampleIoTHub.id],
 * });
 * const exampleSecurityDeviceGroup = new azure.iot.SecurityDeviceGroup("exampleSecurityDeviceGroup", {
 *     iothubId: exampleIoTHub.id,
 *     allowRule: {
 *         connectionToIpsNotAlloweds: ["10.0.0.0/24"],
 *     },
 *     rangeRules: [{
 *         type: "ActiveConnectionsNotInAllowedRange",
 *         min: 0,
 *         max: 30,
 *         duration: "PT5M",
 *     }],
 * }, {
 *     dependsOn: [exampleSecuritySolution],
 * });
 * ```
 *
 * ## Import
 *
 * Iot Security Device Group can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:iot/securityDeviceGroup:SecurityDeviceGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Devices/iotHubs/hub1/providers/Microsoft.Security/deviceSecurityGroups/group1
 * ```
 */
class SecurityDeviceGroup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["allowRule"] = state ? state.allowRule : undefined;
            resourceInputs["iothubId"] = state ? state.iothubId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rangeRules"] = state ? state.rangeRules : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.iothubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iothubId'");
            }
            resourceInputs["allowRule"] = args ? args.allowRule : undefined;
            resourceInputs["iothubId"] = args ? args.iothubId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rangeRules"] = args ? args.rangeRules : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityDeviceGroup.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SecurityDeviceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SecurityDeviceGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SecurityDeviceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityDeviceGroup.__pulumiType;
    }
}
exports.SecurityDeviceGroup = SecurityDeviceGroup;
/** @internal */
SecurityDeviceGroup.__pulumiType = 'azure:iot/securityDeviceGroup:SecurityDeviceGroup';
//# sourceMappingURL=securityDeviceGroup.js.map