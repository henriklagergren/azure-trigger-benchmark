"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./certificate"), exports);
__exportStar(require("./consumerGroup"), exports);
__exportStar(require("./dpsSharedAccessPolicy"), exports);
__exportStar(require("./endpointEventhub"), exports);
__exportStar(require("./endpointServicebusQueue"), exports);
__exportStar(require("./endpointServicebusTopic"), exports);
__exportStar(require("./endpointStorageContainer"), exports);
__exportStar(require("./enrichment"), exports);
__exportStar(require("./fallbackRoute"), exports);
__exportStar(require("./getDps"), exports);
__exportStar(require("./getDpsSharedAccessPolicy"), exports);
__exportStar(require("./getIotHub"), exports);
__exportStar(require("./getSharedAccessPolicy"), exports);
__exportStar(require("./ioTHub"), exports);
__exportStar(require("./iotHubCertificate"), exports);
__exportStar(require("./iotHubDps"), exports);
__exportStar(require("./route"), exports);
__exportStar(require("./securityDeviceGroup"), exports);
__exportStar(require("./securitySolution"), exports);
__exportStar(require("./sharedAccessPolicy"), exports);
__exportStar(require("./timeSeriesInsightsAccessPolicy"), exports);
__exportStar(require("./timeSeriesInsightsEventSourceEventhub"), exports);
__exportStar(require("./timeSeriesInsightsEventSourceIothub"), exports);
__exportStar(require("./timeSeriesInsightsGen2Environment"), exports);
__exportStar(require("./timeSeriesInsightsReferenceDataSet"), exports);
__exportStar(require("./timeSeriesInsightsStandardEnvironment"), exports);
__exportStar(require("./zMixins"), exports);
// Import resources to register:
const certificate_1 = require("./certificate");
const consumerGroup_1 = require("./consumerGroup");
const dpsSharedAccessPolicy_1 = require("./dpsSharedAccessPolicy");
const endpointEventhub_1 = require("./endpointEventhub");
const endpointServicebusQueue_1 = require("./endpointServicebusQueue");
const endpointServicebusTopic_1 = require("./endpointServicebusTopic");
const endpointStorageContainer_1 = require("./endpointStorageContainer");
const enrichment_1 = require("./enrichment");
const fallbackRoute_1 = require("./fallbackRoute");
const ioTHub_1 = require("./ioTHub");
const iotHubCertificate_1 = require("./iotHubCertificate");
const iotHubDps_1 = require("./iotHubDps");
const route_1 = require("./route");
const securityDeviceGroup_1 = require("./securityDeviceGroup");
const securitySolution_1 = require("./securitySolution");
const sharedAccessPolicy_1 = require("./sharedAccessPolicy");
const timeSeriesInsightsAccessPolicy_1 = require("./timeSeriesInsightsAccessPolicy");
const timeSeriesInsightsEventSourceEventhub_1 = require("./timeSeriesInsightsEventSourceEventhub");
const timeSeriesInsightsEventSourceIothub_1 = require("./timeSeriesInsightsEventSourceIothub");
const timeSeriesInsightsGen2Environment_1 = require("./timeSeriesInsightsGen2Environment");
const timeSeriesInsightsReferenceDataSet_1 = require("./timeSeriesInsightsReferenceDataSet");
const timeSeriesInsightsStandardEnvironment_1 = require("./timeSeriesInsightsStandardEnvironment");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:iot/certificate:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure:iot/consumerGroup:ConsumerGroup":
                return new consumerGroup_1.ConsumerGroup(name, undefined, { urn });
            case "azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy":
                return new dpsSharedAccessPolicy_1.DpsSharedAccessPolicy(name, undefined, { urn });
            case "azure:iot/endpointEventhub:EndpointEventhub":
                return new endpointEventhub_1.EndpointEventhub(name, undefined, { urn });
            case "azure:iot/endpointServicebusQueue:EndpointServicebusQueue":
                return new endpointServicebusQueue_1.EndpointServicebusQueue(name, undefined, { urn });
            case "azure:iot/endpointServicebusTopic:EndpointServicebusTopic":
                return new endpointServicebusTopic_1.EndpointServicebusTopic(name, undefined, { urn });
            case "azure:iot/endpointStorageContainer:EndpointStorageContainer":
                return new endpointStorageContainer_1.EndpointStorageContainer(name, undefined, { urn });
            case "azure:iot/enrichment:Enrichment":
                return new enrichment_1.Enrichment(name, undefined, { urn });
            case "azure:iot/fallbackRoute:FallbackRoute":
                return new fallbackRoute_1.FallbackRoute(name, undefined, { urn });
            case "azure:iot/ioTHub:IoTHub":
                return new ioTHub_1.IoTHub(name, undefined, { urn });
            case "azure:iot/iotHubCertificate:IotHubCertificate":
                return new iotHubCertificate_1.IotHubCertificate(name, undefined, { urn });
            case "azure:iot/iotHubDps:IotHubDps":
                return new iotHubDps_1.IotHubDps(name, undefined, { urn });
            case "azure:iot/route:Route":
                return new route_1.Route(name, undefined, { urn });
            case "azure:iot/securityDeviceGroup:SecurityDeviceGroup":
                return new securityDeviceGroup_1.SecurityDeviceGroup(name, undefined, { urn });
            case "azure:iot/securitySolution:SecuritySolution":
                return new securitySolution_1.SecuritySolution(name, undefined, { urn });
            case "azure:iot/sharedAccessPolicy:SharedAccessPolicy":
                return new sharedAccessPolicy_1.SharedAccessPolicy(name, undefined, { urn });
            case "azure:iot/timeSeriesInsightsAccessPolicy:TimeSeriesInsightsAccessPolicy":
                return new timeSeriesInsightsAccessPolicy_1.TimeSeriesInsightsAccessPolicy(name, undefined, { urn });
            case "azure:iot/timeSeriesInsightsEventSourceEventhub:TimeSeriesInsightsEventSourceEventhub":
                return new timeSeriesInsightsEventSourceEventhub_1.TimeSeriesInsightsEventSourceEventhub(name, undefined, { urn });
            case "azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub":
                return new timeSeriesInsightsEventSourceIothub_1.TimeSeriesInsightsEventSourceIothub(name, undefined, { urn });
            case "azure:iot/timeSeriesInsightsGen2Environment:TimeSeriesInsightsGen2Environment":
                return new timeSeriesInsightsGen2Environment_1.TimeSeriesInsightsGen2Environment(name, undefined, { urn });
            case "azure:iot/timeSeriesInsightsReferenceDataSet:TimeSeriesInsightsReferenceDataSet":
                return new timeSeriesInsightsReferenceDataSet_1.TimeSeriesInsightsReferenceDataSet(name, undefined, { urn });
            case "azure:iot/timeSeriesInsightsStandardEnvironment:TimeSeriesInsightsStandardEnvironment":
                return new timeSeriesInsightsStandardEnvironment_1.TimeSeriesInsightsStandardEnvironment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "iot/certificate", _module);
pulumi.runtime.registerResourceModule("azure", "iot/consumerGroup", _module);
pulumi.runtime.registerResourceModule("azure", "iot/dpsSharedAccessPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointEventhub", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointServicebusQueue", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointServicebusTopic", _module);
pulumi.runtime.registerResourceModule("azure", "iot/endpointStorageContainer", _module);
pulumi.runtime.registerResourceModule("azure", "iot/enrichment", _module);
pulumi.runtime.registerResourceModule("azure", "iot/fallbackRoute", _module);
pulumi.runtime.registerResourceModule("azure", "iot/ioTHub", _module);
pulumi.runtime.registerResourceModule("azure", "iot/iotHubCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "iot/iotHubDps", _module);
pulumi.runtime.registerResourceModule("azure", "iot/route", _module);
pulumi.runtime.registerResourceModule("azure", "iot/securityDeviceGroup", _module);
pulumi.runtime.registerResourceModule("azure", "iot/securitySolution", _module);
pulumi.runtime.registerResourceModule("azure", "iot/sharedAccessPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "iot/timeSeriesInsightsAccessPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "iot/timeSeriesInsightsEventSourceEventhub", _module);
pulumi.runtime.registerResourceModule("azure", "iot/timeSeriesInsightsEventSourceIothub", _module);
pulumi.runtime.registerResourceModule("azure", "iot/timeSeriesInsightsGen2Environment", _module);
pulumi.runtime.registerResourceModule("azure", "iot/timeSeriesInsightsReferenceDataSet", _module);
pulumi.runtime.registerResourceModule("azure", "iot/timeSeriesInsightsStandardEnvironment", _module);
//# sourceMappingURL=index.js.map