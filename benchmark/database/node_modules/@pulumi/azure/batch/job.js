"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Job = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Batch Job.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "west europe"});
 * const exampleAccount = new azure.batch.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const examplePool = new azure.batch.Pool("examplePool", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     accountName: exampleAccount.name,
 *     nodeAgentSkuId: "batch.node.ubuntu 16.04",
 *     vmSize: "Standard_A1",
 *     fixedScale: {
 *         targetDedicatedNodes: 1,
 *     },
 *     storageImageReference: {
 *         publisher: "Canonical",
 *         offer: "UbuntuServer",
 *         sku: "16.04.0-LTS",
 *         version: "latest",
 *     },
 * });
 * const exampleJob = new azure.batch.Job("exampleJob", {batchPoolId: examplePool.id});
 * ```
 *
 * ## Import
 *
 * Batch Jobs can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:batch/job:Job example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Batch/batchAccounts/account1/pools/pool1/jobs/job1
 * ```
 */
class Job extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["batchPoolId"] = state ? state.batchPoolId : undefined;
            resourceInputs["commonEnvironmentProperties"] = state ? state.commonEnvironmentProperties : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["taskRetryMaximum"] = state ? state.taskRetryMaximum : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.batchPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'batchPoolId'");
            }
            resourceInputs["batchPoolId"] = args ? args.batchPoolId : undefined;
            resourceInputs["commonEnvironmentProperties"] = args ? args.commonEnvironmentProperties : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["taskRetryMaximum"] = args ? args.taskRetryMaximum : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Job(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }
}
exports.Job = Job;
/** @internal */
Job.__pulumiType = 'azure:batch/job:Job';
//# sourceMappingURL=job.js.map