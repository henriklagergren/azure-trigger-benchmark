"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Lock = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.
 *
 * ## Example Usage
 * ### Subscription Level Lock)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getSubscription({});
 * const subscription_level = new azure.management.Lock("subscription-level", {
 *     scope: current.then(current => current.id),
 *     lockLevel: "CanNotDelete",
 *     notes: "Items can't be deleted in this subscription!",
 * });
 * ```
 *
 * ##Â Example Usage (Resource Group Level Lock)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {location: "West Europe"});
 * const resource_group_level = new azure.management.Lock("resource-group-level", {
 *     scope: example.id,
 *     lockLevel: "ReadOnly",
 *     notes: "This Resource Group is Read-Only",
 * });
 * ```
 * ### Resource Level Lock)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const examplePublicIp = new azure.network.PublicIp("examplePublicIp", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     allocationMethod: "Static",
 *     idleTimeoutInMinutes: 30,
 * });
 * const public_ip = new azure.management.Lock("public-ip", {
 *     scope: examplePublicIp.id,
 *     lockLevel: "CanNotDelete",
 *     notes: "Locked because it's needed by a third-party",
 * });
 * ```
 *
 * ## Import
 *
 * Management Locks can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:management/lock:Lock lock1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Authorization/locks/lock1
 * ```
 */
class Lock extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["lockLevel"] = state ? state.lockLevel : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.lockLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lockLevel'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["lockLevel"] = args ? args.lockLevel : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure:managementresource/manangementLock:ManangementLock" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Lock.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Lock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Lock(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Lock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lock.__pulumiType;
    }
}
exports.Lock = Lock;
/** @internal */
Lock.__pulumiType = 'azure:management/lock:Lock';
//# sourceMappingURL=lock.js.map