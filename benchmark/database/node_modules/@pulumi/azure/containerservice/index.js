"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./getClusterNodePool"), exports);
__exportStar(require("./getGroup"), exports);
__exportStar(require("./getKubernetesCluster"), exports);
__exportStar(require("./getKubernetesServiceVersions"), exports);
__exportStar(require("./getRegistry"), exports);
__exportStar(require("./getRegistryScopeMap"), exports);
__exportStar(require("./getRegistryToken"), exports);
__exportStar(require("./group"), exports);
__exportStar(require("./kubernetesCluster"), exports);
__exportStar(require("./kubernetesClusterNodePool"), exports);
__exportStar(require("./registry"), exports);
__exportStar(require("./registryScopeMap"), exports);
__exportStar(require("./registryTask"), exports);
__exportStar(require("./registryToken"), exports);
__exportStar(require("./registryWebhook"), exports);
__exportStar(require("./registryWebook"), exports);
// Import resources to register:
const group_1 = require("./group");
const kubernetesCluster_1 = require("./kubernetesCluster");
const kubernetesClusterNodePool_1 = require("./kubernetesClusterNodePool");
const registry_1 = require("./registry");
const registryScopeMap_1 = require("./registryScopeMap");
const registryTask_1 = require("./registryTask");
const registryToken_1 = require("./registryToken");
const registryWebhook_1 = require("./registryWebhook");
const registryWebook_1 = require("./registryWebook");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:containerservice/group:Group":
                return new group_1.Group(name, undefined, { urn });
            case "azure:containerservice/kubernetesCluster:KubernetesCluster":
                return new kubernetesCluster_1.KubernetesCluster(name, undefined, { urn });
            case "azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool":
                return new kubernetesClusterNodePool_1.KubernetesClusterNodePool(name, undefined, { urn });
            case "azure:containerservice/registry:Registry":
                return new registry_1.Registry(name, undefined, { urn });
            case "azure:containerservice/registryScopeMap:RegistryScopeMap":
                return new registryScopeMap_1.RegistryScopeMap(name, undefined, { urn });
            case "azure:containerservice/registryTask:RegistryTask":
                return new registryTask_1.RegistryTask(name, undefined, { urn });
            case "azure:containerservice/registryToken:RegistryToken":
                return new registryToken_1.RegistryToken(name, undefined, { urn });
            case "azure:containerservice/registryWebhook:RegistryWebhook":
                return new registryWebhook_1.RegistryWebhook(name, undefined, { urn });
            case "azure:containerservice/registryWebook:RegistryWebook":
                return new registryWebook_1.RegistryWebook(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "containerservice/group", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/kubernetesCluster", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/kubernetesClusterNodePool", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/registry", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/registryScopeMap", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/registryTask", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/registryToken", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/registryWebhook", _module);
pulumi.runtime.registerResourceModule("azure", "containerservice/registryWebook", _module);
//# sourceMappingURL=index.js.map