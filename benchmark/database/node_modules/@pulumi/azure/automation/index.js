"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./account"), exports);
__exportStar(require("./boolVariable"), exports);
__exportStar(require("./certificate"), exports);
__exportStar(require("./connection"), exports);
__exportStar(require("./connectionCertificate"), exports);
__exportStar(require("./connectionClassicCertificate"), exports);
__exportStar(require("./connectionServicePrincipal"), exports);
__exportStar(require("./credential"), exports);
__exportStar(require("./dateTimeVariable"), exports);
__exportStar(require("./dscConfiguration"), exports);
__exportStar(require("./dscNodeConfiguration"), exports);
__exportStar(require("./getAccount"), exports);
__exportStar(require("./getBoolVariable"), exports);
__exportStar(require("./getDateTimeVariable"), exports);
__exportStar(require("./getIntVariable"), exports);
__exportStar(require("./getStringVariable"), exports);
__exportStar(require("./intVariable"), exports);
__exportStar(require("./jobSchedule"), exports);
__exportStar(require("./module"), exports);
__exportStar(require("./runBook"), exports);
__exportStar(require("./schedule"), exports);
__exportStar(require("./stringVariable"), exports);
__exportStar(require("./webhook"), exports);
// Import resources to register:
const account_1 = require("./account");
const boolVariable_1 = require("./boolVariable");
const certificate_1 = require("./certificate");
const connection_1 = require("./connection");
const connectionCertificate_1 = require("./connectionCertificate");
const connectionClassicCertificate_1 = require("./connectionClassicCertificate");
const connectionServicePrincipal_1 = require("./connectionServicePrincipal");
const credential_1 = require("./credential");
const dateTimeVariable_1 = require("./dateTimeVariable");
const dscConfiguration_1 = require("./dscConfiguration");
const dscNodeConfiguration_1 = require("./dscNodeConfiguration");
const intVariable_1 = require("./intVariable");
const jobSchedule_1 = require("./jobSchedule");
const module_1 = require("./module");
const runBook_1 = require("./runBook");
const schedule_1 = require("./schedule");
const stringVariable_1 = require("./stringVariable");
const webhook_1 = require("./webhook");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:automation/account:Account":
                return new account_1.Account(name, undefined, { urn });
            case "azure:automation/boolVariable:BoolVariable":
                return new boolVariable_1.BoolVariable(name, undefined, { urn });
            case "azure:automation/certificate:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure:automation/connection:Connection":
                return new connection_1.Connection(name, undefined, { urn });
            case "azure:automation/connectionCertificate:ConnectionCertificate":
                return new connectionCertificate_1.ConnectionCertificate(name, undefined, { urn });
            case "azure:automation/connectionClassicCertificate:ConnectionClassicCertificate":
                return new connectionClassicCertificate_1.ConnectionClassicCertificate(name, undefined, { urn });
            case "azure:automation/connectionServicePrincipal:ConnectionServicePrincipal":
                return new connectionServicePrincipal_1.ConnectionServicePrincipal(name, undefined, { urn });
            case "azure:automation/credential:Credential":
                return new credential_1.Credential(name, undefined, { urn });
            case "azure:automation/dateTimeVariable:DateTimeVariable":
                return new dateTimeVariable_1.DateTimeVariable(name, undefined, { urn });
            case "azure:automation/dscConfiguration:DscConfiguration":
                return new dscConfiguration_1.DscConfiguration(name, undefined, { urn });
            case "azure:automation/dscNodeConfiguration:DscNodeConfiguration":
                return new dscNodeConfiguration_1.DscNodeConfiguration(name, undefined, { urn });
            case "azure:automation/intVariable:IntVariable":
                return new intVariable_1.IntVariable(name, undefined, { urn });
            case "azure:automation/jobSchedule:JobSchedule":
                return new jobSchedule_1.JobSchedule(name, undefined, { urn });
            case "azure:automation/module:Module":
                return new module_1.Module(name, undefined, { urn });
            case "azure:automation/runBook:RunBook":
                return new runBook_1.RunBook(name, undefined, { urn });
            case "azure:automation/schedule:Schedule":
                return new schedule_1.Schedule(name, undefined, { urn });
            case "azure:automation/stringVariable:StringVariable":
                return new stringVariable_1.StringVariable(name, undefined, { urn });
            case "azure:automation/webhook:Webhook":
                return new webhook_1.Webhook(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "automation/account", _module);
pulumi.runtime.registerResourceModule("azure", "automation/boolVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/certificate", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connection", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connectionCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connectionClassicCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connectionServicePrincipal", _module);
pulumi.runtime.registerResourceModule("azure", "automation/credential", _module);
pulumi.runtime.registerResourceModule("azure", "automation/dateTimeVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/dscConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "automation/dscNodeConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "automation/intVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/jobSchedule", _module);
pulumi.runtime.registerResourceModule("azure", "automation/module", _module);
pulumi.runtime.registerResourceModule("azure", "automation/runBook", _module);
pulumi.runtime.registerResourceModule("azure", "automation/schedule", _module);
pulumi.runtime.registerResourceModule("azure", "automation/stringVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/webhook", _module);
//# sourceMappingURL=index.js.map