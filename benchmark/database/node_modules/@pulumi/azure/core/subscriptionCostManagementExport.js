"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionCostManagementExport = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Cost Management Export for a Subscription.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleSubscription = azure.core.getSubscription({});
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleContainer = new azure.storage.Container("exampleContainer", {storageAccountName: azurerm_storage_account.test.name});
 * const exampleSubscriptionCostManagementExport = new azure.core.SubscriptionCostManagementExport("exampleSubscriptionCostManagementExport", {
 *     subscriptionId: azurerm_subscription.example.id,
 *     recurrenceType: "Monthly",
 *     recurrencePeriodStartDate: "2020-08-18T00:00:00Z",
 *     recurrencePeriodEndDate: "2020-09-18T00:00:00Z",
 *     exportDataStorageLocation: {
 *         containerId: exampleContainer.resourceManagerId,
 *         rootFolderPath: "/root/updated",
 *     },
 *     exportDataOptions: {
 *         type: "Usage",
 *         timeFrame: "WeekToDate",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Subscription Cost Management Exports can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport example /subscriptions/12345678-1234-9876-4563-123456789012/providers/Microsoft.CostManagement/exports/export1
 * ```
 */
class SubscriptionCostManagementExport extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["exportDataOptions"] = state ? state.exportDataOptions : undefined;
            resourceInputs["exportDataStorageLocation"] = state ? state.exportDataStorageLocation : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recurrencePeriodEndDate"] = state ? state.recurrencePeriodEndDate : undefined;
            resourceInputs["recurrencePeriodStartDate"] = state ? state.recurrencePeriodStartDate : undefined;
            resourceInputs["recurrenceType"] = state ? state.recurrenceType : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.exportDataOptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'exportDataOptions'");
            }
            if ((!args || args.exportDataStorageLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'exportDataStorageLocation'");
            }
            if ((!args || args.recurrencePeriodEndDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrencePeriodEndDate'");
            }
            if ((!args || args.recurrencePeriodStartDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrencePeriodStartDate'");
            }
            if ((!args || args.recurrenceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrenceType'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["exportDataOptions"] = args ? args.exportDataOptions : undefined;
            resourceInputs["exportDataStorageLocation"] = args ? args.exportDataStorageLocation : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recurrencePeriodEndDate"] = args ? args.recurrencePeriodEndDate : undefined;
            resourceInputs["recurrencePeriodStartDate"] = args ? args.recurrencePeriodStartDate : undefined;
            resourceInputs["recurrenceType"] = args ? args.recurrenceType : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SubscriptionCostManagementExport.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SubscriptionCostManagementExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SubscriptionCostManagementExport(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SubscriptionCostManagementExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubscriptionCostManagementExport.__pulumiType;
    }
}
exports.SubscriptionCostManagementExport = SubscriptionCostManagementExport;
/** @internal */
SubscriptionCostManagementExport.__pulumiType = 'azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport';
//# sourceMappingURL=subscriptionCostManagementExport.js.map