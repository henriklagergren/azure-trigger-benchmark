"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./backupInstanceBlogStorage"), exports);
__exportStar(require("./backupInstanceDisk"), exports);
__exportStar(require("./backupInstancePostgresql"), exports);
__exportStar(require("./backupPolicyBlobStorage"), exports);
__exportStar(require("./backupPolicyDisk"), exports);
__exportStar(require("./backupPolicyPostgresql"), exports);
__exportStar(require("./backupVault"), exports);
__exportStar(require("./getBackupVault"), exports);
// Import resources to register:
const backupInstanceBlogStorage_1 = require("./backupInstanceBlogStorage");
const backupInstanceDisk_1 = require("./backupInstanceDisk");
const backupInstancePostgresql_1 = require("./backupInstancePostgresql");
const backupPolicyBlobStorage_1 = require("./backupPolicyBlobStorage");
const backupPolicyDisk_1 = require("./backupPolicyDisk");
const backupPolicyPostgresql_1 = require("./backupPolicyPostgresql");
const backupVault_1 = require("./backupVault");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:dataprotection/backupInstanceBlogStorage:BackupInstanceBlogStorage":
                return new backupInstanceBlogStorage_1.BackupInstanceBlogStorage(name, undefined, { urn });
            case "azure:dataprotection/backupInstanceDisk:BackupInstanceDisk":
                return new backupInstanceDisk_1.BackupInstanceDisk(name, undefined, { urn });
            case "azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql":
                return new backupInstancePostgresql_1.BackupInstancePostgresql(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyBlobStorage:BackupPolicyBlobStorage":
                return new backupPolicyBlobStorage_1.BackupPolicyBlobStorage(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyDisk:BackupPolicyDisk":
                return new backupPolicyDisk_1.BackupPolicyDisk(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyPostgresql:BackupPolicyPostgresql":
                return new backupPolicyPostgresql_1.BackupPolicyPostgresql(name, undefined, { urn });
            case "azure:dataprotection/backupVault:BackupVault":
                return new backupVault_1.BackupVault(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceBlogStorage", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceDisk", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstancePostgresql", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyBlobStorage", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyDisk", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyPostgresql", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupVault", _module);
//# sourceMappingURL=index.js.map