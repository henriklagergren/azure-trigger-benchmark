"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCertificateIssuerOutput = exports.getCertificateIssuer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to access information about an existing Key Vault Certificate Issuer.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleKeyVault = azure.keyvault.getKeyVault({
 *     name: "mykeyvault",
 *     resourceGroupName: "some-resource-group",
 * });
 * const exampleCertificateIssuer = exampleKeyVault.then(exampleKeyVault => azure.keyvault.getCertificateIssuer({
 *     name: "existing",
 *     keyVaultId: exampleKeyVault.id,
 * }));
 * export const id = exampleCertificateIssuer.then(exampleCertificateIssuer => exampleCertificateIssuer.id);
 * ```
 */
function getCertificateIssuer(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:keyvault/getCertificateIssuer:getCertificateIssuer", {
        "keyVaultId": args.keyVaultId,
        "name": args.name,
    }, opts);
}
exports.getCertificateIssuer = getCertificateIssuer;
function getCertificateIssuerOutput(args, opts) {
    return pulumi.output(args).apply(a => getCertificateIssuer(a, opts));
}
exports.getCertificateIssuerOutput = getCertificateIssuerOutput;
//# sourceMappingURL=getCertificateIssuer.js.map