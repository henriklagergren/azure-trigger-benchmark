"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpnGatewayConnection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a VPN Gateway Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualWan = new azure.network.VirtualWan("exampleVirtualWan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("exampleVirtualHub", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     virtualWanId: exampleVirtualWan.id,
 *     addressPrefix: "10.0.0.0/24",
 * });
 * const exampleVpnGateway = new azure.network.VpnGateway("exampleVpnGateway", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualHubId: exampleVirtualHub.id,
 * });
 * const exampleVpnSite = new azure.network.VpnSite("exampleVpnSite", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualWanId: exampleVirtualWan.id,
 *     links: [
 *         {
 *             name: "link1",
 *             ipAddress: "10.1.0.0",
 *         },
 *         {
 *             name: "link2",
 *             ipAddress: "10.2.0.0",
 *         },
 *     ],
 * });
 * const exampleVpnGatewayConnection = new azure.network.VpnGatewayConnection("exampleVpnGatewayConnection", {
 *     vpnGatewayId: exampleVpnGateway.id,
 *     remoteVpnSiteId: exampleVpnSite.id,
 *     vpnLinks: [
 *         {
 *             name: "link1",
 *             vpnSiteLinkId: exampleVpnSite.links.apply(links => links?[0]?.id),
 *         },
 *         {
 *             name: "link2",
 *             vpnSiteLinkId: exampleVpnSite.links.apply(links => links?[1]?.id),
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * VPN Gateway Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/vpnGatewayConnection:VpnGatewayConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/conn1
 * ```
 */
class VpnGatewayConnection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["internetSecurityEnabled"] = state ? state.internetSecurityEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["remoteVpnSiteId"] = state ? state.remoteVpnSiteId : undefined;
            resourceInputs["routings"] = state ? state.routings : undefined;
            resourceInputs["trafficSelectorPolicies"] = state ? state.trafficSelectorPolicies : undefined;
            resourceInputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
            resourceInputs["vpnLinks"] = state ? state.vpnLinks : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.remoteVpnSiteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteVpnSiteId'");
            }
            if ((!args || args.vpnGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            if ((!args || args.vpnLinks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnLinks'");
            }
            resourceInputs["internetSecurityEnabled"] = args ? args.internetSecurityEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["remoteVpnSiteId"] = args ? args.remoteVpnSiteId : undefined;
            resourceInputs["routings"] = args ? args.routings : undefined;
            resourceInputs["trafficSelectorPolicies"] = args ? args.trafficSelectorPolicies : undefined;
            resourceInputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
            resourceInputs["vpnLinks"] = args ? args.vpnLinks : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnGatewayConnection.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VpnGatewayConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VpnGatewayConnection(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpnGatewayConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnGatewayConnection.__pulumiType;
    }
}
exports.VpnGatewayConnection = VpnGatewayConnection;
/** @internal */
VpnGatewayConnection.__pulumiType = 'azure:network/vpnGatewayConnection:VpnGatewayConnection';
//# sourceMappingURL=vpnGatewayConnection.js.map