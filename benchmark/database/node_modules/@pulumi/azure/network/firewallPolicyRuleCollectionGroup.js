"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallPolicyRuleCollectionGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Firewall Policy Rule Collection Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleFirewallPolicy = new azure.network.FirewallPolicy("exampleFirewallPolicy", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleFirewallPolicyRuleCollectionGroup = new azure.network.FirewallPolicyRuleCollectionGroup("exampleFirewallPolicyRuleCollectionGroup", {
 *     firewallPolicyId: exampleFirewallPolicy.id,
 *     priority: 500,
 *     applicationRuleCollections: [{
 *         name: "app_rule_collection1",
 *         priority: 500,
 *         action: "Deny",
 *         rules: [{
 *             name: "app_rule_collection1_rule1",
 *             protocols: [
 *                 {
 *                     type: "Http",
 *                     port: 80,
 *                 },
 *                 {
 *                     type: "Https",
 *                     port: 443,
 *                 },
 *             ],
 *             sourceAddresses: ["10.0.0.1"],
 *             destinationFqdns: [".microsoft.com"],
 *         }],
 *     }],
 *     networkRuleCollections: [{
 *         name: "network_rule_collection1",
 *         priority: 400,
 *         action: "Deny",
 *         rules: [{
 *             name: "network_rule_collection1_rule1",
 *             protocols: [
 *                 "TCP",
 *                 "UDP",
 *             ],
 *             sourceAddresses: ["10.0.0.1"],
 *             destinationAddresses: [
 *                 "192.168.1.1",
 *                 "192.168.1.2",
 *             ],
 *             destinationPorts: [
 *                 "80",
 *                 "1000-2000",
 *             ],
 *         }],
 *     }],
 *     natRuleCollections: [{
 *         name: "nat_rule_collection1",
 *         priority: 300,
 *         action: "Dnat",
 *         rules: [{
 *             name: "nat_rule_collection1_rule1",
 *             protocols: [
 *                 "TCP",
 *                 "UDP",
 *             ],
 *             sourceAddresses: [
 *                 "10.0.0.1",
 *                 "10.0.0.2",
 *             ],
 *             destinationAddress: "192.168.1.1",
 *             destinationPorts: [
 *                 "80",
 *                 "1000-2000",
 *             ],
 *             translatedAddress: "192.168.0.1",
 *             translatedPort: "8080",
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Firewall Policy Rule Collection Groups can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/firewallPolicyRuleCollectionGroup:FirewallPolicyRuleCollectionGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/firewallPolicies/policy1/ruleCollectionGroups/gruop1
 * ```
 */
class FirewallPolicyRuleCollectionGroup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["applicationRuleCollections"] = state ? state.applicationRuleCollections : undefined;
            resourceInputs["firewallPolicyId"] = state ? state.firewallPolicyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["natRuleCollections"] = state ? state.natRuleCollections : undefined;
            resourceInputs["networkRuleCollections"] = state ? state.networkRuleCollections : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.firewallPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallPolicyId'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            resourceInputs["applicationRuleCollections"] = args ? args.applicationRuleCollections : undefined;
            resourceInputs["firewallPolicyId"] = args ? args.firewallPolicyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["natRuleCollections"] = args ? args.natRuleCollections : undefined;
            resourceInputs["networkRuleCollections"] = args ? args.networkRuleCollections : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallPolicyRuleCollectionGroup.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FirewallPolicyRuleCollectionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FirewallPolicyRuleCollectionGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FirewallPolicyRuleCollectionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallPolicyRuleCollectionGroup.__pulumiType;
    }
}
exports.FirewallPolicyRuleCollectionGroup = FirewallPolicyRuleCollectionGroup;
/** @internal */
FirewallPolicyRuleCollectionGroup.__pulumiType = 'azure:network/firewallPolicyRuleCollectionGroup:FirewallPolicyRuleCollectionGroup';
//# sourceMappingURL=firewallPolicyRuleCollectionGroup.js.map